// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.IO.IsolatedStorage;
using System;
using System.IO;

namespace System.IO.IsolatedStorage {
    public abstract class IsolatedStorage: System.MarshalByRefObject {

        public System.Object ApplicationIdentity {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ApplicationIdentity));
				return default (Object);
			}
		}
        public System.Object AssemblyIdentity {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AssemblyIdentity));
				return default (Object);
			}
		}
        public virtual long CurrentSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CurrentSize));
				return 0;
			}
		}
        public System.Object DomainIdentity {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DomainIdentity));
				return default (Object);
			}
		}
        public virtual long MaximumSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MaximumSize));
				return 0;
			}
		}
        public System.IO.IsolatedStorage.IsolatedStorageScope Scope {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Scope));
				return default (IsolatedStorageScope);
			}
		}
        public virtual long AvailableFreeSpace {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AvailableFreeSpace));
				return default (Int64);
			}
		}
        public virtual long Quota {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Quota));
				return default (Int64);
			}
		}
        public virtual long UsedSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UsedSize));
				return default (Int64);
			}
		}
        internal virtual char SeparatorExternal {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SeparatorExternal));
				return default (Char);
			}
		}
        internal virtual char SeparatorInternal {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SeparatorInternal));
				return default (Char);
			}
		}
        protected abstract System.Security.Permissions.IsolatedStoragePermission GetPermission( System.Security.PermissionSet ps );

        protected void InitStore( System.IO.IsolatedStorage.IsolatedStorageScope scope, System.Type domainEvidenceType, System.Type assemblyEvidenceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InitStore), typeof(IsolatedStorageScope), typeof(Type), typeof(Type) );
		}
        protected void InitStore( System.IO.IsolatedStorage.IsolatedStorageScope scope, System.Type appEvidenceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InitStore), typeof(IsolatedStorageScope), typeof(Type) );
		}
        public abstract void Remove();

        public virtual bool IncreaseQuotaTo( long newQuotaSize ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IncreaseQuotaTo), typeof(Int64) );
            return default( bool );

		}
    }
}