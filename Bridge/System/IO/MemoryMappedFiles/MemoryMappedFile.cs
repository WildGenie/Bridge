// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.IO;

namespace System.IO.MemoryMappedFiles {
    public class MemoryMappedFile: System.IDisposable {

        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( string path ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(String) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( string path, System.IO.FileMode mode ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(String), typeof(FileMode) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( string path, System.IO.FileMode mode, string mapName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(String), typeof(FileMode), typeof(String) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( string path, System.IO.FileMode mode, string mapName, long capacity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(String), typeof(FileMode), typeof(String), typeof(Int64) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(String), typeof(FileMode), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(FileStream), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(HandleInheritability), typeof(Boolean) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile( System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateFromFile), typeof(FileStream), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(MemoryMappedFileSecurity), typeof(HandleInheritability), typeof(Boolean) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew( string mapName, long capacity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateNew), typeof(String), typeof(Int64) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateNew), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateNew), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(MemoryMappedFileOptions), typeof(HandleInheritability) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateNew), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(MemoryMappedFileOptions), typeof(MemoryMappedFileSecurity), typeof(HandleInheritability) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen( string mapName, long capacity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateOrOpen), typeof(String), typeof(Int64) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateOrOpen), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateOrOpen), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(MemoryMappedFileOptions), typeof(HandleInheritability) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen( string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateOrOpen), typeof(String), typeof(Int64), typeof(MemoryMappedFileAccess), typeof(MemoryMappedFileOptions), typeof(MemoryMappedFileSecurity), typeof(HandleInheritability) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting( string mapName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OpenExisting), typeof(String) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting( string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OpenExisting), typeof(String), typeof(MemoryMappedFileRights) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting( string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OpenExisting), typeof(String), typeof(MemoryMappedFileRights), typeof(HandleInheritability) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFile );

		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAccessControl) );
            return default( System.IO.MemoryMappedFiles.MemoryMappedFileSecurity );

		}
        public void SetAccessControl( System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAccessControl), typeof(MemoryMappedFileSecurity) );
		}
        internal static System.IO.FileAccess GetFileAccess( System.IO.MemoryMappedFiles.MemoryMappedFileAccess access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetFileAccess), typeof(MemoryMappedFileAccess) );
            return default( System.IO.FileAccess );

		}
    }
}