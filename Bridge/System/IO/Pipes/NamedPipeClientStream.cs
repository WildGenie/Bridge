// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.IO.Pipes;
using System.Security.Principal;
using System.Threading.Tasks;
using System.Threading;

namespace System.IO.Pipes {
    public class NamedPipeClientStream: System.IO.Pipes.PipeStream {

        public int NumberOfServerInstances {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NumberOfServerInstances));
				return default (Int32);
			}
		}
        public NamedPipeClientStream( string pipeName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String));
            }
        public NamedPipeClientStream( string serverName, string pipeName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String));
            }
        public NamedPipeClientStream( string serverName, string pipeName, System.IO.Pipes.PipeDirection direction )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String), typeof(PipeDirection));
            }
        public NamedPipeClientStream( string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String), typeof(PipeDirection), typeof(PipeOptions));
            }
        public NamedPipeClientStream( string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String), typeof(PipeDirection), typeof(PipeOptions), typeof(TokenImpersonationLevel));
            }
        public NamedPipeClientStream( string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String), typeof(PipeDirection), typeof(PipeOptions), typeof(TokenImpersonationLevel), typeof(HandleInheritability));
            }
        public NamedPipeClientStream( string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPipeClientStream), typeof(String), typeof(String), typeof(PipeAccessRights), typeof(PipeOptions), typeof(TokenImpersonationLevel), typeof(HandleInheritability));
            }
        public void Connect() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect) );
		}
        public void Connect( int timeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(Int32) );
		}
        public System.Threading.Tasks.Task ConnectAsync() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync) );
            return default( System.Threading.Tasks.Task );

		}
        public System.Threading.Tasks.Task ConnectAsync( int timeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Int32) );
            return default( System.Threading.Tasks.Task );

		}
        public System.Threading.Tasks.Task ConnectAsync( System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(CancellationToken) );
            return default( System.Threading.Tasks.Task );

		}
        public System.Threading.Tasks.Task ConnectAsync( int timeout, System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Int32), typeof(CancellationToken) );
            return default( System.Threading.Tasks.Task );

		}
        internal override void CheckPipePropertyOperations() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckPipePropertyOperations) );
		}
    }
}