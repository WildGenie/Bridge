// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.IO.Pipes;
using System.IO;
using System.Runtime.InteropServices;

namespace System.IO.Pipes {
    public abstract class PipeStream: System.IO.Stream {

        internal const int DefaultBufferSize = 1024;

        internal static bool IsWindows {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsWindows));
				return default (Boolean);
			}
		}
        public override bool CanRead {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanRead));
				return default (Boolean);
			}
		}
        public override bool CanSeek {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanSeek));
				return default (Boolean);
			}
		}
        public override bool CanWrite {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanWrite));
				return default (Boolean);
			}
		}
        public virtual int InBufferSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InBufferSize));
				return default (Int32);
			}
		}
        public bool IsAsync {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAsync));
				return default (Boolean);
			}
		}
        public bool IsConnected {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsConnected));
				return default (Boolean);
			}
		}
        internal System.IO.Stream Stream {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Stream));
				return default (Stream);
			}
		}
        internal bool IsHandleExposed {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsHandleExposed));
				return default (Boolean);
			}
		}
        public bool IsMessageComplete {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsMessageComplete));
				return default (Boolean);
			}
		}
        public virtual int OutBufferSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OutBufferSize));
				return default (Int32);
			}
		}
        public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
        public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TransmissionMode));
				return default (PipeTransmissionMode);
			}
		}
        public override long Length {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Length));
				return default (Int64);
			}
		}
        public override long Position { get; set; }
        internal System.Exception ThrowACLException() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ThrowACLException) );
            return default( System.Exception );

		}
        internal static System.IO.Pipes.PipeAccessRights ToAccessRights( System.IO.Pipes.PipeDirection direction ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToAccessRights), typeof(PipeDirection) );
            return default( System.IO.Pipes.PipeAccessRights );

		}
        internal static System.IO.Pipes.PipeDirection ToDirection( System.IO.Pipes.PipeAccessRights rights ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToDirection), typeof(PipeAccessRights) );
            return default( System.IO.Pipes.PipeDirection );

		}
        internal virtual void CheckPipePropertyOperations() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckPipePropertyOperations) );
		}
        internal void CheckReadOperations() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckReadOperations) );
		}
        internal void CheckWriteOperations() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckWriteOperations) );
		}
        protected override void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public override void SetLength( long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetLength), typeof(Int64) );
		}
        public override long Seek( long offset, System.IO.SeekOrigin origin ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Seek), typeof(Int64), typeof(SeekOrigin) );
            return default( long );

		}
        public System.IO.Pipes.PipeSecurity GetAccessControl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAccessControl) );
            return default( System.IO.Pipes.PipeSecurity );

		}
        public void SetAccessControl( System.IO.Pipes.PipeSecurity pipeSecurity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAccessControl), typeof(PipeSecurity) );
		}
        public void WaitForPipeDrain() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WaitForPipeDrain) );
		}
        public override int Read( byte[] buffer, int offset, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Byte[]), typeof(Int32), typeof(Int32) );
            return default( int );

		}
        public override int ReadByte() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadByte) );
            return default( int );

		}
        public override void Write( byte[] buffer, int offset, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Byte[]), typeof(Int32), typeof(Int32) );
		}
        public override void WriteByte( byte value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteByte), typeof(Byte) );
		}
        public override void Flush() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Flush) );
		}
        public override System.IAsyncResult BeginRead( byte[] buffer, int offset, int count, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginRead), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override System.IAsyncResult BeginWrite( byte[] buffer, int offset, int count, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginWrite), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override int EndRead( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndRead), typeof(IAsyncResult) );
            return default( int );

		}
        public override void EndWrite( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndWrite), typeof(IAsyncResult) );
		}
    }
}