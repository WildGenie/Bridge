// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.IO.Pipes;
using System.IO;

namespace System.IO.Pipes {
    public class AnonymousPipeServerStream: System.IO.Pipes.PipeStream {

        public override System.IO.Pipes.PipeTransmissionMode ReadMode {
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadMode));
			 }
		}
        public override System.IO.Pipes.PipeTransmissionMode TransmissionMode {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TransmissionMode));
				return default (PipeTransmissionMode);
			}
		}
        public AnonymousPipeServerStream(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AnonymousPipeServerStream));
            }
        public AnonymousPipeServerStream( System.IO.Pipes.PipeDirection direction )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AnonymousPipeServerStream), typeof(PipeDirection));
            }
        public AnonymousPipeServerStream( System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AnonymousPipeServerStream), typeof(PipeDirection), typeof(HandleInheritability));
            }
        public AnonymousPipeServerStream( System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AnonymousPipeServerStream), typeof(PipeDirection), typeof(HandleInheritability), typeof(Int32));
            }
        public AnonymousPipeServerStream( System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AnonymousPipeServerStream), typeof(PipeDirection), typeof(HandleInheritability), typeof(Int32), typeof(PipeSecurity));
            }
        public void DisposeLocalCopyOfClientHandle() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DisposeLocalCopyOfClientHandle) );
		}
        public string GetClientHandleAsString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetClientHandleAsString) );
            return default( string );

		}
    }
}