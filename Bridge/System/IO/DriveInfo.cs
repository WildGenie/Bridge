// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Serialization;
using System;
using System.IO;

namespace System.IO {
    public class DriveInfo: System.Runtime.Serialization.ISerializable {

        public long AvailableFreeSpace {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AvailableFreeSpace));
				return default (Int64);
			}
		}
        public long TotalFreeSpace {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TotalFreeSpace));
				return default (Int64);
			}
		}
        public long TotalSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TotalSize));
				return default (Int64);
			}
		}
        public string VolumeLabel { get; set; }
        public string DriveFormat {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DriveFormat));
				return default (String);
			}
		}
        public System.IO.DriveType DriveType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DriveType));
				return default (DriveType);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public System.IO.DirectoryInfo RootDirectory {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RootDirectory));
				return default (DirectoryInfo);
			}
		}
        public bool IsReady {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReady));
				return default (Boolean);
			}
		}
        public DriveInfo( string driveName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DriveInfo), typeof(String));
            }
        public static System.IO.DriveInfo[][] GetDrives() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetDrives) );
            return default( System.IO.DriveInfo[][] );

		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
    }
}