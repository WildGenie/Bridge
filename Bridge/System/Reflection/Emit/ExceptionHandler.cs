// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

namespace System.Reflection.Emit {

    public struct ExceptionHandler {
        public ExceptionHandler( int tryOffset, int tryLength, int filterOffset, int handlerOffset, int handlerLength,
            ExceptionHandlingClauseOptions kind, int exceptionTypeToken ) { }

        public int ExceptionTypeToken => default( int );
        public int TryOffset => default( int );
        public int TryLength => default( int );
        public int FilterOffset => default( int );
        public int HandlerOffset => default( int );
        public int HandlerLength => default( int );
        public ExceptionHandlingClauseOptions Kind => default( ExceptionHandlingClauseOptions );

        public override int GetHashCode() {
            return default( int );
        }

        public override bool Equals( object obj ) {
            return default( bool );
        }

        public bool Equals( ExceptionHandler other ) {
            return default( bool );
        }

        public static bool operator ==( ExceptionHandler left, ExceptionHandler right ) {
            return default( bool );
        }

        public static bool operator !=( ExceptionHandler left, ExceptionHandler right ) {
            return default( bool );
        }
    }

}
