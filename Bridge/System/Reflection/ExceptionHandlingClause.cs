// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Reflection;

namespace System.Reflection {
    public class ExceptionHandlingClause {

        public virtual System.Type CatchType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CatchType));
				return default (Type);
			}
		}
        public virtual int FilterOffset {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FilterOffset));
				return default (Int32);
			}
		}
        public virtual int HandlerLength {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HandlerLength));
				return default (Int32);
			}
		}
        public virtual int HandlerOffset {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HandlerOffset));
				return default (Int32);
			}
		}
        public virtual int TryLength {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryLength));
				return default (Int32);
			}
		}
        public virtual int TryOffset {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryOffset));
				return default (Int32);
			}
		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
    }
}