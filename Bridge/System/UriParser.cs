// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Collections.Generic;

namespace System {
    public abstract class UriParser {
        internal string SchemeName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SchemeName));
				return default (String);
			}
		}
        internal int DefaultPort {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DefaultPort));
				return default (Int32);
			}
		}
        internal static bool ShouldUseLegacyV2Quirks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ShouldUseLegacyV2Quirks));
				return default (Boolean);
			}
		}
        internal bool IsSimple {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSimple));
				return default (Boolean);
			}
		}
        protected virtual System.UriParser OnNewUri() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnNewUri) );
            return default( System.UriParser );

		}
        protected virtual void OnRegister( string schemeName, int defaultPort ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnRegister), typeof(String), typeof(Int32) );
		}
        protected virtual void InitializeAndValidate( System.Uri uri, out System.UriFormatException parsingError ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InitializeAndValidate), typeof(Uri), typeof(UriFormatException) );
            parsingError = default( System.UriFormatException );

		}
        protected virtual string Resolve( System.Uri baseUri, System.Uri relativeUri, out System.UriFormatException parsingError ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Resolve), typeof(Uri), typeof(Uri), typeof(UriFormatException) );
            parsingError = default( System.UriFormatException );

            return default( string );

		}
        protected virtual bool IsBaseOf( System.Uri baseUri, System.Uri relativeUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsBaseOf), typeof(Uri), typeof(Uri) );
            return default( bool );

		}
        protected virtual string GetComponents( System.Uri uri, System.UriComponents components, System.UriFormat format ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetComponents), typeof(Uri), typeof(UriComponents), typeof(UriFormat) );
            return default( string );

		}
        protected virtual bool IsWellFormedOriginalString( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsWellFormedOriginalString), typeof(Uri) );
            return default( bool );

		}
        public static void Register( System.UriParser uriParser, string schemeName, int defaultPort ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Register), typeof(UriParser), typeof(String), typeof(Int32) );
		}
        public static bool IsKnownScheme( string schemeName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsKnownScheme), typeof(String) );
            return default( bool );

		}
        internal static System.UriParser FindOrFetchAsUnknownV1Syntax( string lwrCaseScheme ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FindOrFetchAsUnknownV1Syntax), typeof(String) );
            return default( System.UriParser );

		}
        internal static System.UriParser GetSyntax( string lwrCaseScheme ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSyntax), typeof(String) );
            return default( System.UriParser );

		}
        internal void CheckSetIsSimpleFlag() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckSetIsSimpleFlag) );
		}
        internal System.UriParser InternalOnNewUri() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalOnNewUri) );
            return default( System.UriParser );

		}
        internal void InternalValidate( System.Uri thisUri, out System.UriFormatException parsingError ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalValidate), typeof(Uri), typeof(UriFormatException) );
            parsingError = default( System.UriFormatException );

		}
        internal string InternalResolve( System.Uri thisBaseUri, System.Uri uriLink, out System.UriFormatException parsingError ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalResolve), typeof(Uri), typeof(Uri), typeof(UriFormatException) );
            parsingError = default( System.UriFormatException );

            return default( string );

		}
        internal bool InternalIsBaseOf( System.Uri thisBaseUri, System.Uri uriLink ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalIsBaseOf), typeof(Uri), typeof(Uri) );
            return default( bool );

		}
        internal string InternalGetComponents( System.Uri thisUri, System.UriComponents uriComponents, System.UriFormat uriFormat ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalGetComponents), typeof(Uri), typeof(UriComponents), typeof(UriFormat) );
            return default( string );

		}
        internal bool InternalIsWellFormedOriginalString( System.Uri thisUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalIsWellFormedOriginalString), typeof(Uri) );
            return default( bool );

		}
    }
}