// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System;

namespace System {
    public class NotFiniteNumberException: System.ArithmeticException {

        public double OffendingNumber {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OffendingNumber));
				return default (Double);
			}
		}
        public NotFiniteNumberException(  ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException));
            }
        public NotFiniteNumberException( double offendingNumber ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException), typeof(Double));
            }
        public NotFiniteNumberException( string message ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException), typeof(String));
            }
        public NotFiniteNumberException( string message, double offendingNumber ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException), typeof(String), typeof(Double));
            }
        public NotFiniteNumberException( string message, System.Exception innerException ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException), typeof(String), typeof(Exception));
            }
        public NotFiniteNumberException( string message, double offendingNumber, System.Exception innerException ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotFiniteNumberException), typeof(String), typeof(Double), typeof(Exception));
            }
        public void GetObjectData( System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectData), typeof(SerializationInfo), typeof(StreamingContext) );
		}
    }
}