// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Globalization;

namespace System {
    public abstract class TimeZone {

        public static System.TimeZone CurrentTimeZone {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CurrentTimeZone));
				return default (TimeZone);
			}
		}
        public abstract string DaylightName { get; }

        public abstract string StandardName { get; }
        public abstract System.Globalization.DaylightTime GetDaylightChanges( int year );

        public abstract System.TimeSpan GetUtcOffset( System.DateTime time );

        public virtual bool IsDaylightSavingTime( System.DateTime time ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDaylightSavingTime), typeof(DateTime) );
            return default( bool );

		}
        public static bool IsDaylightSavingTime( System.DateTime time, System.Globalization.DaylightTime daylightTimes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDaylightSavingTime), typeof(DateTime), typeof(DaylightTime) );
            return default( bool );

		}
        public virtual System.DateTime ToLocalTime( System.DateTime time ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToLocalTime), typeof(DateTime) );
            return default( System.DateTime );

		}
        public virtual System.DateTime ToUniversalTime( System.DateTime time ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToUniversalTime), typeof(DateTime) );
            return default( System.DateTime );

		}
        internal static void ClearCachedData() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ClearCachedData) );
		}
    }
}