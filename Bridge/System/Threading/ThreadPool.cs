// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading;
using System.Runtime.InteropServices;
using System.Collections.Generic;
using System.Collections;

namespace System.Threading {
    public static class ThreadPool {

        public static bool SetMaxThreads( int workerThreads, int completionPortThreads ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetMaxThreads), typeof(Int32), typeof(Int32) );
            return default( bool );

		}
        public static void GetMaxThreads( out System.Int32 workerThreads, out System.Int32 completionPortThreads ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetMaxThreads), typeof(Int32), typeof(Int32) );
            workerThreads = default( System.Int32 ); completionPortThreads = default( System.Int32 );

		}
        public static bool SetMinThreads( int workerThreads, int completionPortThreads ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetMinThreads), typeof(Int32), typeof(Int32) );
            return default( bool );

		}
        public static void GetMinThreads( out System.Int32 workerThreads, out System.Int32 completionPortThreads ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetMinThreads), typeof(Int32), typeof(Int32) );
            workerThreads = default( System.Int32 ); completionPortThreads = default( System.Int32 );

		}
        public static void GetAvailableThreads( out System.Int32 workerThreads, out System.Int32 completionPortThreads ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAvailableThreads), typeof(Int32), typeof(Int32) );
            workerThreads = default( System.Int32 ); completionPortThreads = default( System.Int32 );

		}
        public static System.Threading.RegisteredWaitHandle RegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, int millisecondsTimeOutInterval, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(UInt32), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static System.Threading.RegisteredWaitHandle UnsafeRegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, int millisecondsTimeOutInterval, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeRegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(Int32), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static System.Threading.RegisteredWaitHandle RegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, long millisecondsTimeOutInterval, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(Int64), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static System.Threading.RegisteredWaitHandle UnsafeRegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, long millisecondsTimeOutInterval, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeRegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(Int64), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static System.Threading.RegisteredWaitHandle RegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, System.TimeSpan timeout, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(TimeSpan), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static System.Threading.RegisteredWaitHandle UnsafeRegisterWaitForSingleObject( System.Threading.WaitHandle waitObject, System.Threading.WaitOrTimerCallback callBack, System.Object state, System.TimeSpan timeout, bool executeOnlyOnce ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeRegisterWaitForSingleObject), typeof(WaitHandle), typeof(WaitOrTimerCallback), typeof(Object), typeof(TimeSpan), typeof(Boolean) );
            return default( System.Threading.RegisteredWaitHandle );

		}
        public static bool QueueUserWorkItem( System.Threading.WaitCallback callBack, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(QueueUserWorkItem), typeof(WaitCallback), typeof(Object) );
            return default( bool );

		}
        public static bool QueueUserWorkItem( System.Threading.WaitCallback callBack ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(QueueUserWorkItem), typeof(WaitCallback) );
            return default( bool );

		}
        public static bool UnsafeQueueUserWorkItem( System.Threading.WaitCallback callBack, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeQueueUserWorkItem), typeof(WaitCallback), typeof(Object) );
            return default( bool );

		}
        internal static System.Object[][] GetQueuedWorkItemsForDebugger() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetQueuedWorkItemsForDebugger) );
            return default( System.Object[][] );

		}
        internal static System.Object[][] GetGloballyQueuedWorkItemsForDebugger() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetGloballyQueuedWorkItemsForDebugger) );
            return default( System.Object[][] );

		}
        internal static System.Object[][] GetLocallyQueuedWorkItemsForDebugger() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetLocallyQueuedWorkItemsForDebugger) );
            return default( System.Object[][] );

		}
        internal static bool RequestWorkerThread() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RequestWorkerThread) );
            return default( bool );

		}
        internal static bool NotifyWorkItemComplete() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotifyWorkItemComplete) );
            return default( bool );

		}
        internal static void ReportThreadStatus( bool isWorking ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReportThreadStatus), typeof(Boolean) );
		}
        internal static void NotifyWorkItemProgress() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotifyWorkItemProgress) );
		}
        internal static void NotifyWorkItemProgressNative() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotifyWorkItemProgressNative) );
		}
        internal static bool IsThreadPoolHosted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsThreadPoolHosted) );
            return default( bool );

		}
        public static bool BindHandle( System.IntPtr osHandle ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindHandle), typeof(IntPtr) );
            return default( bool );

		}
        public static bool BindHandle( System.Runtime.InteropServices.SafeHandle osHandle ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindHandle), typeof(SafeHandle) );
            return default( bool );

		}
    }
}