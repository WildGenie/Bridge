// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading;

namespace System.Threading {
    public struct SpinLock {

        public bool IsHeld {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsHeld));
				return default (Boolean);
			}
		}
        public bool IsHeldByCurrentThread {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsHeldByCurrentThread));
				return default (Boolean);
			}
		}
        public bool IsThreadOwnerTrackingEnabled {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsThreadOwnerTrackingEnabled));
				return default (Boolean);
			}
		}
        public SpinLock( bool enableThreadOwnerTracking )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SpinLock), typeof(Boolean));

            }
        public void Enter( ref System.Boolean lockTaken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Enter), typeof(Boolean) );
		}
        public void TryEnter( ref System.Boolean lockTaken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryEnter), typeof(Boolean) );
		}
        public void TryEnter( System.TimeSpan timeout, ref System.Boolean lockTaken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryEnter), typeof(TimeSpan), typeof(Boolean) );
		}
        public void TryEnter( int millisecondsTimeout, ref System.Boolean lockTaken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryEnter), typeof(Int32), typeof(Boolean) );
		}
        public void Exit() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exit) );
		}
        public void Exit( bool useMemoryBarrier ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exit), typeof(Boolean) );
		}
        public class SystemThreading_SpinLockDebugView {

        public System.Nullable<bool> IsHeldByCurrentThread {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsHeldByCurrentThread));
				return default (Nullable<bool>);
			}
		}
        public System.Nullable<int> OwnerThreadID {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OwnerThreadID));
				return default (Nullable<int>);
			}
		}
        public bool IsHeld {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsHeld));
				return default (Boolean);
			}
		}
        public SystemThreading_SpinLockDebugView( System.Threading.SpinLock spinLock )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SystemThreading_SpinLockDebugView), typeof(SpinLock));
            }
        }
    }
}