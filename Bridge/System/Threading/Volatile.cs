// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading;

namespace System.Threading {
    public static class Volatile {

        public static bool Read( ref System.Boolean location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Boolean) );
            return default( bool );

		}
        public static byte Read( ref System.Byte location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Byte) );
            return default( byte );

		}

        public static System.Int16 Read( ref System.Int16 location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Int16) );
            return default( System.Int16 );

		}

        public static int Read( ref System.Int32 location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Int32) );
            return default( int );

		}
        public static long Read( ref System.Int64 location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Int64) );
            return default( long );

		}

        public static System.IntPtr Read( ref System.IntPtr location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(IntPtr) );
            return default( System.IntPtr );

		}
        public static double Read( ref System.Double location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Double) );
            return default( double );

		}
        public static float Read( ref System.Single location ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Single) );
            return default( float );

		}
        public static T Read<T>( ref T location )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(T) );
            return default( T );

		}
        public static void Write( ref System.Boolean location, bool value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Boolean), typeof(Boolean) );
		}
        public static void Write( ref System.Byte location, byte value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Byte), typeof(Byte) );
		}

        public static void Write( ref System.Int16 location, System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Int16), typeof(Int16) );
		}

        public static void Write( ref System.Int32 location, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Int32), typeof(Int32) );
		}
        public static void Write( ref System.Int64 location, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Int64), typeof(Int64) );
		}
        public static void Write( ref System.IntPtr location, System.IntPtr value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(IntPtr), typeof(IntPtr) );
		}
        public static void Write( ref System.Double location, double value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Double), typeof(Double) );
		}
        public static void Write( ref System.Single location, float value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Single), typeof(Single) );
		}
        public static void Write<T>( ref T location, T value )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(T), typeof(T) );
		}
    }
}