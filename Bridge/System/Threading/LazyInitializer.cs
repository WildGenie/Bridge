// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Threading;
using System;

namespace System.Threading {
    public static class LazyInitializer {

        public static T EnsureInitialized<T>( ref T target )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnsureInitialized), typeof(T) );
            return default( T );

		}
        public static T EnsureInitialized<T>( ref T target, Func<T> valueFactory )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnsureInitialized), typeof(T), typeof(Func<T>) );
            return default( T );

		}
        public static T EnsureInitialized<T>( ref T target, ref System.Boolean initialized, ref System.Object syncLock ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnsureInitialized), typeof(T), typeof(Boolean), typeof(Object) );
            return default( T );

		}
        public static T EnsureInitialized<T>( ref T target, ref System.Boolean initialized, ref System.Object syncLock, Func<T> valueFactory ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnsureInitialized), typeof(T), typeof(Boolean), typeof(Object), typeof(Func<T>) );
            return default( T );

		}
    }
}