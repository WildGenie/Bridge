// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading.Tasks;
using System.Runtime.CompilerServices;
using System.Threading;

namespace System.Threading.Tasks {
    public struct ValueTask<TResult> {

        internal readonly System.Threading.Tasks.Task<TResult> _task;

        internal readonly TResult _result;

        public bool IsCompleted {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsCompleted));
				return default (Boolean);
			}
		}
        public bool IsCompletedSuccessfully {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsCompletedSuccessfully));
				return default (Boolean);
			}
		}
        public bool IsFaulted {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsFaulted));
				return default (Boolean);
			}
		}
        public bool IsCanceled {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsCanceled));
				return default (Boolean);
			}
		}
        public TResult Result {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Result));
				return default (TResult);
			}
		}
        public ValueTask( TResult result )
        {
            Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ValueTask<TResult>), typeof(TResult));
            _task = null;
            _result = default;
        }
        public ValueTask( System.Threading.Tasks.Task<TResult> task )
        {
            Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ValueTask<TResult>), typeof(Task<TResult>));

            _task = null;
            _result = default;
        }
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
        public override bool Equals( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );

		}
        public bool Equals( System.Threading.Tasks.ValueTask<TResult> other ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(ValueTask<TResult>) );
            return default( bool );

		}
        public System.Threading.Tasks.Task<TResult> AsTask() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AsTask) );
            return default( System.Threading.Tasks.Task<TResult> );

		}
        public System.Runtime.CompilerServices.ValueTaskAwaiter<TResult> GetAwaiter() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAwaiter) );
            return default( System.Runtime.CompilerServices.ValueTaskAwaiter<TResult> );

		}
        public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable<TResult> ConfigureAwait( bool continueOnCapturedContext ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConfigureAwait), typeof(Boolean) );
            return default( System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable<TResult> );

		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
        public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TResult> CreateAsyncMethodBuilder() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateAsyncMethodBuilder) );
            return default( System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TResult> );

		}
    }
}