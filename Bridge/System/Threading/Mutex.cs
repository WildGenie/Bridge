// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.AccessControl;
using System.Threading;

namespace System.Threading {
    public class Mutex: System.Threading.WaitHandle {

        public Mutex(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Mutex));
            }
        public Mutex( bool initiallyOwned )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Mutex), typeof(Boolean));
            }
        public Mutex( bool initiallyOwned, string name )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Mutex), typeof(Boolean), typeof(String));
            }
        public Mutex( bool initiallyOwned, string name, System.Boolean createdNew )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Mutex), typeof(Boolean), typeof(String), typeof(Boolean));
            }
        public Mutex( bool initiallyOwned, string name, System.Boolean createdNew, System.Security.AccessControl.MutexSecurity mutexSecurity )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Mutex), typeof(Boolean), typeof(String), typeof(Boolean), typeof(MutexSecurity));
            }
        public System.Security.AccessControl.MutexSecurity GetAccessControl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAccessControl) );
            return default( System.Security.AccessControl.MutexSecurity );

		}
        public static System.Threading.Mutex OpenExisting( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OpenExisting), typeof(String) );
            return default( System.Threading.Mutex );

		}
        public static System.Threading.Mutex OpenExisting( string name, System.Security.AccessControl.MutexRights rights ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OpenExisting), typeof(String), typeof(MutexRights) );
            return default( System.Threading.Mutex );

		}
        public static bool TryOpenExisting( string name, out System.Threading.Mutex result ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryOpenExisting), typeof(String), typeof(Mutex) );
            result = default( System.Threading.Mutex );

            return default( bool );

		}
        public static bool TryOpenExisting( string name, System.Security.AccessControl.MutexRights rights, out System.Threading.Mutex result ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryOpenExisting), typeof(String), typeof(MutexRights), typeof(Mutex) );
            result = default( System.Threading.Mutex );

            return default( bool );

		}
        public void ReleaseMutex() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReleaseMutex) );
		}
        public void SetAccessControl( System.Security.AccessControl.MutexSecurity mutexSecurity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAccessControl), typeof(MutexSecurity) );
		}
    }
}