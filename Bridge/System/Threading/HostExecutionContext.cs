// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading;

namespace System.Threading {
    public class HostExecutionContext: System.IDisposable {

        internal System.Object State { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(State));
				return default (Object);
			}
		}
        public HostExecutionContext(  )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HostExecutionContext));
            }
        public HostExecutionContext( System.Object state )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HostExecutionContext), typeof(Object));
            }
        public virtual System.Threading.HostExecutionContext CreateCopy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateCopy) );
            return default( System.Threading.HostExecutionContext );
        
		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
        public virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
    }
}