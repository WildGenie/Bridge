// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Threading;

namespace System.Threading {
    public class CountdownEvent: System.IDisposable {

        public int CurrentCount { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CurrentCount));
				return default (Int32);
			}
		}
        public int InitialCount { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InitialCount));
				return default (Int32);
			}
		}
        public bool IsSet { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSet));
				return default (Boolean);
			}
		}
        public System.Threading.WaitHandle WaitHandle { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WaitHandle));
				return default (WaitHandle);
			}
		}
        public CountdownEvent( int initialCount )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CountdownEvent), typeof(Int32));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
        public bool Signal() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Signal) );
            return default( bool );
        
		}
        public bool Signal( int signalCount ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Signal), typeof(Int32) );
            return default( bool );
        
		}
        public void AddCount() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddCount) ); 
		}
        public bool TryAddCount() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryAddCount) );
            return default( bool );
        
		}
        public void AddCount( int signalCount ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddCount), typeof(Int32) ); 
		}
        public bool TryAddCount( int signalCount ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryAddCount), typeof(Int32) );
            return default( bool );
        
		}
        public void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) ); 
		}
        public void Reset( int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset), typeof(Int32) ); 
		}
        public void Wait() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait) ); 
		}
        public void Wait( System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait), typeof(CancellationToken) ); 
		}
        public bool Wait( System.TimeSpan timeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait), typeof(TimeSpan) );
            return default( bool );
        
		}
        public bool Wait( System.TimeSpan timeout, System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait), typeof(TimeSpan), typeof(CancellationToken) );
            return default( bool );
        
		}
        public bool Wait( int millisecondsTimeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait), typeof(Int32) );
            return default( bool );
        
		}
        public bool Wait( int millisecondsTimeout, System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Wait), typeof(Int32), typeof(CancellationToken) );
            return default( bool );
        
		}
    }
}