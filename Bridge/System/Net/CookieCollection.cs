// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Net;

namespace System.Net {
    public class CookieCollection: System.Collections.ICollection {

        public bool IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReadOnly));
				return default (Boolean);
			}
		}

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSynchronized));
				return default (Boolean);
			}
		}
        public virtual System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SyncRoot));
				return default (Object);
			}
		}
        internal bool IsOtherVersionSeen {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsOtherVersionSeen));
				return default (Boolean);
			}
		}
        public void Add( System.Net.Cookie cookie ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Cookie) );
		}
        public void Add( System.Net.CookieCollection cookies ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(CookieCollection) );
		}
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public void CopyTo( System.Net.Cookie[] array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Cookie[]), typeof(Int32) );
		}
        internal System.DateTime TimeStamp( System.Net.CookieCollection.Stamp how ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TimeStamp), typeof(Stamp) );
            return default( System.DateTime );

		}
        internal int InternalAdd( System.Net.Cookie cookie, bool isStrict ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalAdd), typeof(Cookie), typeof(Boolean) );
            return default( int );

		}
        internal int IndexOf( System.Net.Cookie cookie ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IndexOf), typeof(Cookie) );
            return default( int );

		}
        internal void RemoveAt( int idx ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAt), typeof(Int32) );
		}
        public System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        public enum Stamp {
            Check = 0,
            Set = 1,
            SetToUnused = 2,
            SetToMaxUsed = 3
        }
    }
}