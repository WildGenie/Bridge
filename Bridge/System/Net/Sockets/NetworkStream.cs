// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net.Sockets;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using System.Threading;
using System.Net;

namespace System.Net.Sockets {
    public class NetworkStream: System.IO.Stream {

        internal System.Net.Sockets.Socket Socket {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Socket));
				return default (Socket);
			}
		}
        internal System.Net.Sockets.Socket InternalSocket {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalSocket));
				return default (Socket);
			}
		}
        internal bool Readable {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Readable));
				return default (Boolean);
			}
		}
        internal bool Writeable {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Writeable));
				return default (Boolean);
			}
		}
        public override bool CanRead {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanRead));
				return default (Boolean);
			}
		}
        public override bool CanSeek {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanSeek));
				return default (Boolean);
			}
		}
        public override bool CanWrite {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanWrite));
				return default (Boolean);
			}
		}
        public override bool CanTimeout {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanTimeout));
				return default (Boolean);
			}
		}
        public override int ReadTimeout { get; set; }
        public override int WriteTimeout { get; set; }
        public virtual bool DataAvailable {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DataAvailable));
				return default (Boolean);
			}
		}
        public override long Length {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Length));
				return default (Int64);
			}
		}
        public override long Position { get; set; }
        internal bool Connected {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connected));
				return default (Boolean);
			}
		}
        public NetworkStream( System.Net.Sockets.Socket socket )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkStream), typeof(Socket));
            }
        public NetworkStream( System.Net.Sockets.Socket socket, bool ownsSocket )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkStream), typeof(Socket), typeof(Boolean));
            }
        public NetworkStream( System.Net.Sockets.Socket socket, System.IO.FileAccess access )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkStream), typeof(Socket), typeof(FileAccess));
            }
        public NetworkStream( System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkStream), typeof(Socket), typeof(FileAccess), typeof(Boolean));
            }
        internal void InternalAbortSocket() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalAbortSocket) );
		}
        internal void ConvertToNotSocketOwner() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToNotSocketOwner) );
		}
        public override long Seek( long offset, System.IO.SeekOrigin origin ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Seek), typeof(Int64), typeof(SeekOrigin) );
            return default( long );

		}
        internal void InitNetworkStream( System.Net.Sockets.Socket socket, System.IO.FileAccess Access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InitNetworkStream), typeof(Socket), typeof(FileAccess) );
		}
        internal bool PollRead() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PollRead) );
            return default( bool );

		}
        internal bool Poll( int microSeconds, System.Net.Sockets.SelectMode mode ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Poll), typeof(Int32), typeof(SelectMode) );
            return default( bool );

		}
        public override int Read( [System.Runtime.InteropServices.InAttribute, System.Runtime.InteropServices.OutAttribute] byte[] buffer, int offset, int size ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Byte[]), typeof(Int32), typeof(Int32) );
            buffer = default( byte[] );

            return default( int );

		}
        public override void Write( byte[] buffer, int offset, int size ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Byte[]), typeof(Int32), typeof(Int32) );
		}
        public void Close( int timeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close), typeof(Int32) );
		}
        protected override void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public override System.IAsyncResult BeginRead( byte[] buffer, int offset, int size, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginRead), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        internal virtual System.IAsyncResult UnsafeBeginRead( byte[] buffer, int offset, int size, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeBeginRead), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override int EndRead( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndRead), typeof(IAsyncResult) );
            return default( int );

		}
        public override System.IAsyncResult BeginWrite( byte[] buffer, int offset, int size, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginWrite), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        internal virtual System.IAsyncResult UnsafeBeginWrite( byte[] buffer, int offset, int size, System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeBeginWrite), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override void EndWrite( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndWrite), typeof(IAsyncResult) );
		}
        internal virtual void EndMultipleWrite( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndMultipleWrite), typeof(IAsyncResult) );
		}
        public override void Flush() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Flush) );
		}
        public System.Threading.Tasks.Task FlushAsync( System.Threading.CancellationToken cancellationToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FlushAsync), typeof(CancellationToken) );
            return default( System.Threading.Tasks.Task );

		}
        public override void SetLength( long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetLength), typeof(Int64) );
		}
        internal void SetSocketTimeoutOption( System.Net.Sockets.SocketShutdown mode, int timeout, bool silent ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetSocketTimeoutOption), typeof(SocketShutdown), typeof(Int32), typeof(Boolean) );
		}
    }
}