// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Threading.Tasks;
using System.Net.Sockets;
using System.Net;
using System;
using System.Collections;
using System.Collections.Generic;

namespace System.Net.Sockets {
    public static class SocketTaskExtensions {

        public static System.Threading.Tasks.Task<System.Net.Sockets.Socket> AcceptAsync( this System.Net.Sockets.Socket socket ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptAsync), typeof(Socket) );
            return default( System.Threading.Tasks.Task<System.Net.Sockets.Socket> );

		}
        public static System.Threading.Tasks.Task<System.Net.Sockets.Socket> AcceptAsync( this System.Net.Sockets.Socket socket, System.Net.Sockets.Socket acceptSocket ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptAsync), typeof(Socket), typeof(Socket) );
            return default( System.Threading.Tasks.Task<System.Net.Sockets.Socket> );

		}
        public static System.Threading.Tasks.Task ConnectAsync( this System.Net.Sockets.Socket socket, System.Net.EndPoint remoteEP ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Socket), typeof(EndPoint) );
            return default( System.Threading.Tasks.Task );

		}
        public static System.Threading.Tasks.Task ConnectAsync( this System.Net.Sockets.Socket socket, System.Net.IPAddress address, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Socket), typeof(IPAddress), typeof(Int32) );
            return default( System.Threading.Tasks.Task );

		}
        public static System.Threading.Tasks.Task ConnectAsync( this System.Net.Sockets.Socket socket, System.Net.IPAddress[] addresses, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Socket), typeof(IPAddress[]), typeof(Int32) );
            return default( System.Threading.Tasks.Task );

		}
        public static System.Threading.Tasks.Task ConnectAsync( this System.Net.Sockets.Socket socket, string host, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(Socket), typeof(String), typeof(Int32) );
            return default( System.Threading.Tasks.Task );

		}
        public static System.Threading.Tasks.Task<int> ReceiveAsync( this System.Net.Sockets.Socket socket, System.ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReceiveAsync), typeof(Socket), typeof(ArraySegment<byte>), typeof(SocketFlags) );
            return default( System.Threading.Tasks.Task<int> );

		}
        public static System.Threading.Tasks.Task<int> ReceiveAsync( this System.Net.Sockets.Socket socket, System.Collections.Generic.IList<System.ArraySegment<byte>> buffers, System.Net.Sockets.SocketFlags socketFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReceiveAsync), typeof(Socket), typeof(IList<ArraySegment<byte>>), typeof(SocketFlags) );
            return default( System.Threading.Tasks.Task<int> );

		}
        public static System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveFromResult> ReceiveFromAsync( this System.Net.Sockets.Socket socket, System.ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEndPoint ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReceiveFromAsync), typeof(Socket), typeof(ArraySegment<ArraySegment<byte>>), typeof(SocketFlags), typeof(EndPoint) );
            return default( System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveFromResult> );

		}
        public static System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveMessageFromResult> ReceiveMessageFromAsync( this System.Net.Sockets.Socket socket, System.ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEndPoint ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReceiveMessageFromAsync), typeof(Socket), typeof(ArraySegment<ArraySegment<byte>>), typeof(SocketFlags), typeof(EndPoint) );
            return default( System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveMessageFromResult> );

		}
        public static System.Threading.Tasks.Task<int> SendAsync( this System.Net.Sockets.Socket socket, System.ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendAsync), typeof(Socket), typeof(ArraySegment<ArraySegment<byte>>), typeof(SocketFlags) );
            return default( System.Threading.Tasks.Task<int> );

		}
        public static System.Threading.Tasks.Task<int> SendAsync( this System.Net.Sockets.Socket socket, System.Collections.Generic.IList<System.ArraySegment<byte>> buffers, System.Net.Sockets.SocketFlags socketFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendAsync), typeof(Socket), typeof(IList<>), typeof(SocketFlags) );
            return default( System.Threading.Tasks.Task<int> );

		}
        public static System.Threading.Tasks.Task<int> SendToAsync( this System.Net.Sockets.Socket socket, System.ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendToAsync), typeof(Socket), typeof(ArraySegment<ArraySegment<byte>>), typeof(SocketFlags), typeof(EndPoint) );
            return default( System.Threading.Tasks.Task<int> );

		}
    }
}