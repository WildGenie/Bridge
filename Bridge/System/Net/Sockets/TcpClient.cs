// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net.Sockets;
using System.Net;
using System.Threading.Tasks;

namespace System.Net.Sockets {
    public class TcpClient: System.IDisposable {

        public System.Net.Sockets.Socket Client { get; set; }
        internal bool Active { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Active));
				return default (Boolean);
			}
		}
        public int Available { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Available));
				return default (Int32);
			}
		}
        public bool Connected { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connected));
				return default (Boolean);
			}
		}
        public bool ExclusiveAddressUse { get; set; }
        public int ReceiveBufferSize { get; set; }
        public int SendBufferSize { get; set; }
        public int ReceiveTimeout { get; set; }
        public int SendTimeout { get; set; }
        public System.Net.Sockets.LingerOption LingerState { get; set; }
        public bool NoDelay { get; set; }
        public TcpClient( System.Net.IPEndPoint localEP )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TcpClient), typeof(IPEndPoint));
            }
        public TcpClient(  )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TcpClient));
            }
        public TcpClient( System.Net.Sockets.AddressFamily family )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TcpClient), typeof(AddressFamily));
            }
        public TcpClient( string hostname, int port )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TcpClient), typeof(String), typeof(Int32));
            }
        public void Connect( string hostname, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(String), typeof(Int32) ); 
		}
        public void Connect( System.Net.IPAddress address, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(IPAddress), typeof(Int32) ); 
		}
        public void Connect( System.Net.IPEndPoint remoteEP ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(IPEndPoint) ); 
		}
        public void Connect( System.Net.IPAddress[] ipAddresses, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(IPAddress[]), typeof(Int32) ); 
		}
        public System.IAsyncResult BeginConnect( string host, int port, System.AsyncCallback requestCallback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginConnect), typeof(String), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public System.IAsyncResult BeginConnect( System.Net.IPAddress address, int port, System.AsyncCallback requestCallback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginConnect), typeof(IPAddress), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public System.IAsyncResult BeginConnect( System.Net.IPAddress[] addresses, int port, System.AsyncCallback requestCallback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginConnect), typeof(IPAddress[]), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public void EndConnect( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndConnect), typeof(IAsyncResult) ); 
		}
        public System.Threading.Tasks.Task ConnectAsync( System.Net.IPAddress address, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(IPAddress), typeof(Int32) );
            return default( System.Threading.Tasks.Task );
        
		}
        public System.Threading.Tasks.Task ConnectAsync( string host, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(String), typeof(Int32) );
            return default( System.Threading.Tasks.Task );
        
		}
        public System.Threading.Tasks.Task ConnectAsync( System.Net.IPAddress[] addresses, int port ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectAsync), typeof(IPAddress[]), typeof(Int32) );
            return default( System.Threading.Tasks.Task );
        
		}
        public System.Net.Sockets.NetworkStream GetStream() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStream) );
            return default( System.Net.Sockets.NetworkStream );
        
		}
        public void Close() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close) ); 
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
    }
}