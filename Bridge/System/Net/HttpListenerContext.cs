// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Net;
using System.Security.Principal;
using System;
using System.Threading.Tasks;
using System.Net.WebSockets;
using System.Security;

namespace System.Net {
    public class HttpListenerContext {

        internal int ErrorStatus {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ErrorStatus));
				return default (Int32);
			}
		}
        internal string ErrorMessage {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ErrorMessage));
				return default (String);
			}
		}
        internal bool HaveError {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HaveError));
				return default (Boolean);
			}
		}
        public System.Net.HttpListenerRequest Request {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Request));
				return default (HttpListenerRequest);
			}
		}
        public System.Net.HttpListenerResponse Response {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Response));
				return default (HttpListenerResponse);
			}
		}
        public System.Security.Principal.IPrincipal User {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(User));
				return default (IPrincipal);
			}
		}
        internal void ParseAuthentication( System.Net.AuthenticationSchemes expectedSchemes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ParseAuthentication), typeof(AuthenticationSchemes) );
		}
        internal System.Security.Principal.IPrincipal ParseBasicAuthentication( string authData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ParseBasicAuthentication), typeof(String) );
            return default( System.Security.Principal.IPrincipal );

		}
        public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync( string subProtocol ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptWebSocketAsync), typeof(String) );
            return default( System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> );

		}
        public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync( string subProtocol, System.TimeSpan keepAliveInterval ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptWebSocketAsync), typeof(String), typeof(TimeSpan) );
            return default( System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> );

		}
        public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync( string subProtocol, int receiveBufferSize, System.TimeSpan keepAliveInterval ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptWebSocketAsync), typeof(String), typeof(Int32), typeof(TimeSpan) );
            return default( System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> );

		}
        public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync( string subProtocol, int receiveBufferSize, System.TimeSpan keepAliveInterval, System.ArraySegment<byte> internalBuffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptWebSocketAsync), typeof(String), typeof(Int32), typeof(TimeSpan), typeof(ArraySegment<byte>) );
            return default( System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> );

		}
    }
}