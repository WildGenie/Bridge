// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security;
using System.Security.Permissions;
using System.Net.NetworkInformation;
using System;
using System.Net;

namespace System.Net.NetworkInformation {
    public class NetworkInformationPermission: System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission {

        public System.Net.NetworkInformation.NetworkInformationAccess Access { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Access));
				return default (NetworkInformationAccess);
			}
		}
        public NetworkInformationPermission( System.Security.Permissions.PermissionState state )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkInformationPermission), typeof(PermissionState));
            }
        public NetworkInformationPermission( System.Net.NetworkInformation.NetworkInformationAccess access )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NetworkInformationPermission), typeof(NetworkInformationAccess));
            }
        public void AddPermission( System.Net.NetworkInformation.NetworkInformationAccess access ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddPermission), typeof(NetworkInformationAccess) ); 
		}
        public bool IsUnrestricted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsUnrestricted) );
            return default( bool );
        
		}
        public override System.Security.IPermission Copy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Copy) );
            return default( System.Security.IPermission );
        
		}
        public override System.Security.IPermission Union( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Union), typeof(IPermission) );
            return default( System.Security.IPermission );
        
		}
        public override System.Security.IPermission Intersect( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Intersect), typeof(IPermission) );
            return default( System.Security.IPermission );
        
		}
        public override bool IsSubsetOf( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSubsetOf), typeof(IPermission) );
            return default( bool );
        
		}
        public override void FromXml( System.Security.SecurityElement securityElement ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXml), typeof(SecurityElement) ); 
		}
        public override System.Security.SecurityElement ToXml() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXml) );
            return default( System.Security.SecurityElement );
        
		}
    }
}