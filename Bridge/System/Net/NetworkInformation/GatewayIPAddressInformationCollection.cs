// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System;
using System.Net.NetworkInformation;
using System.Net;

namespace System.Net.NetworkInformation {
    public class GatewayIPAddressInformationCollection: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation> {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual bool IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReadOnly));
				return default (Boolean);
			}
		}
        public virtual System.Net.NetworkInformation.GatewayIPAddressInformation this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
				return default (GatewayIPAddressInformation);
			}
		}
        public virtual void CopyTo( System.Net.NetworkInformation.GatewayIPAddressInformation[] array, int offset ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(GatewayIPAddressInformation[]), typeof(Int32) );
		}
        public virtual void Add( System.Net.NetworkInformation.GatewayIPAddressInformation address ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(GatewayIPAddressInformation) );
		}
        internal void InternalAdd( System.Net.NetworkInformation.GatewayIPAddressInformation address ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalAdd), typeof(GatewayIPAddressInformation) );
		}
        public virtual bool Contains( System.Net.NetworkInformation.GatewayIPAddressInformation address ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(GatewayIPAddressInformation) );
            return default( bool );

		}
        public virtual System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.GatewayIPAddressInformation> GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.GatewayIPAddressInformation> );

		}
        public virtual bool Remove( System.Net.NetworkInformation.GatewayIPAddressInformation address ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(GatewayIPAddressInformation) );
            return default( bool );

		}
        public virtual void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        System.Collections.IEnumerator @System.Collections.IEnumerable.GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IEnumerable.GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
    }
}