// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net;
using System.Collections;

namespace System.Net {
    public class CookieContainer {

        internal const int DefaultCookieLimit = 300;

        internal const int DefaultPerDomainCookieLimit = 20;

        internal const int DefaultCookieLengthLimit = 4096;

        public int Capacity { get; set; }
        public int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public int MaxCookieSize { get; set; }
        public int PerDomainCapacity { get; set; }
        public CookieContainer(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CookieContainer));
            }
        public CookieContainer( int capacity )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CookieContainer), typeof(Int32));
            }
        public CookieContainer( int capacity, int perDomainCapacity, int maxCookieSize )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CookieContainer), typeof(Int32), typeof(Int32), typeof(Int32));
            }
        public void Add( System.Net.Cookie cookie ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Cookie) );
		}
        internal void Add( System.Net.Cookie cookie, bool throwOnError ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Cookie), typeof(Boolean) );
		}
        public void Add( System.Net.CookieCollection cookies ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(CookieCollection) );
		}
        internal bool IsLocalDomain( string host ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsLocalDomain), typeof(String) );
            return default( bool );

		}
        public void Add( System.Uri uri, System.Net.Cookie cookie ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Uri), typeof(Cookie) );
		}
        public void Add( System.Uri uri, System.Net.CookieCollection cookies ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Uri), typeof(CookieCollection) );
		}
        internal System.Net.CookieCollection CookieCutter( System.Uri uri, string headerName, string setCookieHeader, bool isThrow ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CookieCutter), typeof(Uri), typeof(String), typeof(String), typeof(Boolean) );
            return default( System.Net.CookieCollection );

		}
        public System.Net.CookieCollection GetCookies( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCookies), typeof(Uri) );
            return default( System.Net.CookieCollection );

		}
        internal System.Net.CookieCollection InternalGetCookies( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalGetCookies), typeof(Uri) );
            return default( System.Net.CookieCollection );

		}
        public string GetCookieHeader( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCookieHeader), typeof(Uri) );
            return default( string );

		}
        internal string GetCookieHeader( System.Uri uri, out System.String optCookie2 ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCookieHeader), typeof(Uri), typeof(String) );
            optCookie2 = default( System.String );

            return default( string );

		}
        public void SetCookies( System.Uri uri, string cookieHeader ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetCookies), typeof(Uri), typeof(String) );
		}
    }
}