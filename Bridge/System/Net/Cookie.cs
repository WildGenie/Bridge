// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net;

namespace System.Net {
    public class Cookie {

        internal const int MaxSupportedVersion = 1;

        internal const string CommentAttributeName = "Comment";

        internal const string CommentUrlAttributeName = "CommentURL";

        internal const string DiscardAttributeName = "Discard";

        internal const string DomainAttributeName = "Domain";

        internal const string ExpiresAttributeName = "Expires";

        internal const string MaxAgeAttributeName = "Max-Age";

        internal const string PathAttributeName = "Path";

        internal const string PortAttributeName = "Port";

        internal const string SecureAttributeName = "Secure";

        internal const string VersionAttributeName = "Version";

        internal const string HttpOnlyAttributeName = "HttpOnly";

        internal const string SeparatorLiteral = "; ";

        internal const string EqualsLiteral = "=";

        internal const string QuotesLiteral = "\"";

        internal const string SpecialAttributeLiteral = "$";

        public string Comment { get; set; }
        public System.Uri CommentUri { get; set; }
        public bool HttpOnly { get; set; }
        public bool Discard { get; set; }
        public string Domain { get; set; }
        internal string _Domain {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(_Domain));
				return default (String);
			}
		}
        internal bool DomainImplicit {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DomainImplicit));
				return default (Boolean);
			}
		}
        public bool Expired { get; set; }
        public System.DateTime Expires { get; set; }
        public string Name { get; set; }
        public string Path { get; set; }
        internal string _Path {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(_Path));
				return default (String);
			}
		}
        internal bool Plain {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Plain));
				return default (Boolean);
			}
		}
        public string Port { get; set; }
        internal int[][] PortList {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PortList));
				return default (Int32[][]);
			}
		}
        internal string _Port {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(_Port));
				return default (String);
			}
		}
        public bool Secure { get; set; }
        public System.DateTime TimeStamp {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TimeStamp));
				return default (DateTime);
			}
		}
        public string Value { get; set; }
        internal string DomainKey {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DomainKey));
				return default (String);
			}
		}
        public int Version { get; set; }
        internal string _Version {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(_Version));
				return default (String);
			}
		}
        public Cookie(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Cookie));
            }
        public Cookie( string name, string value )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Cookie), typeof(String), typeof(String));
            }
        public Cookie( string name, string value, string path )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Cookie), typeof(String), typeof(String), typeof(String));
            }
        public Cookie( string name, string value, string path, string domain )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Cookie), typeof(String), typeof(String), typeof(String), typeof(String));
            }
        internal bool InternalSetName( string value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalSetName), typeof(String) );
            return default( bool );

		}
        internal System.Net.Cookie Clone() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clone) );
            return default( System.Net.Cookie );

		}
        internal static System.Collections.IComparer GetComparer() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetComparer) );
            return default( System.Collections.IComparer );

		}
        public override bool Equals( System.Object comparand ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );

		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
        internal string ToServerString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToServerString) );
            return default( string );

		}
    }
}