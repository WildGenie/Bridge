// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net.Mail;
using System.Collections.Specialized;
using System.Text;
using System.Net.Mime;
using System.Net;
using System.Collections;

namespace System.Net.Mail {
    public class MailMessage: System.IDisposable {

        public System.Net.Mail.MailAddressCollection Bcc {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Bcc));
				return default (MailAddressCollection);
			}
		}
        public string Body { get; set; }
        internal System.Net.Mime.ContentType BodyContentType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BodyContentType));
				return default (ContentType);
			}
		}
        internal System.Net.Mime.TransferEncoding ContentTransferEncoding {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContentTransferEncoding));
				return default (TransferEncoding);
			}
		}
        public System.Text.Encoding BodyEncoding { get; set; }
        public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }
        public System.Net.Mail.MailAddressCollection CC {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CC));
				return default (MailAddressCollection);
			}
		}
        public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }
        public System.Net.Mail.MailAddress From { get; set; }
        public System.Collections.Specialized.NameValueCollection Headers {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Headers));
				return default (NameValueCollection);
			}
		}
        public bool IsBodyHtml { get; set; }
        public System.Net.Mail.MailPriority Priority { get; set; }
        public System.Text.Encoding HeadersEncoding { get; set; }
        public System.Net.Mail.MailAddressCollection ReplyToList {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReplyToList));
				return default (MailAddressCollection);
			}
		}
        public System.Net.Mail.MailAddress ReplyTo { get; set; }
        public System.Net.Mail.MailAddress Sender { get; set; }
        public string Subject { get; set; }
        public System.Text.Encoding SubjectEncoding { get; set; }
        public System.Net.Mail.MailAddressCollection To {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(To));
				return default (MailAddressCollection);
			}
		}
        internal static System.Text.Encoding UTF8Unmarked {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UTF8Unmarked));
				return default (Encoding);
			}
		}
        public MailMessage(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MailMessage));
            }
        public MailMessage( System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MailMessage), typeof(MailAddress), typeof(MailAddress));
            }
        public MailMessage( string from, string to )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MailMessage), typeof(String), typeof(String));
            }
        public MailMessage( string from, string to, string subject, string body )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MailMessage), typeof(String), typeof(String), typeof(String), typeof(String));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        internal static System.Net.Mime.TransferEncoding GuessTransferEncoding( System.Text.Encoding enc ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GuessTransferEncoding), typeof(Encoding) );
            return default( System.Net.Mime.TransferEncoding );

		}
        internal static string To2047( byte[] bytes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(To2047), typeof(Byte[]) );
            return default( string );

		}
        internal static string EncodeSubjectRFC2047( string s, System.Text.Encoding enc ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EncodeSubjectRFC2047), typeof(String), typeof(Encoding) );
            return default( string );

		}
    }
}