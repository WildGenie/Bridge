// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net;
using System.Net.Mail;
using System.Security.Cryptography.X509Certificates;
using System.Net.Sockets;
using System.IO;
using System.ComponentModel;
using System.Threading;
using System.Threading.Tasks;
using System.Security.Cryptography;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;

namespace System.Net.Mail {
    public class SmtpClient: System.IDisposable {

        public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ClientCertificates));
				return default (X509CertificateCollection);
			}
		}
        public string TargetName { get; set; }
        public System.Net.ICredentialsByHost Credentials { get; set; }
        public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }
        public bool EnableSsl { get; set; }
        public string Host { get; set; }
        public string PickupDirectoryLocation { get; set; }
        public int Port { get; set; }
        public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }
        public System.Net.ServicePoint ServicePoint { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ServicePoint));
				return default (ServicePoint);
			}
		}
        public int Timeout { get; set; }
        public bool UseDefaultCredentials { get; set; }
        #pragma warning disable 67
        public event System.Net.Mail.SendCompletedEventHandler SendCompleted;
        #pragma warning disable 67

        public SmtpClient(  )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SmtpClient));
            }
        public SmtpClient( string host )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SmtpClient), typeof(String));
            }
        public SmtpClient( string host, int port )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SmtpClient), typeof(String), typeof(Int32));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
        protected void OnSendCompleted( System.ComponentModel.AsyncCompletedEventArgs e ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnSendCompleted), typeof(AsyncCompletedEventArgs) ); 
		}
        public void Send( System.Net.Mail.MailMessage message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Send), typeof(MailMessage) ); 
		}
        public void Send( string from, string recipients, string subject, string body ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Send), typeof(String), typeof(String), typeof(String), typeof(String) ); 
		}
        public System.Threading.Tasks.Task SendMailAsync( System.Net.Mail.MailMessage message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendMailAsync), typeof(MailMessage) );
            return default( System.Threading.Tasks.Task );
        
		}
        public System.Threading.Tasks.Task SendMailAsync( string from, string recipients, string subject, string body ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendMailAsync), typeof(String), typeof(String), typeof(String), typeof(String) );
            return default( System.Threading.Tasks.Task );
        
		}
        public void SendAsync( System.Net.Mail.MailMessage message, System.Object userToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendAsync), typeof(MailMessage), typeof(Object) ); 
		}
        public void SendAsync( string from, string recipients, string subject, string body, System.Object userToken ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendAsync), typeof(String), typeof(String), typeof(String), typeof(String), typeof(Object) ); 
		}
        public void SendAsyncCancel() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SendAsyncCancel) ); 
		}
    }
}