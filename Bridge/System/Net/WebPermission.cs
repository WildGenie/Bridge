// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security;
using System.Security.Permissions;
using System;
using System.Collections;
using System.Text.RegularExpressions;
using System.Net;
using System.Text;

namespace System.Net {
    public class WebPermission: System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission {

        internal const string MatchAll = ".*";

        internal static System.Text.RegularExpressions.Regex MatchAllRegex {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MatchAllRegex));
				return default (Regex);
			}
		}
        public System.Collections.IEnumerator ConnectList {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConnectList));
				return default (IEnumerator);
			}
		}
        public System.Collections.IEnumerator AcceptList {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcceptList));
				return default (IEnumerator);
			}
		}
        public WebPermission( System.Security.Permissions.PermissionState state )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WebPermission), typeof(PermissionState));
            }
        public WebPermission(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WebPermission));
            }
        public WebPermission( System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WebPermission), typeof(NetworkAccess), typeof(Regex));
            }
        public WebPermission( System.Net.NetworkAccess access, string uriString )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WebPermission), typeof(NetworkAccess), typeof(String));
            }
        public void AddPermission( System.Net.NetworkAccess access, string uriString ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddPermission), typeof(NetworkAccess), typeof(String) );
		}
        internal void AddPermission( System.Net.NetworkAccess access, System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddPermission), typeof(NetworkAccess), typeof(Uri) );
		}
        public void AddPermission( System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddPermission), typeof(NetworkAccess), typeof(Regex) );
		}
        public bool IsUnrestricted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsUnrestricted) );
            return default( bool );

		}
        public override System.Security.IPermission Copy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Copy) );
            return default( System.Security.IPermission );

		}
        public override bool IsSubsetOf( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSubsetOf), typeof(IPermission) );
            return default( bool );

		}
        public override System.Security.IPermission Union( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Union), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
        public override System.Security.IPermission Intersect( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Intersect), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
        public override void FromXml( System.Security.SecurityElement securityElement ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXml), typeof(SecurityElement) );
		}
        public override System.Security.SecurityElement ToXml() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXml) );
            return default( System.Security.SecurityElement );

		}
    }
}