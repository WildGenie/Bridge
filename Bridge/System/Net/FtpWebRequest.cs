// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Serialization;
using System;
using System.Net;
using System.IO;
using System.Text;
using System.Security.Cryptography.X509Certificates;
using System.Net.Cache;
using System.Security.Cryptography;

namespace System.Net {
    public class FtpWebRequest: System.Net.WebRequest {

        public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
        public override string ConnectionGroupName { get; set; }
        public override string ContentType { get; set; }
        public override long ContentLength { get; set; }
        public long ContentOffset { get; set; }
        public override System.Net.ICredentials Credentials { get; set; }
        public new static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
        public bool EnableSsl { get; set; }
        public override System.Net.WebHeaderCollection Headers { get; set; }
        public bool KeepAlive { get; set; }
        public override string Method { get; set; }
        public override bool PreAuthenticate { get; set; }
        public override System.Net.IWebProxy Proxy { get; set; }
        public int ReadWriteTimeout { get; set; }
        public string RenameTo { get; set; }
        public override System.Uri RequestUri {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RequestUri));
				return default (Uri);
			}
		}
        public System.Net.ServicePoint ServicePoint {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ServicePoint));
				return default (ServicePoint);
			}
		}
        public bool UsePassive { get; set; }
        public override bool UseDefaultCredentials { get; set; }
        public bool UseBinary { get; set; }
        public override int Timeout { get; set; }
        internal string DataType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DataType));
				return default (String);
			}
		}
        public override void Abort() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Abort) );
		}
        public override System.IAsyncResult BeginGetResponse( System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginGetResponse), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override System.Net.WebResponse EndGetResponse( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndGetResponse), typeof(IAsyncResult) );
            return default( System.Net.WebResponse );

		}
        public override System.Net.WebResponse GetResponse() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetResponse) );
            return default( System.Net.WebResponse );

		}
        public override System.IAsyncResult BeginGetRequestStream( System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginGetRequestStream), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public override System.IO.Stream EndGetRequestStream( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndGetRequestStream), typeof(IAsyncResult) );
            return default( System.IO.Stream );

		}
        public override System.IO.Stream GetRequestStream() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRequestStream) );
            return default( System.IO.Stream );

		}
        internal void CloseDataConnection() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CloseDataConnection) );
		}
        internal void SetTransferCompleted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetTransferCompleted) );
		}
        internal void OperationCompleted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OperationCompleted) );
		}
        internal bool ChangeToSSLSocket( ref System.IO.Stream stream ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ChangeToSSLSocket), typeof(Stream) );
            return default( bool );

		}
        internal void CheckIfAborted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckIfAborted) );
		}
    }
}