// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Serialization;
using System;
using System.Collections;
using System.Net;
using System.Net.Security;
using System.Security.Principal;
using System.Net.Cache;
using System.IO;
using System.Threading.Tasks;
using System.Security;

namespace System.Net {
    public abstract class WebRequest: System.MarshalByRefObject, System.Runtime.Serialization.ISerializable {

        internal const int DefaultTimeout = 100000;

        public virtual System.Net.IWebRequestCreate CreatorInstance {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreatorInstance));
				return default (IWebRequestCreate);
			}
		}
        internal static System.Object InternalSyncObject {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalSyncObject));
				return default (Object);
			}
		}
        internal static System.Collections.ArrayList PrefixList {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrefixList));
				return default (ArrayList);
			}
		}
        public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
        public virtual System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }
        public virtual string Method { get; set; }
        public virtual System.Uri RequestUri {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RequestUri));
				return default (Uri);
			}
		}
        public virtual string ConnectionGroupName { get; set; }
        public virtual System.Net.WebHeaderCollection Headers { get; set; }
        public virtual long ContentLength { get; set; }
        public virtual string ContentType { get; set; }
        public virtual System.Net.ICredentials Credentials { get; set; }
        public virtual bool UseDefaultCredentials { get; set; }
        public virtual System.Net.IWebProxy Proxy { get; set; }
        public virtual bool PreAuthenticate { get; set; }
        public virtual int Timeout { get; set; }
        public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }
        public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }
        internal static System.Net.IWebProxy InternalDefaultWebProxy {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalDefaultWebProxy));
				return default (IWebProxy);
			}
		}
        public static System.Net.IWebProxy DefaultWebProxy { get; set; }
        public static void RegisterPortableWebRequestCreator( System.Net.IWebRequestCreate creator ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterPortableWebRequestCreator), typeof(IWebRequestCreate) );
		}
        public static System.Net.WebRequest Create( string requestUriString ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(String) );
            return default( System.Net.WebRequest );

		}
        public static System.Net.WebRequest Create( System.Uri requestUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(Uri) );
            return default( System.Net.WebRequest );

		}
        public static System.Net.WebRequest CreateDefault( System.Uri requestUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateDefault), typeof(Uri) );
            return default( System.Net.WebRequest );

		}
        public static System.Net.HttpWebRequest CreateHttp( string requestUriString ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateHttp), typeof(String) );
            return default( System.Net.HttpWebRequest );

		}
        public static System.Net.HttpWebRequest CreateHttp( System.Uri requestUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateHttp), typeof(Uri) );
            return default( System.Net.HttpWebRequest );

		}
        public static bool RegisterPrefix( string prefix, System.Net.IWebRequestCreate creator ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterPrefix), typeof(String), typeof(IWebRequestCreate) );
            return default( bool );

		}
        protected virtual void GetObjectData( System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectData), typeof(SerializationInfo), typeof(StreamingContext) );
		}
        public virtual System.IO.Stream GetRequestStream() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRequestStream) );
            return default( System.IO.Stream );

		}
        public virtual System.Net.WebResponse GetResponse() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetResponse) );
            return default( System.Net.WebResponse );

		}
        public virtual System.IAsyncResult BeginGetResponse( System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginGetResponse), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public virtual System.Net.WebResponse EndGetResponse( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndGetResponse), typeof(IAsyncResult) );
            return default( System.Net.WebResponse );

		}
        public virtual System.IAsyncResult BeginGetRequestStream( System.AsyncCallback callback, System.Object state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginGetRequestStream), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );

		}
        public virtual System.IO.Stream EndGetRequestStream( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndGetRequestStream), typeof(IAsyncResult) );
            return default( System.IO.Stream );

		}
        public virtual System.Threading.Tasks.Task<System.IO.Stream> GetRequestStreamAsync() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRequestStreamAsync) );
            return default( System.Threading.Tasks.Task<System.IO.Stream> );

		}
        public virtual System.Threading.Tasks.Task<System.Net.WebResponse> GetResponseAsync() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetResponseAsync) );
            return default( System.Threading.Tasks.Task<System.Net.WebResponse> );

		}
        public virtual void Abort() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Abort) );
		}
        internal virtual void RequestCallback( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RequestCallback), typeof(Object) );
		}
        public static System.Net.IWebProxy GetSystemWebProxy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSystemWebProxy) );
            return default( System.Net.IWebProxy );

		}
        internal static System.Net.IWebProxy InternalGetSystemWebProxy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalGetSystemWebProxy) );
            return default( System.Net.IWebProxy );

		}
        internal void SetupCacheProtocol( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetupCacheProtocol), typeof(Uri) );
		}

        public class DesignerWebRequestCreate: System.Net.IWebRequestCreate {

        public System.Net.WebRequest Create( System.Uri uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(Uri) );
            return default( System.Net.WebRequest );

		}
        }
        public class WebProxyWrapperOpaque {

            public virtual System.Net.ICredentials Credentials { get; set; }
        public System.Uri GetProxy( System.Uri destination ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProxy), typeof(Uri) );
            return default( System.Uri );

		}
        public bool IsBypassed( System.Uri host ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsBypassed), typeof(Uri) );
            return default( bool );

		}
        }
        public class WebProxyWrapper: System.Net.WebRequest.WebProxyWrapperOpaque {

        internal System.Net.WebProxy WebProxy {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WebProxy));
				return default (WebProxy);
			}
		}
        }
    }
}