// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Net.WebSockets;
using System.Threading.Tasks;
using System.Threading;
using System.IO;
using System.Net;

namespace System.Net.WebSockets {
    public abstract class WebSocket: System.IDisposable {

        public abstract System.Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }

        public abstract string CloseStatusDescription { get; }

        public abstract string SubProtocol { get; }

        public abstract System.Net.WebSockets.WebSocketState State { get; }

        public static System.TimeSpan DefaultKeepAliveInterval {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DefaultKeepAliveInterval));
				return default (TimeSpan);
			}
		}
        public abstract void Abort();

        public abstract System.Threading.Tasks.Task CloseAsync( System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken );

        public abstract System.Threading.Tasks.Task CloseOutputAsync( System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken );

        public abstract void Dispose();

        public abstract System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync( System.ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken );

        public abstract System.Threading.Tasks.Task SendAsync( System.ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken );

        protected static void ThrowOnInvalidState( System.Net.WebSockets.WebSocketState state, System.Net.WebSockets.WebSocketState[] validStates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ThrowOnInvalidState), typeof(WebSocketState), typeof(WebSocketState[]) );
		}
        protected static bool IsStateTerminal( System.Net.WebSockets.WebSocketState state ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsStateTerminal), typeof(WebSocketState) );
            return default( bool );

		}
        public static System.ArraySegment<byte> CreateClientBuffer( int receiveBufferSize, int sendBufferSize ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientBuffer), typeof(Int32), typeof(Int32) );
            return default( System.ArraySegment<byte> );

		}
        public static System.ArraySegment<byte> CreateServerBuffer( int receiveBufferSize ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateServerBuffer), typeof(Int32) );
            return default( System.ArraySegment<byte> );

		}
        public static bool IsApplicationTargeting45() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsApplicationTargeting45) );
            return default( bool );

		}
        public static void RegisterPrefixes() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterPrefixes) );
		}
        public static System.Net.WebSockets.WebSocket CreateClientWebSocket( System.IO.Stream innerStream, string subProtocol, int receiveBufferSize, int sendBufferSize, System.TimeSpan keepAliveInterval, bool useZeroMaskingKey, System.ArraySegment<byte> internalBuffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientWebSocket), typeof(Stream), typeof(String), typeof(Int32), typeof(Int32), typeof(TimeSpan), typeof(Boolean), typeof(ArraySegment<byte>) );
            return default( System.Net.WebSockets.WebSocket );

		}
    }
}