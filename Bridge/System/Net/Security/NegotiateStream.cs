// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Principal;
using System.Net;
using System.Security.Authentication.ExtendedProtection;
using System.Net.Security;
using System.IO;
using System.Threading.Tasks;
using System.Security;

namespace System.Net.Security {
    public class NegotiateStream: System.Net.Security.AuthenticatedStream {

        public override bool CanRead { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanRead));
				return default (Boolean);
			}
		}
        public override bool CanSeek { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanSeek));
				return default (Boolean);
			}
		}
        public override bool CanTimeout { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanTimeout));
				return default (Boolean);
			}
		}
        public override bool CanWrite { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanWrite));
				return default (Boolean);
			}
		}
        public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ImpersonationLevel));
				return default (TokenImpersonationLevel);
			}
		}
        public override bool IsAuthenticated { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAuthenticated));
				return default (Boolean);
			}
		}
        public override bool IsEncrypted { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsEncrypted));
				return default (Boolean);
			}
		}
        public override bool IsMutuallyAuthenticated { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsMutuallyAuthenticated));
				return default (Boolean);
			}
		}
        public override bool IsServer { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsServer));
				return default (Boolean);
			}
		}
        public override bool IsSigned { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSigned));
				return default (Boolean);
			}
		}
        public override long Length { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Length));
				return default (Int64);
			}
		}
        public override long Position { get; set; }
        public override int ReadTimeout { get; set; }
        public virtual System.Security.Principal.IIdentity RemoteIdentity { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoteIdentity));
				return default (IIdentity);
			}
		}
        public override int WriteTimeout { get; set; }
        public NegotiateStream( System.IO.Stream innerStream )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NegotiateStream), typeof(Stream));
            }
        public NegotiateStream( System.IO.Stream innerStream, bool leaveInnerStreamOpen )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NegotiateStream), typeof(Stream), typeof(Boolean));
            }
        public virtual System.IAsyncResult BeginAuthenticateAsClient( System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsClient), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsClient( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsClient), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsClient( System.Net.NetworkCredential credential, string targetName, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsClient), typeof(NetworkCredential), typeof(String), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsClient( System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsClient), typeof(NetworkCredential), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsClient( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsClient), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public override System.IAsyncResult BeginRead( byte[] buffer, int offset, int count, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginRead), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsServer( System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsServer), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsServer( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsServer), typeof(NetworkCredential), typeof(ExtendedProtectionPolicy), typeof(ProtectionLevel), typeof(TokenImpersonationLevel), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsServer( System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsServer), typeof(NetworkCredential), typeof(ProtectionLevel), typeof(TokenImpersonationLevel), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual System.IAsyncResult BeginAuthenticateAsServer( System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginAuthenticateAsServer), typeof(ExtendedProtectionPolicy), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public override System.IAsyncResult BeginWrite( byte[] buffer, int offset, int count, System.AsyncCallback asyncCallback, System.Object asyncState ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginWrite), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(AsyncCallback), typeof(Object) );
            return default( System.IAsyncResult );
        
		}
        public virtual void AuthenticateAsClient() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClient) ); 
		}
        public virtual void AuthenticateAsClient( System.Net.NetworkCredential credential, string targetName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClient), typeof(NetworkCredential), typeof(String) ); 
		}
        public virtual void AuthenticateAsClient( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClient), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String) ); 
		}
        public virtual void AuthenticateAsClient( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClient), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) ); 
		}
        public virtual void AuthenticateAsClient( System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClient), typeof(NetworkCredential), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) ); 
		}
        public virtual void AuthenticateAsServer() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServer) ); 
		}
        public virtual void AuthenticateAsServer( System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServer), typeof(ExtendedProtectionPolicy) ); 
		}
        public virtual void AuthenticateAsServer( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServer), typeof(NetworkCredential), typeof(ExtendedProtectionPolicy), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) ); 
		}
        public virtual void AuthenticateAsServer( System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServer), typeof(NetworkCredential), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) ); 
		}
        protected override void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
        public virtual void EndAuthenticateAsClient( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndAuthenticateAsClient), typeof(IAsyncResult) ); 
		}
        public override int EndRead( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndRead), typeof(IAsyncResult) );
            return default( int );
        
		}
        public virtual void EndAuthenticateAsServer( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndAuthenticateAsServer), typeof(IAsyncResult) ); 
		}
        public override void EndWrite( System.IAsyncResult asyncResult ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndWrite), typeof(IAsyncResult) ); 
		}
        public override void Flush() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Flush) ); 
		}
        public override int Read( byte[] buffer, int offset, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Read), typeof(Byte[]), typeof(Int32), typeof(Int32) );
            return default( int );
        
		}
        public override long Seek( long offset, System.IO.SeekOrigin origin ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Seek), typeof(Int64), typeof(SeekOrigin) );
            return default( long );
        
		}
        public override void SetLength( long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetLength), typeof(Int64) ); 
		}
        public override void Write( byte[] buffer, int offset, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Byte[]), typeof(Int32), typeof(Int32) ); 
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClientAsync) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync( System.Net.NetworkCredential credential, string targetName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClientAsync), typeof(NetworkCredential), typeof(String) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync( System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClientAsync), typeof(NetworkCredential), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClientAsync), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsClientAsync), typeof(NetworkCredential), typeof(ChannelBinding), typeof(String), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServerAsync) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync( System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServerAsync), typeof(ExtendedProtectionPolicy) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync( System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServerAsync), typeof(NetworkCredential), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) );
            return default( System.Threading.Tasks.Task );
        
		}
        public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync( System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AuthenticateAsServerAsync), typeof(NetworkCredential), typeof(ExtendedProtectionPolicy), typeof(ProtectionLevel), typeof(TokenImpersonationLevel) );
            return default( System.Threading.Tasks.Task );
        
		}
    }
}