// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections.Generic;
using System;
using System.Diagnostics;
using System.Collections.Specialized;
using System.Collections;

namespace System.Diagnostics {
    public class TraceSource {

        internal bool _initCalled;

        public System.Collections.Specialized.StringDictionary Attributes {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Attributes));
				return default (StringDictionary);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public System.Diagnostics.TraceListenerCollection Listeners {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Listeners));
				return default (TraceListenerCollection);
			}
		}
        public System.Diagnostics.SourceSwitch Switch { get; set; }
        public TraceSource( string name )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceSource), typeof(String));
            }
        public TraceSource( string name, System.Diagnostics.SourceLevels defaultLevel )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceSource), typeof(String), typeof(SourceLevels));
            }
        public void Close() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close) );
		}
        public void Flush() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Flush) );
		}
        internal virtual string[][] GetSupportedAttributes() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSupportedAttributes) );
            return default( string[][] );

		}
        internal static void RefreshAll() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RefreshAll) );
		}
        internal void Refresh() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Refresh) );
		}
        public void TraceEvent( System.Diagnostics.TraceEventType eventType, int id ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventType), typeof(Int32) );
		}
        public void TraceEvent( System.Diagnostics.TraceEventType eventType, int id, string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventType), typeof(Int32), typeof(String) );
		}
        public void TraceEvent( System.Diagnostics.TraceEventType eventType, int id, string format, System.Object[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventType), typeof(Int32), typeof(String), typeof(Object[]) );
		}
        public void TraceData( System.Diagnostics.TraceEventType eventType, int id, System.Object data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventType), typeof(Int32), typeof(Object) );
		}
        public void TraceData( System.Diagnostics.TraceEventType eventType, int id, System.Object[] data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventType), typeof(Int32), typeof(Object[]) );
		}
        public void TraceInformation( string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceInformation), typeof(String) );
		}
        public void TraceInformation( string format, System.Object[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceInformation), typeof(String), typeof(Object[]) );
		}
        public void TraceTransfer( int id, string message, System.Guid relatedActivityId ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceTransfer), typeof(Int32), typeof(String), typeof(Guid) );
		}
    }
}