// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.ComponentModel;
using System;
using System.Diagnostics;

namespace System.Diagnostics {
    public class EventLog: System.ComponentModel.Component, System.ComponentModel.ISupportInitialize {

        internal const string LOCAL_FILE_IMPL = "local";

        internal const string EVENTLOG_TYPE_VAR = "MONO_EVENTLOG_TYPE";

        public bool EnableRaisingEvents { get; set; }
        public System.Diagnostics.EventLogEntryCollection Entries {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Entries));
				return default (EventLogEntryCollection);
			}
		}
        public string Log { get; set; }
        public string LogDisplayName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogDisplayName));
				return default (String);
			}
		}
        public string MachineName { get; set; }
        public string Source { get; set; }
        public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }
        public System.Diagnostics.OverflowAction OverflowAction {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OverflowAction));
				return default (OverflowAction);
			}
		}
        public int MinimumRetentionDays {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MinimumRetentionDays));
				return default (Int32);
			}
		}
        public long MaximumKilobytes { get; set; }
        internal static bool Win32EventLogEnabled {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Win32EventLogEnabled));
				return default (Boolean);
			}
		}
        internal static string EventLogImplType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogImplType));
				return default (String);
			}
		}
        #pragma warning disable 67
        public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;
        #pragma warning disable 67

        public EventLog(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLog));
            }
        public EventLog( string logName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLog), typeof(String));
            }
        public EventLog( string logName, string machineName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLog), typeof(String), typeof(String));
            }
        public EventLog( string logName, string machineName, string source )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLog), typeof(String), typeof(String), typeof(String));
            }
        public void ModifyOverflowPolicy( System.Diagnostics.OverflowAction action, int retentionDays ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ModifyOverflowPolicy), typeof(OverflowAction), typeof(Int32) );
		}
        public void RegisterDisplayName( string resourceFile, long resourceId ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterDisplayName), typeof(String), typeof(Int64) );
		}
        public void BeginInit() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BeginInit) );
		}
        public void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        public void Close() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close) );
		}
        internal void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        public static void CreateEventSource( string source, string logName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateEventSource), typeof(String), typeof(String) );
		}
        public static void CreateEventSource( string source, string logName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateEventSource), typeof(String), typeof(String), typeof(String) );
		}
        public static void CreateEventSource( System.Diagnostics.EventSourceCreationData sourceData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateEventSource), typeof(EventSourceCreationData) );
		}
        public static void Delete( string logName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Delete), typeof(String) );
		}
        public static void Delete( string logName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Delete), typeof(String), typeof(String) );
		}
        public static void DeleteEventSource( string source ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DeleteEventSource), typeof(String) );
		}
        public static void DeleteEventSource( string source, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DeleteEventSource), typeof(String), typeof(String) );
		}
        protected override void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public void EndInit() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndInit) );
		}
        public static bool Exists( string logName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exists), typeof(String) );
            return default( bool );

		}
        public static bool Exists( string logName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exists), typeof(String), typeof(String) );
            return default( bool );

		}
        public static System.Diagnostics.EventLog[][] GetEventLogs() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEventLogs) );
            return default( System.Diagnostics.EventLog[][] );

		}
        public static System.Diagnostics.EventLog[][] GetEventLogs( string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEventLogs), typeof(String) );
            return default( System.Diagnostics.EventLog[][] );

		}
        public static string LogNameFromSourceName( string source, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogNameFromSourceName), typeof(String), typeof(String) );
            return default( string );

		}
        public static bool SourceExists( string source ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SourceExists), typeof(String) );
            return default( bool );

		}
        public static bool SourceExists( string source, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SourceExists), typeof(String), typeof(String) );
            return default( bool );

		}
        public void WriteEntry( string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String) );
		}
        public void WriteEntry( string message, System.Diagnostics.EventLogEntryType type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(EventLogEntryType) );
		}
        public void WriteEntry( string message, System.Diagnostics.EventLogEntryType type, int eventID ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(EventLogEntryType), typeof(Int32) );
		}
        public void WriteEntry( string message, System.Diagnostics.EventLogEntryType type, int eventID, System.Int16 category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(EventLogEntryType), typeof(Int32), typeof(Int16) );
		}
        public void WriteEntry( string message, System.Diagnostics.EventLogEntryType type, int eventID, System.Int16 category, byte[] rawData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(EventLogEntryType), typeof(Int32), typeof(Int16), typeof(Byte[]) );
		}
        public static void WriteEntry( string source, string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(String) );
		}
        public static void WriteEntry( string source, string message, System.Diagnostics.EventLogEntryType type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(String), typeof(EventLogEntryType) );
		}
        public static void WriteEntry( string source, string message, System.Diagnostics.EventLogEntryType type, int eventID ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(String), typeof(EventLogEntryType), typeof(Int32) );
		}
        public static void WriteEntry( string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, System.Int16 category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(String), typeof(EventLogEntryType), typeof(Int32), typeof(Int16) );
		}
        public static void WriteEntry( string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, System.Int16 category, byte[] rawData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEntry), typeof(String), typeof(String), typeof(EventLogEntryType), typeof(Int32), typeof(Int16), typeof(Byte[]) );
		}
        public void WriteEvent( System.Diagnostics.EventInstance instance, System.Object[] values ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEvent), typeof(EventInstance), typeof(Object[]) );
		}
        public void WriteEvent( System.Diagnostics.EventInstance instance, byte[] data, System.Object[] values ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEvent), typeof(EventInstance), typeof(Byte[]), typeof(Object[]) );
		}
        public static void WriteEvent( string source, System.Diagnostics.EventInstance instance, System.Object[] values ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEvent), typeof(String), typeof(EventInstance), typeof(Object[]) );
		}
        public static void WriteEvent( string source, System.Diagnostics.EventInstance instance, byte[] data, System.Object[] values ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteEvent), typeof(String), typeof(EventInstance), typeof(Byte[]), typeof(Object[]) );
		}
        internal void OnEntryWritten( System.Diagnostics.EventLogEntry newEntry ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnEntryWritten), typeof(EventLogEntry) );
		}
        internal string GetLogName() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetLogName) );
            return default( string );

		}
        internal static int GetEventID( long instanceID ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEventID), typeof(Int64) );
            return default( int );

		}
    }
}