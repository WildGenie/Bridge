// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics;

namespace System.Diagnostics {
    public class FileVersionInfo {

        public string Comments {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Comments));
				return default (String);
			}
		}
        public string CompanyName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CompanyName));
				return default (String);
			}
		}
        public int FileBuildPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileBuildPart));
				return default (Int32);
			}
		}
        public string FileDescription {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileDescription));
				return default (String);
			}
		}
        public int FileMajorPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileMajorPart));
				return default (Int32);
			}
		}
        public int FileMinorPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileMinorPart));
				return default (Int32);
			}
		}
        public string FileName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileName));
				return default (String);
			}
		}
        public int FilePrivatePart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FilePrivatePart));
				return default (Int32);
			}
		}
        public string FileVersion {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FileVersion));
				return default (String);
			}
		}
        public string InternalName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalName));
				return default (String);
			}
		}
        public bool IsDebug {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDebug));
				return default (Boolean);
			}
		}
        public bool IsPatched {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsPatched));
				return default (Boolean);
			}
		}
        public bool IsPreRelease {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsPreRelease));
				return default (Boolean);
			}
		}
        public bool IsPrivateBuild {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsPrivateBuild));
				return default (Boolean);
			}
		}
        public bool IsSpecialBuild {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSpecialBuild));
				return default (Boolean);
			}
		}
        public string Language {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Language));
				return default (String);
			}
		}
        public string LegalCopyright {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LegalCopyright));
				return default (String);
			}
		}
        public string LegalTrademarks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LegalTrademarks));
				return default (String);
			}
		}
        public string OriginalFilename {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OriginalFilename));
				return default (String);
			}
		}
        public string PrivateBuild {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrivateBuild));
				return default (String);
			}
		}
        public int ProductBuildPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductBuildPart));
				return default (Int32);
			}
		}
        public int ProductMajorPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductMajorPart));
				return default (Int32);
			}
		}
        public int ProductMinorPart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductMinorPart));
				return default (Int32);
			}
		}
        public string ProductName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductName));
				return default (String);
			}
		}
        public int ProductPrivatePart {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductPrivatePart));
				return default (Int32);
			}
		}
        public string ProductVersion {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProductVersion));
				return default (String);
			}
		}
        public string SpecialBuild {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SpecialBuild));
				return default (String);
			}
		}
        public static System.Diagnostics.FileVersionInfo GetVersionInfo( string fileName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetVersionInfo), typeof(String) );
            return default( System.Diagnostics.FileVersionInfo );

		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
    }
}