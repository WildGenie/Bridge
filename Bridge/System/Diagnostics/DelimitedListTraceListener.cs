// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics;
using System.IO;

namespace System.Diagnostics {
    public class DelimitedListTraceListener: System.Diagnostics.TextWriterTraceListener {

        public string Delimiter { get; set; }
        public DelimitedListTraceListener( System.IO.Stream stream ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(Stream));
            }
        public DelimitedListTraceListener( System.IO.Stream stream, string name ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(Stream), typeof(String));
            }
        public DelimitedListTraceListener( System.IO.TextWriter writer ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(TextWriter));
            }
        public DelimitedListTraceListener( System.IO.TextWriter writer, string name ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(TextWriter), typeof(String));
            }
        public DelimitedListTraceListener( string fileName ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(String));
            }
        public DelimitedListTraceListener( string fileName, string name ) : base( default( System.IO.Stream ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DelimitedListTraceListener), typeof(String), typeof(String));
            }
        internal override string[][] GetSupportedAttributes() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSupportedAttributes) );
            return default( string[][] );

		}
        public override void TraceEvent( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, System.Object[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(String), typeof(Object[]) );
		}
        public override void TraceEvent( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(String) );
		}
        public override void TraceData( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, System.Object data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(Object) );
		}
        public override void TraceData( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, System.Object[] data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(Object[]) );
		}
    }
}