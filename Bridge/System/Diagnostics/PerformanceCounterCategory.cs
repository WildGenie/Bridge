// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics;

namespace System.Diagnostics {
    public class PerformanceCounterCategory {

        public string CategoryHelp {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CategoryHelp));
				return default (String);
			}
		}
        public string CategoryName { get; set; }
        public string MachineName { get; set; }
        public System.Diagnostics.PerformanceCounterCategoryType CategoryType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CategoryType));
				return default (PerformanceCounterCategoryType);
			}
		}
        public PerformanceCounterCategory(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PerformanceCounterCategory));
            }
        public PerformanceCounterCategory( string categoryName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PerformanceCounterCategory), typeof(String));
            }
        public PerformanceCounterCategory( string categoryName, string machineName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PerformanceCounterCategory), typeof(String), typeof(String));
            }
        public bool CounterExists( string counterName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterExists), typeof(String) );
            return default( bool );

		}
        public static bool CounterExists( string counterName, string categoryName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterExists), typeof(String), typeof(String) );
            return default( bool );

		}
        public static bool CounterExists( string counterName, string categoryName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterExists), typeof(String), typeof(String), typeof(String) );
            return default( bool );

		}
        public static System.Diagnostics.PerformanceCounterCategory Create( string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(String), typeof(String), typeof(CounterCreationDataCollection) );
            return default( System.Diagnostics.PerformanceCounterCategory );

		}
        public static System.Diagnostics.PerformanceCounterCategory Create( string categoryName, string categoryHelp, string counterName, string counterHelp ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(String), typeof(String), typeof(String), typeof(String) );
            return default( System.Diagnostics.PerformanceCounterCategory );

		}
        public static System.Diagnostics.PerformanceCounterCategory Create( string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(String), typeof(String), typeof(PerformanceCounterCategoryType), typeof(CounterCreationDataCollection) );
            return default( System.Diagnostics.PerformanceCounterCategory );

		}
        public static System.Diagnostics.PerformanceCounterCategory Create( string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(String), typeof(String), typeof(PerformanceCounterCategoryType), typeof(String), typeof(String) );
            return default( System.Diagnostics.PerformanceCounterCategory );

		}
        public static void Delete( string categoryName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Delete), typeof(String) );
		}
        public static bool Exists( string categoryName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exists), typeof(String) );
            return default( bool );

		}
        public static bool Exists( string categoryName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exists), typeof(String), typeof(String) );
            return default( bool );

		}
        public static System.Diagnostics.PerformanceCounterCategory[][] GetCategories() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCategories) );
            return default( System.Diagnostics.PerformanceCounterCategory[][] );

		}
        public static System.Diagnostics.PerformanceCounterCategory[][] GetCategories( string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCategories), typeof(String) );
            return default( System.Diagnostics.PerformanceCounterCategory[][] );

		}
        public System.Diagnostics.PerformanceCounter[][] GetCounters() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCounters) );
            return default( System.Diagnostics.PerformanceCounter[][] );

		}
        public System.Diagnostics.PerformanceCounter[][] GetCounters( string instanceName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCounters), typeof(String) );
            return default( System.Diagnostics.PerformanceCounter[][] );

		}
        public string[][] GetInstanceNames() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInstanceNames) );
            return default( string[][] );

		}
        public bool InstanceExists( string instanceName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InstanceExists), typeof(String) );
            return default( bool );

		}
        public static bool InstanceExists( string instanceName, string categoryName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InstanceExists), typeof(String), typeof(String) );
            return default( bool );

		}
        public static bool InstanceExists( string instanceName, string categoryName, string machineName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InstanceExists), typeof(String), typeof(String), typeof(String) );
            return default( bool );

		}
        public System.Diagnostics.InstanceDataCollectionCollection ReadCategory() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadCategory) );
            return default( System.Diagnostics.InstanceDataCollectionCollection );

		}
    }
}