// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics.Tracing;
using System.Collections.Generic;

namespace System.Diagnostics.Tracing {
    public class EventListener: System.IDisposable {

        internal static System.Object EventListenersLock {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventListenersLock));
				return default (Object);
			}
		}
        #pragma warning disable 67
        public event System.EventHandler<System.Diagnostics.Tracing.EventSourceCreatedEventArgs> EventSourceCreated;
        public event System.EventHandler<System.Diagnostics.Tracing.EventWrittenEventArgs> EventWritten;
        #pragma warning disable 67

        public virtual void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        public void EnableEvents( System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnableEvents), typeof(EventSource), typeof(EventLevel) );
		}
        public void EnableEvents( System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnableEvents), typeof(EventSource), typeof(EventLevel), typeof(EventKeywords) );
		}
        public void EnableEvents( System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary<string, string> arguments ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnableEvents), typeof(EventSource), typeof(EventLevel), typeof(EventKeywords), typeof(IDictionary<string, string>) );
		}
        public void DisableEvents( System.Diagnostics.Tracing.EventSource eventSource ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DisableEvents), typeof(EventSource) );
		}
        public static int EventSourceIndex( System.Diagnostics.Tracing.EventSource eventSource ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventSourceIndex), typeof(EventSource) );
            return default( int );

		}
        internal virtual void OnEventSourceCreated( System.Diagnostics.Tracing.EventSource eventSource ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnEventSourceCreated), typeof(EventSource) );
		}
        internal virtual void OnEventWritten( System.Diagnostics.Tracing.EventWrittenEventArgs eventData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnEventWritten), typeof(EventWrittenEventArgs) );
		}
        internal static void AddEventSource( System.Diagnostics.Tracing.EventSource newEventSource ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddEventSource), typeof(EventSource) );
		}
        internal static void Validate() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Validate) );
		}
    }
}