// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics.Eventing.Reader;
using System.Collections.Generic;
using System.Diagnostics.Eventing;
using System.Collections;

namespace System.Diagnostics.Eventing.Reader {
    public class EventLogConfiguration: System.IDisposable {

        public bool IsClassicLog {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsClassicLog));
				return default (Boolean);
			}
		}
        public bool IsEnabled { get; set; }
        public string LogFilePath { get; set; }
        public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogIsolation));
				return default (EventLogIsolation);
			}
		}
        public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }
        public string LogName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogName));
				return default (String);
			}
		}
        public System.Diagnostics.Eventing.Reader.EventLogType LogType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogType));
				return default (EventLogType);
			}
		}
        public long MaximumSizeInBytes { get; set; }
        public string OwningProviderName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OwningProviderName));
				return default (String);
			}
		}
        public System.Nullable<int> ProviderBufferSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderBufferSize));
				return default (Nullable<int>);
			}
		}
        public System.Nullable<System.Guid> ProviderControlGuid {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderControlGuid));
				return default (Nullable<Guid>);
			}
		}
        public System.Nullable<long> ProviderKeywords { get; set; }
        public System.Nullable<int> ProviderLatency {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderLatency));
				return default (Nullable<int>);
			}
		}
        public System.Nullable<int> ProviderLevel { get; set; }
        public System.Nullable<int> ProviderMaximumNumberOfBuffers {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderMaximumNumberOfBuffers));
				return default (Nullable<int>);
			}
		}
        public System.Nullable<int> ProviderMinimumNumberOfBuffers {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderMinimumNumberOfBuffers));
				return default (Nullable<int>);
			}
		}
        public System.Collections.Generic.IEnumerable<string> ProviderNames {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderNames));
				return default (IEnumerable<string>);
			}
		}
        public string SecurityDescriptor { get; set; }
        public EventLogConfiguration( string logName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogConfiguration), typeof(String));
            }
        public EventLogConfiguration( string logName, System.Diagnostics.Eventing.Reader.EventLogSession session )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogConfiguration), typeof(String), typeof(EventLogSession));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public void SaveChanges() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SaveChanges) );
		}
    }
}