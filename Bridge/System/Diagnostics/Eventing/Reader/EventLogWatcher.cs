// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics.Eventing.Reader;

namespace System.Diagnostics.Eventing.Reader {
    public class EventLogWatcher: System.IDisposable {

        public bool Enabled { get; set; }
        #pragma warning disable 67
        public event System.EventHandler<System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs> EventRecordWritten;
        #pragma warning disable 67

        public EventLogWatcher( System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogWatcher), typeof(EventLogQuery));
            }
        public EventLogWatcher( System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogWatcher), typeof(EventLogQuery), typeof(EventBookmark));
            }
        public EventLogWatcher( System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogWatcher), typeof(EventLogQuery), typeof(EventBookmark), typeof(Boolean));
            }
        public EventLogWatcher( string path )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogWatcher), typeof(String));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
    }
}