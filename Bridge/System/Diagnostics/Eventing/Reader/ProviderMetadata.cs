// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Collections.Generic;
using System.Diagnostics.Eventing.Reader;
using System.Collections;
using System.Globalization;

namespace System.Diagnostics.Eventing.Reader {
    public class ProviderMetadata: System.IDisposable {

        public string DisplayName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DisplayName));
				return default (String);
			}
		}
        public System.Collections.Generic.IEnumerable<System.Diagnostics.Eventing.Reader.EventMetadata> Events {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Events));
				return default (IEnumerable<EventMetadata>);
			}
		}
        public System.Uri HelpLink {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HelpLink));
				return default (Uri);
			}
		}
        public System.Guid Id {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Id));
				return default (Guid);
			}
		}
        public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventKeyword> Keywords {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Keywords));
				return default (IList<EventKeyword>);
			}
		}
        public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLevel> Levels {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Levels));
				return default (IList<EventLevel>);
			}
		}
        public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventLogLink> LogLinks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogLinks));
				return default (IList<EventLogLink>);
			}
		}
        public string MessageFilePath {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MessageFilePath));
				return default (String);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventOpcode> Opcodes {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Opcodes));
				return default (IList<EventOpcode>);
			}
		}
        public string ParameterFilePath {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ParameterFilePath));
				return default (String);
			}
		}
        public string ResourceFilePath {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResourceFilePath));
				return default (String);
			}
		}
        public System.Collections.Generic.IList<System.Diagnostics.Eventing.Reader.EventTask> Tasks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Tasks));
				return default (IList<EventTask>);
			}
		}
        public ProviderMetadata( string providerName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderMetadata), typeof(String));
            }
        public ProviderMetadata( string providerName, System.Diagnostics.Eventing.Reader.EventLogSession session, System.Globalization.CultureInfo targetCultureInfo )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderMetadata), typeof(String), typeof(EventLogSession), typeof(CultureInfo));
            }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
    }
}