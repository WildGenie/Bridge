// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics;

namespace System.Diagnostics {
    public struct CounterSample {

        internal static System.Diagnostics.CounterSample Empty;

        public long BaseValue {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BaseValue));
				return default (Int64);
			}
		}
        public long CounterFrequency {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterFrequency));
				return default (Int64);
			}
		}
        public long CounterTimeStamp {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterTimeStamp));
				return default (Int64);
			}
		}
        public System.Diagnostics.PerformanceCounterType CounterType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterType));
				return default (PerformanceCounterType);
			}
		}
        public long RawValue {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RawValue));
				return default (Int64);
			}
		}
        public long SystemFrequency {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SystemFrequency));
				return default (Int64);
			}
		}
        public long TimeStamp {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TimeStamp));
				return default (Int64);
			}
		}
        public long TimeStamp100nSec {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TimeStamp100nSec));
				return default (Int64);
			}
		}
        public CounterSample( long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterSample), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(PerformanceCounterType));

            CounterSample.Empty = default( System.Diagnostics.CounterSample );
            }
        public CounterSample( long rawValue, long baseValue, long counterFrequency, long systemFrequency, long timeStamp, long timeStamp100nSec, System.Diagnostics.PerformanceCounterType counterType, long counterTimeStamp )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CounterSample), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(Int64), typeof(PerformanceCounterType), typeof(Int64));

            CounterSample.Empty = default( System.Diagnostics.CounterSample );
            }
        public static float Calculate( System.Diagnostics.CounterSample counterSample ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Calculate), typeof(CounterSample) );
            return default( float );

		}
        public static float Calculate( System.Diagnostics.CounterSample counterSample, System.Diagnostics.CounterSample nextCounterSample ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Calculate), typeof(CounterSample), typeof(CounterSample) );
            return default( float );

		}
        public override bool Equals( System.Object o ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );

		}
        public bool Equals( System.Diagnostics.CounterSample sample ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(CounterSample) );
            return default( bool );

		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
    }
}