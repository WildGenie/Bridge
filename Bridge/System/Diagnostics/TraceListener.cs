// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Diagnostics;
using System.Collections.Specialized;
using System.Collections;

namespace System.Diagnostics {
    public abstract class TraceListener: System.MarshalByRefObject, System.IDisposable {

        public System.Collections.Specialized.StringDictionary Attributes {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Attributes));
				return default (StringDictionary);
			}
		}
        public virtual string Name { get; set; }
        public virtual bool IsThreadSafe {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsThreadSafe));
				return default (Boolean);
			}
		}
        public int IndentLevel { get; set; }
        public int IndentSize { get; set; }
        public System.Diagnostics.TraceFilter Filter { get; set; }
        internal bool NeedIndent {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NeedIndent));
				return default (Boolean);
			}
		}
        public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public virtual void Close() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close) );
		}
        public virtual void Flush() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Flush) );
		}
        internal void SetAttributes( System.Collections.Hashtable attribs ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAttributes), typeof(Hashtable) );
		}
        public virtual void Fail( string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Fail), typeof(String) );
		}
        public virtual void Fail( string message, string detailMessage ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Fail), typeof(String), typeof(String) );
		}
        internal virtual string[][] GetSupportedAttributes() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSupportedAttributes) );
            return default( string[][] );

		}
        public abstract void Write( string message );

        public virtual void Write( System.Object o ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Object) );
		}
        public virtual void Write( string message, string category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(String), typeof(String) );
		}
        public virtual void Write( System.Object o, string category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Write), typeof(Object), typeof(String) );
		}
        protected virtual void WriteIndent() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteIndent) );
		}
        public abstract void WriteLine( string message );

        public virtual void WriteLine( System.Object o ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteLine), typeof(Object) );
		}
        public virtual void WriteLine( string message, string category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteLine), typeof(String), typeof(String) );
		}
        public virtual void WriteLine( System.Object o, string category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteLine), typeof(Object), typeof(String) );
		}
        public virtual void TraceData( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, System.Object data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(Object) );
		}
        public virtual void TraceData( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, System.Object[] data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceData), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(Object[]) );
		}
        public virtual void TraceEvent( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32) );
		}
        public virtual void TraceEvent( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(String) );
		}
        public virtual void TraceEvent( System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, System.Object[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceEvent), typeof(TraceEventCache), typeof(String), typeof(TraceEventType), typeof(Int32), typeof(String), typeof(Object[]) );
		}
        public virtual void TraceTransfer( System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, System.Guid relatedActivityId ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TraceTransfer), typeof(TraceEventCache), typeof(String), typeof(Int32), typeof(String), typeof(Guid) );
		}
        internal bool IsEnabled( System.Diagnostics.TraceOptions opts ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsEnabled), typeof(TraceOptions) );
            return default( bool );

		}
    }
}