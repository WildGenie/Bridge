// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security;
using System.Security.Permissions;
using System.Diagnostics;
using System;

namespace System.Diagnostics {
    public class EventLogPermission {

        public System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PermissionEntries));
				return default (EventLogPermissionEntryCollection);
			}
		}
        public EventLogPermission(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogPermission));
            }
        public EventLogPermission( System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogPermission), typeof(EventLogPermissionEntry[]));
            }
        public EventLogPermission( System.Security.Permissions.PermissionState state )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogPermission), typeof(PermissionState));
            }
        public EventLogPermission( System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EventLogPermission), typeof(EventLogPermissionAccess), typeof(String));
            }
        internal System.Security.Permissions.ResourcePermissionBaseEntry[][] GetEntries() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEntries) );
            return default( System.Security.Permissions.ResourcePermissionBaseEntry[][] );

		}
        internal void ClearEntries() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ClearEntries) );
		}
        internal void Add( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(Object) );
		}
        internal void Remove( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(Object) );
		}
    }
}