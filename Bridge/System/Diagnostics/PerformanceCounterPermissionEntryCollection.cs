// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Diagnostics;
using System;

namespace System.Diagnostics {
    public class PerformanceCounterPermissionEntryCollection: System.Collections.CollectionBase {

        public new System.Diagnostics.PerformanceCounterPermissionEntry this[int index] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.Diagnostics.PerformanceCounterPermissionEntry );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        public int Add( System.Diagnostics.PerformanceCounterPermissionEntry value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(PerformanceCounterPermissionEntry) );
            return default( int );

		}
        public void AddRange( System.Diagnostics.PerformanceCounterPermissionEntry[] value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(PerformanceCounterPermissionEntry[]) );
		}
        public void AddRange( System.Diagnostics.PerformanceCounterPermissionEntryCollection value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(PerformanceCounterPermissionEntryCollection) );
		}
        public bool Contains( System.Diagnostics.PerformanceCounterPermissionEntry value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(PerformanceCounterPermissionEntry) );
            return default( bool );

		}
        public void CopyTo( System.Diagnostics.PerformanceCounterPermissionEntry[] array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(PerformanceCounterPermissionEntry[]), typeof(Int32) );
		}
        public int IndexOf( System.Diagnostics.PerformanceCounterPermissionEntry value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IndexOf), typeof(PerformanceCounterPermissionEntry) );
            return default( int );

		}
        public void Insert( int index, System.Diagnostics.PerformanceCounterPermissionEntry value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Insert), typeof(Int32), typeof(PerformanceCounterPermissionEntry) );
		}
        protected override void OnClear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnClear) );
		}
        protected override void OnInsert( int index, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnInsert), typeof(Int32), typeof(Object) );
		}
        protected override void OnRemove( int index, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnRemove), typeof(Int32), typeof(Object) );
		}
        protected override void OnSet( int index, System.Object oldValue, System.Object newValue ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnSet), typeof(Int32), typeof(Object), typeof(Object) );
		}
        public void Remove( System.Diagnostics.PerformanceCounterPermissionEntry value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(PerformanceCounterPermissionEntry) );
		}
    }
}