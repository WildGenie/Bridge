// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Collections;

namespace System.Diagnostics {
    public class TraceEventCache {

        internal System.Guid ActivityId {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ActivityId));
				return default (Guid);
			}
		}
        public string Callstack {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Callstack));
				return default (String);
			}
		}
        public System.Collections.Stack LogicalOperationStack {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogicalOperationStack));
				return default (Stack);
			}
		}
        public System.DateTime DateTime {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DateTime));
				return default (DateTime);
			}
		}
        public int ProcessId {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProcessId));
				return default (Int32);
			}
		}
        public string ThreadId {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ThreadId));
				return default (String);
			}
		}
        public long Timestamp {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Timestamp));
				return default (Int64);
			}
		}
        internal static int GetProcessId() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProcessId) );
            return default( int );

		}
        internal static string GetProcessName() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProcessName) );
            return default( string );

		}
        internal static int GetThreadId() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetThreadId) );
            return default( int );

		}
    }
}