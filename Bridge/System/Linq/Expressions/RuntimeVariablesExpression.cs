// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections.ObjectModel;
using System;
using System.Linq.Expressions;
using System.Collections.Generic;
using System.Linq;
using System.Collections;

namespace System.Linq.Expressions {
    public class RuntimeVariablesExpression: System.Linq.Expressions.Expression {

        public new System.Type Type {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Type));
				return default (Type);
			}
		}
        public new System.Linq.Expressions.ExpressionType NodeType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NodeType));
				return default (ExpressionType);
			}
		}
        public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression> Variables {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Variables));
				return default (ReadOnlyCollection<ParameterExpression>);
			}
		}
        internal System.Linq.Expressions.Expression Accept( System.Linq.Expressions.ExpressionVisitor visitor ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Accept), typeof(ExpressionVisitor) );
            return default( System.Linq.Expressions.Expression );

		}
        public System.Linq.Expressions.RuntimeVariablesExpression Update( System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Update), typeof(IEnumerable) );
            return default( System.Linq.Expressions.RuntimeVariablesExpression );

		}

        public RuntimeVariablesExpression(ExpressionType nodeType, Type type) : base(nodeType, type)
        {
        }
    }
}