// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Buffers.Binary;

namespace System.Buffers.Binary {
    public static class BinaryPrimitives {

        public static byte ReverseEndianness( byte value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReverseEndianness), typeof(Byte) );
            return default( byte );

		}
        public static short  ReverseEndianness( short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReverseEndianness), typeof(short) );
            return default( short  );

		}
        public static int ReverseEndianness( int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReverseEndianness), typeof(UInt32) );
            return default( int );

		}
        public static long ReverseEndianness( long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReverseEndianness), typeof(UInt64) );
            return default( long );

		}
        public static T ReadMachineEndian<T>( System.ReadOnlySpan<byte> buffer )
            where T : struct {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadMachineEndian), typeof(ReadOnlySpan<byte>) );
            return default( T );

		}
        public static bool TryReadMachineEndian<T>( System.ReadOnlySpan<byte> buffer, out T value )
            where T : struct {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadMachineEndian), typeof(ReadOnlySpan<byte>), typeof(T) );
            value = default( T );

            return default( bool );

		}
        public static System.Int16 ReadInt16BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt16BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( System.Int16 );

		}
        public static int ReadInt32BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt32BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( int );

		}
        public static long ReadInt64BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt64BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( long );

		}
        public static short  ReadUInt16BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt16BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( short  );

		}
        public static int ReadUInt32BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt32BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( int );

		}
        public static long ReadUInt64BigEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt64BigEndian), typeof(ReadOnlySpan<byte>) );
            return default( long );

		}
        public static bool TryReadInt16BigEndian( System.ReadOnlySpan<byte> buffer, out System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt16BigEndian), typeof(ReadOnlySpan<byte>), typeof(Int16) );
            value = default( System.Int16 );

            return default( bool );

		}
        public static bool TryReadInt32BigEndian( System.ReadOnlySpan<byte> buffer, out System.Int32 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt32BigEndian), typeof(ReadOnlySpan<byte>), typeof(Int32) );
            value = default( System.Int32 );

            return default( bool );

		}
        public static bool TryReadInt64BigEndian( System.ReadOnlySpan<byte> buffer, out System.Int64 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt64BigEndian), typeof(ReadOnlySpan<byte>), typeof(Int64) );
            value = default( System.Int64 );

            return default( bool );

		}
        public static bool TryReadUInt16BigEndian( System.ReadOnlySpan<byte> buffer, out short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt16BigEndian), typeof(ReadOnlySpan<byte>), typeof(short) );
            value = default( short  );

            return default( bool );

		}
        public static bool TryReadUInt32BigEndian( System.ReadOnlySpan<byte> buffer, out int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt32BigEndian), typeof(ReadOnlySpan<byte>), typeof(UInt32) );
            value = default( int );

            return default( bool );

		}
        public static bool TryReadUInt64BigEndian( System.ReadOnlySpan<byte> buffer, out long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt64BigEndian), typeof(ReadOnlySpan<byte>), typeof(UInt64) );
            value = default( long );

            return default( bool );

		}
        public static System.Int16 ReadInt16LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt16LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( System.Int16 );

		}
        public static int ReadInt32LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt32LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( int );

		}
        public static long ReadInt64LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadInt64LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( long );

		}
        public static short  ReadUInt16LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt16LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( short  );

		}
        public static int ReadUInt32LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt32LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( int );

		}
        public static long ReadUInt64LittleEndian( System.ReadOnlySpan<byte> buffer ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadUInt64LittleEndian), typeof(ReadOnlySpan<byte>) );
            return default( long );

		}
        public static bool TryReadInt16LittleEndian( System.ReadOnlySpan<byte> buffer, out System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt16LittleEndian), typeof(ReadOnlySpan<byte>), typeof(Int16) );
            value = default( System.Int16 );

            return default( bool );

		}
        public static bool TryReadInt32LittleEndian( System.ReadOnlySpan<byte> buffer, out System.Int32 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt32LittleEndian), typeof(ReadOnlySpan<byte>), typeof(Int32) );
            value = default( System.Int32 );

            return default( bool );

		}
        public static bool TryReadInt64LittleEndian( System.ReadOnlySpan<byte> buffer, out System.Int64 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadInt64LittleEndian), typeof(ReadOnlySpan<byte>), typeof(Int64) );
            value = default( System.Int64 );

            return default( bool );

		}
        public static bool TryReadUInt16LittleEndian( System.ReadOnlySpan<byte> buffer, out short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt16LittleEndian), typeof(ReadOnlySpan<byte>), typeof(short) );
            value = default( short  );

            return default( bool );

		}
        public static bool TryReadUInt32LittleEndian( System.ReadOnlySpan<byte> buffer, out int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt32LittleEndian), typeof(ReadOnlySpan<byte>), typeof(UInt32) );
            value = default( int );

            return default( bool );

		}
        public static bool TryReadUInt64LittleEndian( System.ReadOnlySpan<byte> buffer, out long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryReadUInt64LittleEndian), typeof(ReadOnlySpan<byte>), typeof(UInt64) );
            value = default( long );

            return default( bool );

		}
        public static void WriteMachineEndian<T>( System.Span<byte> buffer, ref T value )
            where T : struct {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteMachineEndian), typeof(Span<byte>), typeof(T) );
		}
        public static bool TryWriteMachineEndian<T>( System.Span<byte> buffer, ref T value )
            where T : struct {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteMachineEndian), typeof(Span<byte>), typeof(T) );
            return default( bool );

		}
        public static void WriteInt16BigEndian( System.Span<byte> buffer, System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt16BigEndian), typeof(Span<byte>), typeof(Int16) );
		}
        public static void WriteInt32BigEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt32BigEndian), typeof(Span<byte>), typeof(Int32) );
		}
        public static void WriteInt64BigEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt64BigEndian), typeof(Span<byte>), typeof(Int64) );
		}
        public static void WriteUInt16BigEndian( System.Span<byte> buffer, short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt16BigEndian), typeof(Span<byte>), typeof(short) );
		}
        public static void WriteUInt32BigEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt32BigEndian), typeof(Span<byte>), typeof(UInt32) );
		}
        public static void WriteUInt64BigEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt64BigEndian), typeof(Span<byte>), typeof(UInt64) );
		}
        public static bool TryWriteInt16BigEndian( System.Span<byte> buffer, System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt16BigEndian), typeof(Span<byte>), typeof(Int16) );
            return default( bool );

		}
        public static bool TryWriteInt32BigEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt32BigEndian), typeof(Span<byte>), typeof(Int32) );
            return default( bool );

		}
        public static bool TryWriteInt64BigEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt64BigEndian), typeof(Span<byte>), typeof(Int64) );
            return default( bool );

		}
        public static bool TryWriteUInt16BigEndian( System.Span<byte> buffer, short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt16BigEndian), typeof(Span<byte>), typeof(short) );
            return default( bool );

		}
        public static bool TryWriteUInt32BigEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt32BigEndian), typeof(Span<byte>), typeof(UInt32) );
            return default( bool );

		}
        public static bool TryWriteUInt64BigEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt64BigEndian), typeof(Span<byte>), typeof(UInt64) );
            return default( bool );

		}
        public static void WriteInt16LittleEndian( System.Span<byte> buffer, System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt16LittleEndian), typeof(Span<byte>), typeof(Int16) );
		}
        public static void WriteInt32LittleEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt32LittleEndian), typeof(Span<byte>), typeof(Int32) );
		}
        public static void WriteInt64LittleEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteInt64LittleEndian), typeof(Span<byte>), typeof(Int64) );
		}
        public static void WriteUInt16LittleEndian( System.Span<byte> buffer, short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt16LittleEndian), typeof(Span<byte>), typeof(short) );
		}
        public static void WriteUInt32LittleEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt32LittleEndian), typeof(Span<byte>), typeof(UInt32) );
		}
        public static void WriteUInt64LittleEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(WriteUInt64LittleEndian), typeof(Span<byte>), typeof(UInt64) );
		}
        public static bool TryWriteInt16LittleEndian( System.Span<byte> buffer, System.Int16 value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt16LittleEndian), typeof(Span<byte>), typeof(Int16) );
            return default( bool );

		}
        public static bool TryWriteInt32LittleEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt32LittleEndian), typeof(Span<byte>), typeof(Int32) );
            return default( bool );

		}
        public static bool TryWriteInt64LittleEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteInt64LittleEndian), typeof(Span<byte>), typeof(Int64) );
            return default( bool );

		}
        public static bool TryWriteUInt16LittleEndian( System.Span<byte> buffer, short  value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt16LittleEndian), typeof(Span<byte>), typeof(short) );
            return default( bool );

		}
        public static bool TryWriteUInt32LittleEndian( System.Span<byte> buffer, int value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt32LittleEndian), typeof(Span<byte>), typeof(UInt32) );
            return default( bool );

		}
        public static bool TryWriteUInt64LittleEndian( System.Span<byte> buffer, long value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TryWriteUInt64LittleEndian), typeof(Span<byte>), typeof(UInt64) );
            return default( bool );

		}
    }
}