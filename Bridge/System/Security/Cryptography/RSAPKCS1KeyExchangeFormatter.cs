// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security.Cryptography;
using System;
using System.Security;

namespace System.Security.Cryptography {
    public class RSAPKCS1KeyExchangeFormatter: System.Security.Cryptography.AsymmetricKeyExchangeFormatter {

        public override string Parameters { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Parameters));
				return default (String);
			}
		}
        public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }
        internal bool OverridesEncrypt { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OverridesEncrypt));
				return default (Boolean);
			}
		}
        public RSAPKCS1KeyExchangeFormatter(  )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RSAPKCS1KeyExchangeFormatter));
            }
        public RSAPKCS1KeyExchangeFormatter( System.Security.Cryptography.AsymmetricAlgorithm key )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RSAPKCS1KeyExchangeFormatter), typeof(AsymmetricAlgorithm));
            }
        public override void SetKey( System.Security.Cryptography.AsymmetricAlgorithm key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetKey), typeof(AsymmetricAlgorithm) ); 
		}
        public override byte[][] CreateKeyExchange( byte[] rgbData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateKeyExchange), typeof(Byte[]) );
            return default( byte[][] );
        
		}
        public override byte[][] CreateKeyExchange( byte[] rgbData, System.Type symAlgType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateKeyExchange), typeof(Byte[]), typeof(Type) );
            return default( byte[][] );
        
		}
    }
}