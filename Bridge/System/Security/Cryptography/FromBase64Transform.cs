// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security.Cryptography;
using System;

namespace System.Security.Cryptography {
    public class FromBase64Transform: System.Security.Cryptography.ICryptoTransform {

        public virtual int InputBlockSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InputBlockSize));
				return default (Int32);
			}
		}
        public virtual int OutputBlockSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OutputBlockSize));
				return default (Int32);
			}
		}
        public virtual bool CanTransformMultipleBlocks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanTransformMultipleBlocks));
				return default (Boolean);
			}
		}
        public virtual bool CanReuseTransform {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanReuseTransform));
				return default (Boolean);
			}
		}
        public FromBase64Transform(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromBase64Transform));
            }
        public FromBase64Transform( System.Security.Cryptography.FromBase64TransformMode whitespaces )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromBase64Transform), typeof(FromBase64TransformMode));
            }
        public int TransformBlock( byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TransformBlock), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Byte[]), typeof(Int32) );
            return default( int );

		}
        public byte[] TransformFinalBlock( byte[] inputBuffer, int inputOffset, int inputCount ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TransformFinalBlock), typeof(Byte[]), typeof(Int32), typeof(Int32) );
            return default( byte[] );

		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        public void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
    }
}