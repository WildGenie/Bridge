// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography;
using System.Security;

namespace System.Security.Cryptography {
    public class ECDiffieHellmanCng: System.Security.Cryptography.ECDiffieHellman {

        public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }
        public byte[][] HmacKey { get; set; }
        public System.Security.Cryptography.CngKey Key {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Key));
				return default (CngKey);
			}
		}
        public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }
        public byte[][] Label { get; set; }
        public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PublicKey));
				return default (ECDiffieHellmanPublicKey);
			}
		}
        public byte[][] SecretAppend { get; set; }
        public byte[][] SecretPrepend { get; set; }
        public byte[][] Seed { get; set; }
        public bool UseSecretAgreementAsHmacKey {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UseSecretAgreementAsHmacKey));
				return default (Boolean);
			}
		}
        public ECDiffieHellmanCng(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ECDiffieHellmanCng));
            }
        public ECDiffieHellmanCng( int keySize )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ECDiffieHellmanCng), typeof(Int32));
            }
        public ECDiffieHellmanCng( System.Security.Cryptography.CngKey key )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ECDiffieHellmanCng), typeof(CngKey));
            }
        public ECDiffieHellmanCng( System.Security.Cryptography.ECCurve curve )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ECDiffieHellmanCng), typeof(ECCurve));
            }
        public byte[][] DeriveKeyMaterial( System.Security.Cryptography.CngKey otherPartyPublicKey ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DeriveKeyMaterial), typeof(CngKey) );
            return default( byte[][] );

		}
        public void FromXmlString( string xml, System.Security.Cryptography.ECKeyXmlFormat format ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXmlString), typeof(String), typeof(ECKeyXmlFormat) );
		}
        public string ToXmlString( System.Security.Cryptography.ECKeyXmlFormat format ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXmlString), typeof(ECKeyXmlFormat) );
            return default( string );

		}
    }
}