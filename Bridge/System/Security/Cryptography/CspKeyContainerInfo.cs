// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security.Cryptography;
using System;
using System.Security.AccessControl;
using System.Security;

namespace System.Security.Cryptography {
    public class CspKeyContainerInfo {

        internal bool _random;

        public bool Accessible { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Accessible));
				return default (Boolean);
			}
		}
        public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CryptoKeySecurity));
				return default (CryptoKeySecurity);
			}
		}
        public bool Exportable { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exportable));
				return default (Boolean);
			}
		}
        public bool HardwareDevice { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HardwareDevice));
				return default (Boolean);
			}
		}
        public string KeyContainerName { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(KeyContainerName));
				return default (String);
			}
		}
        public System.Security.Cryptography.KeyNumber KeyNumber { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(KeyNumber));
				return default (KeyNumber);
			}
		}
        public bool MachineKeyStore { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MachineKeyStore));
				return default (Boolean);
			}
		}
        public bool Protected { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Protected));
				return default (Boolean);
			}
		}
        public string ProviderName { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderName));
				return default (String);
			}
		}
        public int ProviderType { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ProviderType));
				return default (Int32);
			}
		}
        public bool RandomlyGenerated { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RandomlyGenerated));
				return default (Boolean);
			}
		}
        public bool Removable { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Removable));
				return default (Boolean);
			}
		}
        public string UniqueKeyContainerName { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UniqueKeyContainerName));
				return default (String);
			}
		}
        public CspKeyContainerInfo( System.Security.Cryptography.CspParameters parameters )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CspKeyContainerInfo), typeof(CspParameters));
            }
    }
}