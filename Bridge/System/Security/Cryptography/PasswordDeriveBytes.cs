// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography;

namespace System.Security.Cryptography {
    public class PasswordDeriveBytes: System.Security.Cryptography.DeriveBytes {

        public string HashName { get; set; }
        public int IterationCount { get; set; }
        public byte[][] Salt { get; set; }
        public PasswordDeriveBytes( string strPassword, byte[] rgbSalt )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(String), typeof(Byte[]));
            }
        public PasswordDeriveBytes( byte[] password, byte[] salt )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(Byte[]), typeof(Byte[]));
            }
        public PasswordDeriveBytes( string strPassword, byte[] rgbSalt, string strHashName, int iterations )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(String), typeof(Byte[]), typeof(String), typeof(Int32));
            }
        public PasswordDeriveBytes( byte[] password, byte[] salt, string hashName, int iterations )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(Byte[]), typeof(Byte[]), typeof(String), typeof(Int32));
            }
        public PasswordDeriveBytes( string strPassword, byte[] rgbSalt, System.Security.Cryptography.CspParameters cspParams )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(String), typeof(Byte[]), typeof(CspParameters));
            }
        public PasswordDeriveBytes( byte[] password, byte[] salt, System.Security.Cryptography.CspParameters cspParams )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(Byte[]), typeof(Byte[]), typeof(CspParameters));
            }
        public PasswordDeriveBytes( string strPassword, byte[] rgbSalt, string strHashName, int iterations, System.Security.Cryptography.CspParameters cspParams )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(String), typeof(Byte[]), typeof(String), typeof(Int32), typeof(CspParameters));
            }
        public PasswordDeriveBytes( byte[] password, byte[] salt, string hashName, int iterations, System.Security.Cryptography.CspParameters cspParams )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PasswordDeriveBytes), typeof(Byte[]), typeof(Byte[]), typeof(String), typeof(Int32), typeof(CspParameters));
            }
        public override byte[] GetBytes( int cb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetBytes), typeof(Int32) );
            return default( byte[] );

		}
        public override void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        protected void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public byte[][] CryptDeriveKey( string algname, string alghashname, int keySize, byte[] rgbIV ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CryptDeriveKey), typeof(String), typeof(String), typeof(Int32), typeof(Byte[]) );
            return default( byte[][] );

		}
    }
}