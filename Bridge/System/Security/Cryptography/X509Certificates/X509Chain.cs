// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;

namespace System.Security.Cryptography.X509Certificates {
    public class X509Chain: System.IDisposable {

        internal bool IsValid {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsValid));
				return default (Boolean);
			}
		}
        public System.IntPtr ChainContext {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ChainContext));
				return default (IntPtr);
			}
		}
        public System.Security.Cryptography.X509Certificates.X509ChainElementCollection ChainElements {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ChainElements));
				return default (X509ChainElementCollection);
			}
		}
        public System.Security.Cryptography.X509Certificates.X509ChainPolicy ChainPolicy { get; set; }
        public System.Security.Cryptography.X509Certificates.X509ChainStatus[][] ChainStatus {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ChainStatus));
				return default (X509ChainStatus[][]);
			}
		}
        public X509Chain(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Chain));
            }
        public X509Chain( bool useMachineContext )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Chain), typeof(Boolean));
            }
        public X509Chain( System.IntPtr chainContext )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Chain), typeof(IntPtr));
            }
        internal void ThrowIfContextInvalid() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ThrowIfContextInvalid) );
		}
        public bool Build( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Build), typeof(X509Certificate2) );
            return default( bool );

		}
        public void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        public static System.Security.Cryptography.X509Certificates.X509Chain Create() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create) );
            return default( System.Security.Cryptography.X509Certificates.X509Chain );

		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
    }
}