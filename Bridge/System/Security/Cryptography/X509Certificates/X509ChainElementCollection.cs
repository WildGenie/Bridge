// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;

namespace System.Security.Cryptography.X509Certificates {
    public class X509ChainElementCollection: System.Collections.ICollection {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSynchronized));
				return default (Boolean);
			}
		}
        public System.Security.Cryptography.X509Certificates.X509ChainElement this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
				return default (X509ChainElement);
			}
		}
        public virtual System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SyncRoot));
				return default (Object);
			}
		}
        public void CopyTo( System.Security.Cryptography.X509Certificates.X509ChainElement[] array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(X509ChainElement[]), typeof(Int32) );
		}
        public System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator );

		}
        internal void Add( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(X509Certificate2) );
		}
        internal void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        internal bool Contains( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(X509Certificate2) );
            return default( bool );

		}
        void @System.Collections.ICollection.CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.ICollection.CopyTo), typeof(Array), typeof(Int32) );
		}
        System.Collections.IEnumerator @System.Collections.IEnumerable.GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IEnumerable.GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
    }
}