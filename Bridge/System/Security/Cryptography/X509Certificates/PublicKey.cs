// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography;
using System.Security;

namespace System.Security.Cryptography.X509Certificates {
    public class PublicKey {

        public System.Security.Cryptography.AsnEncodedData EncodedKeyValue { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EncodedKeyValue));
				return default (AsnEncodedData);
			}
		}
        public System.Security.Cryptography.AsnEncodedData EncodedParameters { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EncodedParameters));
				return default (AsnEncodedData);
			}
		}
        public System.Security.Cryptography.AsymmetricAlgorithm Key { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Key));
				return default (AsymmetricAlgorithm);
			}
		}
        public System.Security.Cryptography.Oid Oid { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Oid));
				return default (Oid);
			}
		}
        public PublicKey( System.Security.Cryptography.Oid oid, System.Security.Cryptography.AsnEncodedData parameters, System.Security.Cryptography.AsnEncodedData keyValue )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PublicKey), typeof(Oid), typeof(AsnEncodedData), typeof(AsnEncodedData));
            }
        internal static System.Security.Cryptography.DSA DecodeDSA( byte[] rawPublicKey, byte[] rawParameters ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DecodeDSA), typeof(Byte[]), typeof(Byte[]) );
            return default( System.Security.Cryptography.DSA );
        
		}
        internal static System.Security.Cryptography.RSA DecodeRSA( byte[] rawPublicKey ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DecodeRSA), typeof(Byte[]) );
            return default( System.Security.Cryptography.RSA );
        
		}
    }
}