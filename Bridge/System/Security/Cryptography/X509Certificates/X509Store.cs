// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;

namespace System.Security.Cryptography.X509Certificates {
    public class X509Store: System.IDisposable {

        public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Certificates));
				return default (X509Certificate2Collection);
			}
		}
        public System.Security.Cryptography.X509Certificates.StoreLocation Location {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Location));
				return default (StoreLocation);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        internal bool IsOpen {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsOpen));
				return default (Boolean);
			}
		}
        internal bool IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReadOnly));
				return default (Boolean);
			}
		}
        public System.IntPtr StoreHandle {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(StoreHandle));
				return default (IntPtr);
			}
		}
        public X509Store(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store));
            }
        public X509Store( string storeName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(String));
            }
        public X509Store( System.Security.Cryptography.X509Certificates.StoreName storeName )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(StoreName));
            }
        public X509Store( System.Security.Cryptography.X509Certificates.StoreLocation storeLocation )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(StoreLocation));
            }
        public X509Store( System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(StoreName), typeof(StoreLocation));
            }
        public X509Store( System.IntPtr storeHandle )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(IntPtr));
            }
        public X509Store( string storeName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Store), typeof(String), typeof(StoreLocation));
            }
        public void Add( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(X509Certificate2) );
		}
        public void AddRange( System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(X509Certificate2Collection) );
		}
        public void Close() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Close) );
		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        public void Open( System.Security.Cryptography.X509Certificates.OpenFlags flags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Open), typeof(OpenFlags) );
		}
        public void Remove( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(X509Certificate2) );
		}
        public void RemoveRange( System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveRange), typeof(X509Certificate2Collection) );
		}
    }
}