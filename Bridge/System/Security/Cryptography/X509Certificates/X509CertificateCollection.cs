// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Security.Cryptography.X509Certificates;
using System;
using System.Security.Cryptography;

namespace System.Security.Cryptography.X509Certificates {
    public class X509CertificateCollection: System.Collections.CollectionBase {

        public new System.Security.Cryptography.X509Certificates.X509Certificate this[int index] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.Security.Cryptography.X509Certificates.X509Certificate );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        public X509CertificateCollection(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509CertificateCollection));
            }
        public X509CertificateCollection( System.Security.Cryptography.X509Certificates.X509Certificate[] value )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509CertificateCollection), typeof(X509Certificate[]));
            }
        public X509CertificateCollection( System.Security.Cryptography.X509Certificates.X509CertificateCollection value )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509CertificateCollection), typeof(X509CertificateCollection));
            }
        public int Add( System.Security.Cryptography.X509Certificates.X509Certificate value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(X509Certificate) );
            return default( int );

		}
        public void AddRange( System.Security.Cryptography.X509Certificates.X509Certificate[] value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(X509Certificate[]) );
		}
        public void AddRange( System.Security.Cryptography.X509Certificates.X509CertificateCollection value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(X509CertificateCollection) );
		}
        public bool Contains( System.Security.Cryptography.X509Certificates.X509Certificate value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(X509Certificate) );
            return default( bool );

		}
        public void CopyTo( System.Security.Cryptography.X509Certificates.X509Certificate[] array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(X509Certificate[]), typeof(Int32) );
		}
        public new System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator );

		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
        public int IndexOf( System.Security.Cryptography.X509Certificates.X509Certificate value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IndexOf), typeof(X509Certificate) );
            return default( int );

		}
        public void Insert( int index, System.Security.Cryptography.X509Certificates.X509Certificate value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Insert), typeof(Int32), typeof(X509Certificate) );
		}
        public void Remove( System.Security.Cryptography.X509Certificates.X509Certificate value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(X509Certificate) );
		}
        public class X509CertificateEnumerator: System.Collections.IEnumerator {

        public System.Security.Cryptography.X509Certificates.X509Certificate Current {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Current));
				return default (X509Certificate);
			}
		}
        System.Object @System.Collections.IEnumerator.Current {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IEnumerator.Current));
				return default (Object);
			}
		}
        public X509CertificateEnumerator( System.Security.Cryptography.X509Certificates.X509CertificateCollection mappings )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509CertificateEnumerator), typeof(X509CertificateCollection));
            }
        public bool MoveNext() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MoveNext) );
            return default( bool );

		}
        public void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        }
    }
}