// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography;
using System.Security;

namespace System.Security.Cryptography.X509Certificates {
    public class X509EnhancedKeyUsageExtension: System.Security.Cryptography.X509Certificates.X509Extension {

        internal const string oid = "2.5.29.37";

        internal const string friendlyName = "Enhanced Key Usage";

        public System.Security.Cryptography.OidCollection EnhancedKeyUsages {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnhancedKeyUsages));
				return default (OidCollection);
			}
		}
        public X509EnhancedKeyUsageExtension(  ) : base( default( System.Security.Cryptography.AsnEncodedData ), default( bool ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509EnhancedKeyUsageExtension));
            }
        public X509EnhancedKeyUsageExtension( System.Security.Cryptography.AsnEncodedData encodedEnhancedKeyUsages, bool critical ) : base( default( System.Security.Cryptography.AsnEncodedData ), default( bool ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509EnhancedKeyUsageExtension), typeof(AsnEncodedData), typeof(Boolean));
            }
        public X509EnhancedKeyUsageExtension( System.Security.Cryptography.OidCollection enhancedKeyUsages, bool critical ) : base( default( System.Security.Cryptography.AsnEncodedData ), default( bool ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509EnhancedKeyUsageExtension), typeof(OidCollection), typeof(Boolean));
            }
        public override void CopyFrom( System.Security.Cryptography.AsnEncodedData asnEncodedData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyFrom), typeof(AsnEncodedData) );
		}
        internal byte[][] Encode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Encode) );
            return default( byte[][] );

		}
        internal override string ToString( bool multiLine ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString), typeof(Boolean) );
            return default( string );

		}
    }
}