// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Security.Cryptography.X509Certificates;
using System.Security.Cryptography;

namespace System.Security.Cryptography.X509Certificates {
    public class X509Certificate2Collection: System.Security.Cryptography.X509Certificates.X509CertificateCollection {

        public new System.Security.Cryptography.X509Certificates.X509Certificate2 this[int index] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.Security.Cryptography.X509Certificates.X509Certificate2 );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        public X509Certificate2Collection(  ) : base( default( System.Security.Cryptography.X509Certificates.X509Certificate[] ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Certificate2Collection));
            }
        public X509Certificate2Collection( System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates ) : base( default( System.Security.Cryptography.X509Certificates.X509Certificate[] ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Certificate2Collection), typeof(X509Certificate2Collection));
            }
        public X509Certificate2Collection( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) : base( default( System.Security.Cryptography.X509Certificates.X509Certificate[] ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Certificate2Collection), typeof(X509Certificate2));
            }
        public X509Certificate2Collection( System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates ) : base( default( System.Security.Cryptography.X509Certificates.X509Certificate[] ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(X509Certificate2Collection), typeof(X509Certificate2[]));
            }
        public int Add( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(X509Certificate2) );
            return default( int );

		}
        public void AddRange( System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(X509Certificate2[]) );
		}
        public void AddRange( System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRange), typeof(X509Certificate2Collection) );
		}
        public bool Contains( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(X509Certificate2) );
            return default( bool );

		}
        public byte[][] Export( System.Security.Cryptography.X509Certificates.X509ContentType contentType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Export), typeof(X509ContentType) );
            return default( byte[][] );

		}
        public byte[][] Export( System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Export), typeof(X509ContentType), typeof(String) );
            return default( byte[][] );

		}
        public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Find( System.Security.Cryptography.X509Certificates.X509FindType findType, System.Object findValue, bool validOnly ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Find), typeof(X509FindType), typeof(Object), typeof(Boolean) );
            return default( System.Security.Cryptography.X509Certificates.X509Certificate2Collection );

		}
        public new System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator );

		}
        public void Import( byte[] rawData ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Import), typeof(Byte[]) );
		}
        public void Import( byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Import), typeof(Byte[]), typeof(String), typeof(X509KeyStorageFlags) );
		}
        public void Import( string fileName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Import), typeof(String) );
		}
        public void Import( string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Import), typeof(String), typeof(String), typeof(X509KeyStorageFlags) );
		}
        public void Insert( int index, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Insert), typeof(Int32), typeof(X509Certificate2) );
		}
        public void Remove( System.Security.Cryptography.X509Certificates.X509Certificate2 certificate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(X509Certificate2) );
		}
        public void RemoveRange( System.Security.Cryptography.X509Certificates.X509Certificate2[] certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveRange), typeof(X509Certificate2[]) );
		}
        public void RemoveRange( System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveRange), typeof(X509Certificate2Collection) );
		}
    }
}