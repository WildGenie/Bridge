// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Cryptography;
using System.Security;

namespace System.Security.Cryptography {
    public class IncrementalHash: System.IDisposable {

        public System.Security.Cryptography.HashAlgorithmName AlgorithmName { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AlgorithmName));
				return default (HashAlgorithmName);
			}
		}
        public void AppendData( byte[] data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AppendData), typeof(Byte[]) ); 
		}
        public void AppendData( byte[] data, int offset, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AppendData), typeof(Byte[]), typeof(Int32), typeof(Int32) ); 
		}
        public byte[][] GetHashAndReset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashAndReset) );
            return default( byte[][] );
        
		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) ); 
		}
        public static System.Security.Cryptography.IncrementalHash CreateHash( System.Security.Cryptography.HashAlgorithmName hashAlgorithm ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateHash), typeof(HashAlgorithmName) );
            return default( System.Security.Cryptography.IncrementalHash );
        
		}
        public static System.Security.Cryptography.IncrementalHash CreateHMAC( System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateHMAC), typeof(HashAlgorithmName), typeof(Byte[]) );
            return default( System.Security.Cryptography.IncrementalHash );
        
		}
    }
}