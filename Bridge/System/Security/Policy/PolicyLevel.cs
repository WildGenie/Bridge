// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.Policy;
using System.Collections;
using System.Reflection;
using System.Security;

namespace System.Security.Policy {
    public class PolicyLevel {

        public System.Collections.IList FullTrustAssemblies {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FullTrustAssemblies));
				return default (IList);
			}
		}
        public string Label {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Label));
				return default (String);
			}
		}
        public System.Collections.IList NamedPermissionSets {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NamedPermissionSets));
				return default (IList);
			}
		}
        public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }
        public string StoreLocation {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(StoreLocation));
				return default (String);
			}
		}
        public System.Security.PolicyLevelType Type {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Type));
				return default (PolicyLevelType);
			}
		}
        internal void LoadFromFile( string filename ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LoadFromFile), typeof(String) );
		}
        internal void LoadFromString( string xml ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LoadFromString), typeof(String) );
		}
        public void AddFullTrustAssembly( System.Security.Policy.StrongName sn ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddFullTrustAssembly), typeof(StrongName) );
		}
        public void AddFullTrustAssembly( System.Security.Policy.StrongNameMembershipCondition snMC ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddFullTrustAssembly), typeof(StrongNameMembershipCondition) );
		}
        public void AddNamedPermissionSet( System.Security.NamedPermissionSet permSet ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddNamedPermissionSet), typeof(NamedPermissionSet) );
		}
        public System.Security.NamedPermissionSet ChangeNamedPermissionSet( string name, System.Security.PermissionSet pSet ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ChangeNamedPermissionSet), typeof(String), typeof(PermissionSet) );
            return default( System.Security.NamedPermissionSet );

		}
        public static System.Security.Policy.PolicyLevel CreateAppDomainLevel() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateAppDomainLevel) );
            return default( System.Security.Policy.PolicyLevel );

		}
        public void FromXml( System.Security.SecurityElement e ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXml), typeof(SecurityElement) );
		}
        public System.Security.NamedPermissionSet GetNamedPermissionSet( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetNamedPermissionSet), typeof(String) );
            return default( System.Security.NamedPermissionSet );

		}
        public void Recover() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Recover) );
		}
        public void RemoveFullTrustAssembly( System.Security.Policy.StrongName sn ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveFullTrustAssembly), typeof(StrongName) );
		}
        public void RemoveFullTrustAssembly( System.Security.Policy.StrongNameMembershipCondition snMC ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveFullTrustAssembly), typeof(StrongNameMembershipCondition) );
		}
        public System.Security.NamedPermissionSet RemoveNamedPermissionSet( System.Security.NamedPermissionSet permSet ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveNamedPermissionSet), typeof(NamedPermissionSet) );
            return default( System.Security.NamedPermissionSet );

		}
        public System.Security.NamedPermissionSet RemoveNamedPermissionSet( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveNamedPermissionSet), typeof(String) );
            return default( System.Security.NamedPermissionSet );

		}
        public void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        public System.Security.Policy.PolicyStatement Resolve( System.Security.Policy.Evidence evidence ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Resolve), typeof(Evidence) );
            return default( System.Security.Policy.PolicyStatement );

		}
        public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups( System.Security.Policy.Evidence evidence ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResolveMatchingCodeGroups), typeof(Evidence) );
            return default( System.Security.Policy.CodeGroup );

		}
        public System.Security.SecurityElement ToXml() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXml) );
            return default( System.Security.SecurityElement );

		}
        internal void Save() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Save) );
		}
        internal void CreateDefaultLevel( System.Security.PolicyLevelType type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateDefaultLevel), typeof(PolicyLevelType) );
		}
        internal void CreateDefaultFullTrustAssemblies() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateDefaultFullTrustAssemblies) );
		}
        internal void CreateDefaultNamedPermissionSets() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateDefaultNamedPermissionSets) );
		}
        internal string ResolveClassName( string className ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResolveClassName), typeof(String) );
            return default( string );

		}
        internal bool IsFullTrustAssembly( System.Reflection.Assembly a ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsFullTrustAssembly), typeof(Assembly) );
            return default( bool );

		}
    }
}