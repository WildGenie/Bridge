// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Security;
using System.Runtime.Serialization;

namespace System.Security {
    public class ReadOnlyPermissionSet: System.Security.PermissionSet {

        public ReadOnlyPermissionSet( System.Security.SecurityElement permissionSetXml ) : base( default( System.Security.Permissions.PermissionState ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadOnlyPermissionSet), typeof(SecurityElement));
            }
        protected System.Security.IPermission AddPermissionImpl( System.Security.IPermission perm ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddPermissionImpl), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
        protected System.Collections.IEnumerator GetEnumeratorImpl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumeratorImpl) );
            return default( System.Collections.IEnumerator );

		}
        protected System.Security.IPermission GetPermissionImpl( System.Type permClass ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPermissionImpl), typeof(Type) );
            return default( System.Security.IPermission );

		}
        protected System.Security.IPermission RemovePermissionImpl( System.Type permClass ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemovePermissionImpl), typeof(Type) );
            return default( System.Security.IPermission );

		}
        protected System.Security.IPermission SetPermissionImpl( System.Security.IPermission perm ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetPermissionImpl), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
    }
}