// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security;
using System.Security.Permissions;
using System;

namespace System.Security.Permissions {
    public abstract class IsolatedStoragePermission: System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission {

        internal long m_userQuota;

        internal long m_machineQuota;

        internal long m_expirationDays;

        internal bool m_permanentData;

        internal System.Security.Permissions.IsolatedStorageContainment m_allowed;

        public long UserQuota { get; set; }
        public System.Security.Permissions.IsolatedStorageContainment UsageAllowed { get; set; }
        public bool IsUnrestricted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsUnrestricted) );
            return default( bool );
        
		}
        public override System.Security.SecurityElement ToXml() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXml) );
            return default( System.Security.SecurityElement );
        
		}
        public override void FromXml( System.Security.SecurityElement esd ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXml), typeof(SecurityElement) ); 
		}
        internal bool IsEmpty() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsEmpty) );
            return default( bool );
        
		}
    }
}