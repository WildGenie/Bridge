// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security;
using System.Security.Permissions;
using System;
using System.Collections;

namespace System.Security.Permissions {
    public class PrincipalPermission: System.Security.IPermission, System.Security.Permissions.IUnrestrictedPermission {

        public PrincipalPermission( System.Security.Permissions.PermissionState state )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrincipalPermission), typeof(PermissionState));
            }
        public PrincipalPermission( string name, string role )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrincipalPermission), typeof(String), typeof(String));
            }
        public PrincipalPermission( string name, string role, bool isAuthenticated )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrincipalPermission), typeof(String), typeof(String), typeof(Boolean));
            }
        public System.Security.IPermission Copy() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Copy) );
            return default( System.Security.IPermission );

		}
        public void Demand() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Demand) );
		}
        public void FromXml( System.Security.SecurityElement elem ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromXml), typeof(SecurityElement) );
		}
        public System.Security.IPermission Intersect( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Intersect), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
        public bool IsSubsetOf( System.Security.IPermission target ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSubsetOf), typeof(IPermission) );
            return default( bool );

		}
        public bool IsUnrestricted() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsUnrestricted) );
            return default( bool );

		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
        public System.Security.SecurityElement ToXml() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToXml) );
            return default( System.Security.SecurityElement );

		}
        public System.Security.IPermission Union( System.Security.IPermission other ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Union), typeof(IPermission) );
            return default( System.Security.IPermission );

		}
        public override bool Equals( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );

		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
        internal int CheckSecurityElement( System.Security.SecurityElement se, string parameterName, int minimumVersion, int maximumVersion ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckSecurityElement), typeof(SecurityElement), typeof(String), typeof(Int32), typeof(Int32) );
            return default( int );

		}
        public class PrincipalInfo {

        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public string Role {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Role));
				return default (String);
			}
		}
        public bool IsAuthenticated {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAuthenticated));
				return default (Boolean);
			}
		}
        public PrincipalInfo( string name, string role, bool isAuthenticated )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PrincipalInfo), typeof(String), typeof(String), typeof(Boolean));
            }
        }
    }
}