// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Security.AccessControl;
using System.Security.Principal;
using System.Security;
using System.Runtime.Serialization;

namespace System.Security.AccessControl {
    public abstract class CommonAcl: System.Security.AccessControl.GenericAcl {

        public override int BinaryLength {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BinaryLength));
				return default (Int32);
			}
		}
        public override int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public bool IsCanonical {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsCanonical));
				return default (Boolean);
			}
		}
        public bool IsContainer {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsContainer));
				return default (Boolean);
			}
		}
        public bool IsDS {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDS));
				return default (Boolean);
			}
		}
        internal bool IsAefa {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAefa));
				return default (Boolean);
			}
		}
        public override byte Revision {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Revision));
				return default (Byte);
			}
		}
        public override System.Security.AccessControl.GenericAce this[int index] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.Security.AccessControl.GenericAce );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }

        public delegate bool RemoveAcesCallback<T>( T ace );
        public override void GetBinaryForm( byte[] binaryForm, int offset ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetBinaryForm), typeof(Byte[]), typeof(Int32) );
		}
        public void Purge( System.Security.Principal.SecurityIdentifier sid ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Purge), typeof(SecurityIdentifier) );
		}
        public void RemoveInheritedAces() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveInheritedAces) );
		}
        internal void RequireCanonicity() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RequireCanonicity) );
		}
        internal void CanonicalizeAndClearAefa() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanonicalizeAndClearAefa) );
		}
        internal virtual bool IsAceMeaningless( System.Security.AccessControl.GenericAce ace ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAceMeaningless), typeof(GenericAce) );
            return default( bool );

		}
        internal int GetCanonicalExplicitDenyAceCount() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCanonicalExplicitDenyAceCount) );
            return default( int );

		}
        internal int GetCanonicalExplicitAceCount() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCanonicalExplicitAceCount) );
            return default( int );

		}
        internal abstract void ApplyCanonicalSortToExplicitAces();

        internal void ApplyCanonicalSortToExplicitAces( int start, int count ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ApplyCanonicalSortToExplicitAces), typeof(Int32), typeof(Int32) );
		}
        internal override string GetSddlForm( System.Security.AccessControl.ControlFlags sdFlags, bool isDacl ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSddlForm), typeof(ControlFlags), typeof(Boolean) );
            return default( string );

		}
        internal void RemoveAces<T>( RemoveAcesCallback<T> callback )
            where T : GenericAce {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAces), typeof(RemoveAcesCallback<T>) );
		}
        internal void AddAce( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddAce), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags) );
		}
        internal void AddAce( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, System.Guid objectType, System.Guid inheritedObjectType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddAce), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags), typeof(ObjectAceFlags), typeof(Guid), typeof(Guid) );
		}
        internal abstract int GetAceInsertPosition( System.Security.AccessControl.AceQualifier aceQualifier );

        internal void RemoveAceSpecific( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAceSpecific), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags) );
		}
        internal void RemoveAceSpecific( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, System.Guid objectType, System.Guid inheritedObjectType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAceSpecific), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags), typeof(ObjectAceFlags), typeof(Guid), typeof(Guid) );
		}
        internal void SetAce( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAce), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags) );
		}
        internal void SetAce( System.Security.AccessControl.AceQualifier aceQualifier, System.Security.Principal.SecurityIdentifier sid, int accessMask, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags auditFlags, System.Security.AccessControl.ObjectAceFlags objectFlags, System.Guid objectType, System.Guid inheritedObjectType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAce), typeof(AceQualifier), typeof(SecurityIdentifier), typeof(Int32), typeof(InheritanceFlags), typeof(PropagationFlags), typeof(AuditFlags), typeof(ObjectAceFlags), typeof(Guid), typeof(Guid) );
		}
    }
}