// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security.AccessControl;
using System;

namespace System.Security.AccessControl {
    public abstract class CommonObjectSecurity: System.Security.AccessControl.ObjectSecurity {

        public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules( bool includeExplicit, bool includeInherited, System.Type targetType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAccessRules), typeof(Boolean), typeof(Boolean), typeof(Type) );
            return default( System.Security.AccessControl.AuthorizationRuleCollection );

		}
        public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules( bool includeExplicit, bool includeInherited, System.Type targetType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetAuditRules), typeof(Boolean), typeof(Boolean), typeof(Type) );
            return default( System.Security.AccessControl.AuthorizationRuleCollection );

		}
        protected void AddAccessRule( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddAccessRule), typeof(AccessRule) );
		}
        protected bool RemoveAccessRule( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAccessRule), typeof(AccessRule) );
            return default( bool );

		}
        protected void RemoveAccessRuleAll( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAccessRuleAll), typeof(AccessRule) );
		}
        protected void RemoveAccessRuleSpecific( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAccessRuleSpecific), typeof(AccessRule) );
		}
        protected void ResetAccessRule( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResetAccessRule), typeof(AccessRule) );
		}
        protected void SetAccessRule( System.Security.AccessControl.AccessRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAccessRule), typeof(AccessRule) );
		}
        protected override bool ModifyAccess( System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out System.Boolean modified ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ModifyAccess), typeof(AccessControlModification), typeof(AccessRule), typeof(Boolean) );
            modified = default( System.Boolean );

            return default( bool );

		}
        protected void AddAuditRule( System.Security.AccessControl.AuditRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddAuditRule), typeof(AuditRule) );
		}
        protected bool RemoveAuditRule( System.Security.AccessControl.AuditRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAuditRule), typeof(AuditRule) );
            return default( bool );

		}
        protected void RemoveAuditRuleAll( System.Security.AccessControl.AuditRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAuditRuleAll), typeof(AuditRule) );
		}
        protected void RemoveAuditRuleSpecific( System.Security.AccessControl.AuditRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveAuditRuleSpecific), typeof(AuditRule) );
		}
        protected void SetAuditRule( System.Security.AccessControl.AuditRule rule ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetAuditRule), typeof(AuditRule) );
		}
        protected override bool ModifyAudit( System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out System.Boolean modified ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ModifyAudit), typeof(AccessControlModification), typeof(AuditRule), typeof(Boolean) );
            modified = default( System.Boolean );

            return default( bool );

		}
    }
}