// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Security.Principal;
using System;
using System.Security.AccessControl;
using System.Security;

namespace System.Security.AccessControl {
    public abstract class AuthorizationRule {

        public System.Security.Principal.IdentityReference IdentityReference { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IdentityReference));
				return default (IdentityReference);
			}
		}
        public System.Security.AccessControl.InheritanceFlags InheritanceFlags { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InheritanceFlags));
				return default (InheritanceFlags);
			}
		}
        public bool IsInherited { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsInherited));
				return default (Boolean);
			}
		}
        public System.Security.AccessControl.PropagationFlags PropagationFlags { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PropagationFlags));
				return default (PropagationFlags);
			}
		}
        internal int AccessMask { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AccessMask));
				return default (Int32);
			}
		}
    }
}