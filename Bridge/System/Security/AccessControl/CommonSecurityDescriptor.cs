// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Security.AccessControl;
using System.Security.Principal;
using System.Security;

namespace System.Security.AccessControl {
    public class CommonSecurityDescriptor: System.Security.AccessControl.GenericSecurityDescriptor {

        public override System.Security.AccessControl.ControlFlags ControlFlags { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ControlFlags));
				return default (ControlFlags);
			}
		}
        public System.Security.AccessControl.DiscretionaryAcl DiscretionaryAcl { get; set; }
        internal override System.Security.AccessControl.GenericAcl InternalDacl { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalDacl));
				return default (GenericAcl);
			}
		}
        public override System.Security.Principal.SecurityIdentifier Group { get; set; }
        public bool IsContainer { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsContainer));
				return default (Boolean);
			}
		}
        public bool IsDiscretionaryAclCanonical { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDiscretionaryAclCanonical));
				return default (Boolean);
			}
		}
        public bool IsDS { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDS));
				return default (Boolean);
			}
		}
        public bool IsSystemAclCanonical { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSystemAclCanonical));
				return default (Boolean);
			}
		}
        public override System.Security.Principal.SecurityIdentifier Owner { get; set; }
        public System.Security.AccessControl.SystemAcl SystemAcl { get; set; }
        internal override System.Security.AccessControl.GenericAcl InternalSacl { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalSacl));
				return default (GenericAcl);
			}
		}
        internal override bool DaclIsUnmodifiedAefa { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DaclIsUnmodifiedAefa));
				return default (Boolean);
			}
		}
        public CommonSecurityDescriptor( bool isContainer, bool isDS, System.Security.AccessControl.RawSecurityDescriptor rawSecurityDescriptor )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CommonSecurityDescriptor), typeof(Boolean), typeof(Boolean), typeof(RawSecurityDescriptor));
            }
        public CommonSecurityDescriptor( bool isContainer, bool isDS, string sddlForm )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CommonSecurityDescriptor), typeof(Boolean), typeof(Boolean), typeof(String));
            }
        public CommonSecurityDescriptor( bool isContainer, bool isDS, byte[] binaryForm, int offset )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CommonSecurityDescriptor), typeof(Boolean), typeof(Boolean), typeof(Byte[]), typeof(Int32));
            }
        public CommonSecurityDescriptor( bool isContainer, bool isDS, System.Security.AccessControl.ControlFlags flags, System.Security.Principal.SecurityIdentifier owner, System.Security.Principal.SecurityIdentifier group, System.Security.AccessControl.SystemAcl systemAcl, System.Security.AccessControl.DiscretionaryAcl discretionaryAcl )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CommonSecurityDescriptor), typeof(Boolean), typeof(Boolean), typeof(ControlFlags), typeof(SecurityIdentifier), typeof(SecurityIdentifier), typeof(SystemAcl), typeof(DiscretionaryAcl));
            }
        public void PurgeAccessControl( System.Security.Principal.SecurityIdentifier sid ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PurgeAccessControl), typeof(SecurityIdentifier) ); 
		}
        public void PurgeAudit( System.Security.Principal.SecurityIdentifier sid ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PurgeAudit), typeof(SecurityIdentifier) ); 
		}
        public void SetDiscretionaryAclProtection( bool isProtected, bool preserveInheritance ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetDiscretionaryAclProtection), typeof(Boolean), typeof(Boolean) ); 
		}
        public void SetSystemAclProtection( bool isProtected, bool preserveInheritance ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetSystemAclProtection), typeof(Boolean), typeof(Boolean) ); 
		}
        public void AddDiscretionaryAcl( byte revision, int trusted ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddDiscretionaryAcl), typeof(Byte), typeof(Int32) ); 
		}
        public void AddSystemAcl( byte revision, int trusted ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddSystemAcl), typeof(Byte), typeof(Int32) ); 
		}
    }
}