// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Security.AccessControl;
using System.Security;

namespace System.Security.AccessControl {
    public abstract class GenericAcl: System.Collections.ICollection {

        public abstract int BinaryLength { get; }
        public abstract int Count { get; }

        public virtual bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSynchronized));
				return default (Boolean);
			}
		}
        public abstract System.Security.AccessControl.GenericAce this[int index] { get; set; }

        public abstract byte Revision { get; }

        public virtual System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SyncRoot));
				return default (Object);
			}
		}
        public void CopyTo( System.Security.AccessControl.GenericAce[] array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(GenericAce[]), typeof(Int32) );
		}
        public abstract void GetBinaryForm( byte[] binaryForm, int offset );

        public System.Security.AccessControl.AceEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Security.AccessControl.AceEnumerator );

		}
        internal abstract string GetSddlForm( System.Security.AccessControl.ControlFlags sdFlags, bool isDacl );

        void @System.Collections.ICollection.CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.ICollection.CopyTo), typeof(Array), typeof(Int32) );
		}
        System.Collections.IEnumerator @System.Collections.IEnumerable.GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IEnumerable.GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
    }
}