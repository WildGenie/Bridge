// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Security.Authentication.ExtendedProtection;
using System;

namespace System.Security.Authentication.ExtendedProtection {
    public class ServiceNameCollection: System.Collections.ReadOnlyCollectionBase {

        public ServiceNameCollection( System.Collections.ICollection items )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ServiceNameCollection), typeof(ICollection));
            }
        public System.Security.Authentication.ExtendedProtection.ServiceNameCollection Merge( string serviceName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Merge), typeof(String) );
            return default( System.Security.Authentication.ExtendedProtection.ServiceNameCollection );
        
		}
        public System.Security.Authentication.ExtendedProtection.ServiceNameCollection Merge( System.Collections.IEnumerable serviceNames ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Merge), typeof(IEnumerable) );
            return default( System.Security.Authentication.ExtendedProtection.ServiceNameCollection );
        
		}
        internal static bool Contains( string searchServiceName, System.Collections.ICollection serviceNames ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(String), typeof(ICollection) );
            return default( bool );
        
		}
        public bool Contains( string searchServiceName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(String) );
            return default( bool );
        
		}
        internal static string NormalizeServiceName( string inputServiceName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NormalizeServiceName), typeof(String) );
            return default( string );
        
		}
        internal static bool Match( string serviceName1, string serviceName2 ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Match), typeof(String), typeof(String) );
            return default( bool );
        
		}
    }
}