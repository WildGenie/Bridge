// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Text;
using System;
using System.Runtime.Serialization;

namespace System.Text {
    public abstract class Encoder {

        public System.Text.EncoderFallback Fallback { get; set; }
        public System.Text.EncoderFallbackBuffer FallbackBuffer {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FallbackBuffer));
				return default (EncoderFallbackBuffer);
			}
		}
        internal bool InternalHasFallbackBuffer {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalHasFallbackBuffer));
				return default (Boolean);
			}
		}
        internal void SerializeEncoder( System.Runtime.Serialization.SerializationInfo info ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SerializeEncoder), typeof(SerializationInfo) );
		}
        public virtual void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        public abstract int GetByteCount( char[] chars, int index, int count, bool flush );

        public abstract int GetBytes( char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush );

        public virtual void Convert( char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out System.Int32 charsUsed, out System.Int32 bytesUsed, out System.Boolean completed ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Convert), typeof(Char[]), typeof(Int32), typeof(Int32), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Boolean), typeof(Int32), typeof(Int32), typeof(Boolean) );
            charsUsed = default( System.Int32 ); bytesUsed = default( System.Int32 ); completed = default( System.Boolean );

		}
    }
}