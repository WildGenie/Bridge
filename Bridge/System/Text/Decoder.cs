// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Text;
using System;
using System.Runtime.Serialization;

namespace System.Text {
    public abstract class Decoder {

        public System.Text.DecoderFallback Fallback { get; set; }
        public System.Text.DecoderFallbackBuffer FallbackBuffer {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FallbackBuffer));
				return default (DecoderFallbackBuffer);
			}
		}
        internal bool InternalHasFallbackBuffer {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalHasFallbackBuffer));
				return default (Boolean);
			}
		}
        internal void SerializeDecoder( System.Runtime.Serialization.SerializationInfo info ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SerializeDecoder), typeof(SerializationInfo) );
		}
        public virtual void Reset() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Reset) );
		}
        public abstract int GetCharCount( byte[] bytes, int index, int count );

        public virtual int GetCharCount( byte[] bytes, int index, int count, bool flush ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCharCount), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Boolean) );
            return default( int );

		}
        public abstract int GetChars( byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex );

        public virtual int GetChars( byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, bool flush ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetChars), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Char[]), typeof(Int32), typeof(Boolean) );
            return default( int );

		}
        public virtual void Convert( byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex, int charCount, bool flush, out System.Int32 bytesUsed, out System.Int32 charsUsed, out System.Boolean completed ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Convert), typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Char[]), typeof(Int32), typeof(Int32), typeof(Boolean), typeof(Int32), typeof(Int32), typeof(Boolean) );
            bytesUsed = default( System.Int32 ); charsUsed = default( System.Int32 ); completed = default( System.Boolean );

		}
    }
}