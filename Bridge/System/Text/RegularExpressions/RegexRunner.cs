// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Text.RegularExpressions;

namespace System.Text.RegularExpressions {
    public abstract class RegexRunner {

        internal int runtextbeg;

        internal int runtextend;

        internal int runtextstart;

        internal string runtext;

        internal int runtextpos;

        internal int[] runtrack;

        internal int runtrackpos;

        internal int[] runstack;

        internal int runstackpos;

        internal int[] runcrawl;

        internal int runcrawlpos;

        internal int runtrackcount;

        internal System.Text.RegularExpressions.Match runmatch;

        internal System.Text.RegularExpressions.Regex runregex;

        internal System.Text.RegularExpressions.Match Scan( System.Text.RegularExpressions.Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Scan), typeof(Regex), typeof(String), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Boolean) );
            return default( System.Text.RegularExpressions.Match );
        
		}
        internal System.Text.RegularExpressions.Match Scan( System.Text.RegularExpressions.Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick, System.TimeSpan timeout ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Scan), typeof(Regex), typeof(String), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Boolean), typeof(TimeSpan) );
            return default( System.Text.RegularExpressions.Match );
        
		}
        protected void CheckTimeout() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckTimeout) ); 
		}
        protected abstract void Go();

        protected abstract bool FindFirstChar();

        protected abstract void InitTrackCount();

        protected void EnsureStorage() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnsureStorage) ); 
		}
        protected bool IsBoundary( int index, int startpos, int endpos ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsBoundary), typeof(Int32), typeof(Int32), typeof(Int32) );
            return default( bool );
        
		}
        protected bool IsECMABoundary( int index, int startpos, int endpos ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsECMABoundary), typeof(Int32), typeof(Int32), typeof(Int32) );
            return default( bool );
        
		}
        protected static bool CharInSet( char ch, string set, string category ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CharInSet), typeof(Char), typeof(String), typeof(String) );
            return default( bool );
        
		}
        protected static bool CharInClass( char ch, string charClass ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CharInClass), typeof(Char), typeof(String) );
            return default( bool );
        
		}
        protected void DoubleTrack() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DoubleTrack) ); 
		}
        protected void DoubleStack() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DoubleStack) ); 
		}
        protected void DoubleCrawl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DoubleCrawl) ); 
		}
        protected void Crawl( int i ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Crawl), typeof(Int32) ); 
		}
        protected int Popcrawl() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Popcrawl) );
            return default( int );
        
		}
        protected int Crawlpos() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Crawlpos) );
            return default( int );
        
		}
        protected void Capture( int capnum, int start, int end ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Capture), typeof(Int32), typeof(Int32), typeof(Int32) ); 
		}
        protected void TransferCapture( int capnum, int uncapnum, int start, int end ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TransferCapture), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32) ); 
		}
        protected void Uncapture() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Uncapture) ); 
		}
        protected bool IsMatched( int cap ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsMatched), typeof(Int32) );
            return default( bool );
        
		}
        protected int MatchIndex( int cap ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MatchIndex), typeof(Int32) );
            return default( int );
        
		}
        protected int MatchLength( int cap ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MatchLength), typeof(Int32) );
            return default( int );
        
		}
    }
}