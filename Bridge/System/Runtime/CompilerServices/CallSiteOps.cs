// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.CompilerServices;
using System;

namespace System.Runtime.CompilerServices {
    public static class CallSiteOps {

        public static System.Runtime.CompilerServices.CallSite<T> CreateMatchmaker<T>( CallSite<T> site )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateMatchmaker) );
            return null;

		}
        public static bool SetNotMatched( System.Runtime.CompilerServices.CallSite site ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetNotMatched) );
            return default( bool );

		}
        public static bool GetMatch( System.Runtime.CompilerServices.CallSite site ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetMatch) );
            return default( bool );

		}
        public static void ClearMatch( System.Runtime.CompilerServices.CallSite site ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ClearMatch) );
		}
        public static void AddRule<T>( CallSite<T> site, T rule )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddRule), typeof(T) );
		}
        public static void UpdateRules<T>( CallSite<T> @this, int matched )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UpdateRules), typeof(Int32) );
		}
        public static T[][] GetRules<T>( CallSite<T> site )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRules) );
            return default( T[][] );

		}
        public static System.Runtime.CompilerServices.RuleCache<T> GetRuleCache<T>( CallSite<T> site )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRuleCache) );
            return default( System.Runtime.CompilerServices.RuleCache<T> );

		}
        public static void MoveRule<T>( RuleCache<T> cache, T rule, int i )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MoveRule), typeof(RuleCache<T>), typeof(T), typeof(Int32) );
		}
        public static T[][] GetCachedRules<T>( RuleCache<T> cache )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCachedRules), typeof(RuleCache<T>) );
            return default( T[][] );

		}
        public static T Bind<T>( System.Runtime.CompilerServices.CallSiteBinder binder, CallSite<T> site, System.Object[] args )
            where T : class {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Bind), typeof(Object[]) );
            return default( T );

		}
    }
}