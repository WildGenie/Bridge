// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Dynamic;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;
using System.Collections.Generic;

namespace System.Runtime.CompilerServices {
    public static class RuntimeOps {

        public static bool ExpandoTryGetValue( System.Dynamic.ExpandoObject expando, System.Object indexClass, int index, string name, bool ignoreCase, out System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExpandoTryGetValue), typeof(ExpandoObject), typeof(Object), typeof(Int32), typeof(String), typeof(Boolean), typeof(Object) );
            value = default( System.Object );

            return default( bool );

		}
        public static System.Object ExpandoTrySetValue( System.Dynamic.ExpandoObject expando, System.Object indexClass, int index, System.Object value, string name, bool ignoreCase ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExpandoTrySetValue), typeof(ExpandoObject), typeof(Object), typeof(Int32), typeof(Object), typeof(String), typeof(Boolean) );
            return default( System.Object );

		}
        public static bool ExpandoTryDeleteValue( System.Dynamic.ExpandoObject expando, System.Object indexClass, int index, string name, bool ignoreCase ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExpandoTryDeleteValue), typeof(ExpandoObject), typeof(Object), typeof(Int32), typeof(String), typeof(Boolean) );
            return default( bool );

		}
        public static bool ExpandoCheckVersion( System.Dynamic.ExpandoObject expando, System.Object version ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExpandoCheckVersion), typeof(ExpandoObject), typeof(Object) );
            return default( bool );

		}
        public static void ExpandoPromoteClass( System.Dynamic.ExpandoObject expando, System.Object oldClass, System.Object newClass ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExpandoPromoteClass), typeof(ExpandoObject), typeof(Object), typeof(Object) );
		}
        public static System.Linq.Expressions.Expression Quote( System.Linq.Expressions.Expression expression, System.Object hoistedLocals, System.Object[] locals ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Quote), typeof(Expression), typeof(Object), typeof(Object[]) );
            return default( System.Linq.Expressions.Expression );

		}
        public static System.Runtime.CompilerServices.IRuntimeVariables MergeRuntimeVariables( System.Runtime.CompilerServices.IRuntimeVariables first, System.Runtime.CompilerServices.IRuntimeVariables second, int[] indexes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MergeRuntimeVariables), typeof(IRuntimeVariables), typeof(IRuntimeVariables), typeof(Int32[]) );
            return default( System.Runtime.CompilerServices.IRuntimeVariables );

		}
        public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables( System.Object[] data, long[] indexes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateRuntimeVariables), typeof(Object[]), typeof(Int64[]) );
            return default( System.Runtime.CompilerServices.IRuntimeVariables );

		}
        public static System.Runtime.CompilerServices.IRuntimeVariables CreateRuntimeVariables() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateRuntimeVariables) );
            return default( System.Runtime.CompilerServices.IRuntimeVariables );

		}
        public class MergedRuntimeVariables: System.Runtime.CompilerServices.IRuntimeVariables {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual System.Object this[int index] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.Object );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        }
    }
}