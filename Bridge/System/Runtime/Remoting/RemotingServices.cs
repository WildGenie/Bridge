// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Runtime.Serialization.Formatters.Binary;
using System;
using System.Reflection;
using System.Runtime.Remoting.Messaging;
using System.Runtime.Remoting;
using System.Runtime.Remoting.Proxies;
using System.Runtime.Serialization;

namespace System.Runtime.Remoting {
    public static class RemotingServices {

        internal static System.Object InternalExecute( System.Reflection.MethodBase method, System.Object obj, System.Object[] parameters, out System.Object[] out_args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalExecute), typeof(MethodBase), typeof(Object), typeof(Object[]), typeof(Object[]) );
            out_args = default( System.Object[] );

            return default( System.Object );

		}
        internal static System.Reflection.MethodBase GetVirtualMethod( System.Type type, System.Reflection.MethodBase method ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetVirtualMethod), typeof(Type), typeof(MethodBase) );
            return default( System.Reflection.MethodBase );

		}
        public static bool IsTransparentProxy( System.Object proxy ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsTransparentProxy), typeof(Object) );
            return default( bool );

		}
        internal static System.Runtime.Remoting.Messaging.IMethodReturnMessage InternalExecuteMessage( System.MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalExecuteMessage), typeof(MarshalByRefObject), typeof(IMethodCallMessage) );
            return default( System.Runtime.Remoting.Messaging.IMethodReturnMessage );

		}
        public static System.Runtime.Remoting.Messaging.IMethodReturnMessage ExecuteMessage( System.MarshalByRefObject target, System.Runtime.Remoting.Messaging.IMethodCallMessage reqMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExecuteMessage), typeof(MarshalByRefObject), typeof(IMethodCallMessage) );
            return default( System.Runtime.Remoting.Messaging.IMethodReturnMessage );

		}
        public static System.Object Connect( System.Type classToProxy, string url ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(Type), typeof(String) );
            return default( System.Object );

		}
        public static System.Object Connect( System.Type classToProxy, string url, System.Object data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Connect), typeof(Type), typeof(String), typeof(Object) );
            return default( System.Object );

		}
        public static bool Disconnect( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Disconnect), typeof(MarshalByRefObject) );
            return default( bool );

		}
        public static System.Type GetServerTypeForUri( string URI ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetServerTypeForUri), typeof(String) );
            return default( System.Type );

		}
        public static string GetObjectUri( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectUri), typeof(MarshalByRefObject) );
            return default( string );

		}
        public static System.Object Unmarshal( System.Runtime.Remoting.ObjRef objectRef ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Unmarshal), typeof(ObjRef) );
            return default( System.Object );

		}
        public static System.Object Unmarshal( System.Runtime.Remoting.ObjRef objectRef, bool fRefine ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Unmarshal), typeof(ObjRef), typeof(Boolean) );
            return default( System.Object );

		}
        public static System.Runtime.Remoting.ObjRef Marshal( System.MarshalByRefObject Obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Marshal), typeof(MarshalByRefObject) );
            return default( System.Runtime.Remoting.ObjRef );

		}
        public static System.Runtime.Remoting.ObjRef Marshal( System.MarshalByRefObject Obj, string URI ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Marshal), typeof(MarshalByRefObject), typeof(String) );
            return default( System.Runtime.Remoting.ObjRef );

		}
        public static System.Runtime.Remoting.ObjRef Marshal( System.MarshalByRefObject Obj, string ObjURI, System.Type RequestedType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Marshal), typeof(MarshalByRefObject), typeof(String), typeof(Type) );
            return default( System.Runtime.Remoting.ObjRef );

		}
        public static System.Runtime.Remoting.Proxies.RealProxy GetRealProxy( System.Object proxy ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRealProxy), typeof(Object) );
            return default( System.Runtime.Remoting.Proxies.RealProxy );

		}
        public static System.Reflection.MethodBase GetMethodBaseFromMethodMessage( System.Runtime.Remoting.Messaging.IMethodMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetMethodBaseFromMethodMessage), typeof(IMethodMessage) );
            return default( System.Reflection.MethodBase );

		}
        internal static System.Reflection.MethodBase GetMethodBaseFromName( System.Type type, string methodName, System.Type[] signature ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetMethodBaseFromName), typeof(Type), typeof(String), typeof(Type[]) );
            return default( System.Reflection.MethodBase );

		}
        public static void GetObjectData( System.Object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectData), typeof(Object), typeof(SerializationInfo), typeof(StreamingContext) );
		}
        public static System.Runtime.Remoting.ObjRef GetObjRefForProxy( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjRefForProxy), typeof(MarshalByRefObject) );
            return default( System.Runtime.Remoting.ObjRef );

		}
        public static System.Object GetLifetimeService( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetLifetimeService), typeof(MarshalByRefObject) );
            return default( System.Object );

		}
        public static System.Runtime.Remoting.Messaging.IMessageSink GetEnvoyChainForProxy( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnvoyChainForProxy), typeof(MarshalByRefObject) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        public static void LogRemotingStage( int stage ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogRemotingStage), typeof(Int32) );
		}
        public static string GetSessionIdForMethodMessage( System.Runtime.Remoting.Messaging.IMethodMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSessionIdForMethodMessage), typeof(IMethodMessage) );
            return default( string );

		}
        public static bool IsMethodOverloaded( System.Runtime.Remoting.Messaging.IMethodMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsMethodOverloaded), typeof(IMethodMessage) );
            return default( bool );

		}
        public static bool IsObjectOutOfAppDomain( System.Object tp ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsObjectOutOfAppDomain), typeof(Object) );
            return default( bool );

		}
        public static bool IsObjectOutOfContext( System.Object tp ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsObjectOutOfContext), typeof(Object) );
            return default( bool );

		}
        public static bool IsOneWay( System.Reflection.MethodBase method ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsOneWay), typeof(MethodBase) );
            return default( bool );

		}
        internal static bool IsAsyncMessage( System.Runtime.Remoting.Messaging.IMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsAsyncMessage), typeof(IMessage) );
            return default( bool );

		}
        public static void SetObjectUriForMarshal( System.MarshalByRefObject obj, string uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetObjectUriForMarshal), typeof(MarshalByRefObject), typeof(String) );
		}
        internal static System.Object CreateClientProxy( System.Runtime.Remoting.ActivatedClientTypeEntry entry, System.Object[] activationAttributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientProxy), typeof(ActivatedClientTypeEntry), typeof(Object[]) );
            return default( System.Object );

		}
        internal static System.Object CreateClientProxy( System.Type objectType, string url, System.Object[] activationAttributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientProxy), typeof(Type), typeof(String), typeof(Object[]) );
            return default( System.Object );

		}
        internal static System.Object CreateClientProxy( System.Runtime.Remoting.WellKnownClientTypeEntry entry ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientProxy), typeof(WellKnownClientTypeEntry) );
            return default( System.Object );

		}
        internal static System.Object CreateClientProxyForContextBound( System.Type type, System.Object[] activationAttributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientProxyForContextBound), typeof(Type), typeof(Object[]) );
            return default( System.Object );

		}
        internal static System.Object CreateClientProxyForComInterop( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientProxyForComInterop), typeof(Type) );
            return default( System.Object );

		}
        internal static System.Object GetProxyForRemoteObject( System.Runtime.Remoting.ObjRef objref, System.Type classToProxy ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProxyForRemoteObject), typeof(ObjRef), typeof(Type) );
            return default( System.Object );

		}
        internal static System.Object GetRemoteObject( System.Runtime.Remoting.ObjRef objRef, System.Type proxyType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRemoteObject), typeof(ObjRef), typeof(Type) );
            return default( System.Object );

		}
        internal static System.Object GetServerObject( string uri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetServerObject), typeof(String) );
            return default( System.Object );

		}
        internal static byte[][] SerializeCallData( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SerializeCallData), typeof(Object) );
            return default( byte[][] );

		}
        internal static System.Object DeserializeCallData( byte[] array ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DeserializeCallData), typeof(Byte[]) );
            return default( System.Object );

		}
        internal static byte[][] SerializeExceptionData( System.Exception ex ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SerializeExceptionData), typeof(Exception) );
            return default( byte[][] );

		}
        internal static System.Object GetDomainProxy( System.AppDomain domain ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetDomainProxy), typeof(AppDomain) );
            return default( System.Object );

		}
    }
}