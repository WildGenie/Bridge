// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Remoting.Messaging;
using System;
using System.Reflection;
using System.Runtime.Remoting;
using System.Collections;
using System.Runtime;

namespace System.Runtime.Remoting.Messaging {
    public class ReturnMessage: System.Runtime.Remoting.Messaging.IMethodReturnMessage {

        public virtual int ArgCount {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ArgCount));
				return default (Int32);
			}
		}
        public virtual System.Object[][] Args {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Args));
				return default (Object[][]);
			}
		}
        public virtual bool HasVarArgs {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasVarArgs));
				return default (Boolean);
			}
		}
        public virtual System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LogicalCallContext));
				return default (LogicalCallContext);
			}
		}
        public virtual System.Reflection.MethodBase MethodBase {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MethodBase));
				return default (MethodBase);
			}
		}
        public virtual string MethodName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MethodName));
				return default (String);
			}
		}
        public virtual System.Object MethodSignature {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(MethodSignature));
				return default (Object);
			}
		}
        public virtual System.Collections.IDictionary Properties {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Properties));
				return default (IDictionary);
			}
		}
        public virtual string TypeName {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TypeName));
				return default (String);
			}
		}
        public virtual string Uri { get; set; }

        public virtual System.Exception Exception {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Exception));
				return default (Exception);
			}
		}
        public virtual int OutArgCount {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OutArgCount));
				return default (Int32);
			}
		}
        public virtual System.Object[][] OutArgs {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OutArgs));
				return default (Object[][]);
			}
		}
        public virtual System.Object ReturnValue {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReturnValue));
				return default (Object);
			}
		}
        public ReturnMessage( System.Object ret, System.Object[] outArgs, int outArgsCount, System.Runtime.Remoting.Messaging.LogicalCallContext callCtx, System.Runtime.Remoting.Messaging.IMethodCallMessage mcm )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReturnMessage), typeof(Object), typeof(Object[]), typeof(Int32), typeof(LogicalCallContext), typeof(IMethodCallMessage));
            }
        public ReturnMessage( System.Exception e, System.Runtime.Remoting.Messaging.IMethodCallMessage mcm )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReturnMessage), typeof(Exception), typeof(IMethodCallMessage));
            }
        public System.Object GetArg( int argNum ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetArg), typeof(Int32) );
            return default( System.Object );

		}
        public string GetArgName( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetArgName), typeof(Int32) );
            return default( string );

		}
        public System.Object GetOutArg( int argNum ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetOutArg), typeof(Int32) );
            return default( System.Object );

		}
        public string GetOutArgName( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetOutArgName), typeof(Int32) );
            return default( string );

		}
        internal bool HasProperties() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasProperties) );
            return default( bool );

		}
    }
}