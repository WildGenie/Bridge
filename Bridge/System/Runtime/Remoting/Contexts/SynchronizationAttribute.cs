// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Remoting.Contexts;
using System.Runtime.InteropServices;
using System;
using System.Threading;
using System.Runtime.Remoting.Activation;
using System.Runtime.Remoting.Messaging;

namespace System.Runtime.Remoting.Contexts {
    public class SynchronizationAttribute: System.Runtime.Remoting.Contexts.ContextAttribute, System.Runtime.Remoting.Contexts.IContributeClientContextSink, System.Runtime.Remoting.Contexts.IContributeServerContextSink {

        internal const int NOT_SUPPORTED = 1;

        internal const int SUPPORTED = 2;

        internal const int REQUIRED = 4;

        internal const int REQUIRES_NEW = 8;

        public virtual bool IsReEntrant { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReEntrant));
				return default (Boolean);
			}
		}
        public virtual bool Locked { get; set; }
        public SynchronizationAttribute(  ) : base( default( string ) ) { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SynchronizationAttribute));
            }
        public SynchronizationAttribute( bool reEntrant ) : base( default( string ) ) { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SynchronizationAttribute), typeof(Boolean));
            }
        public SynchronizationAttribute( int flag ) : base( default( string ) ) { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SynchronizationAttribute), typeof(Int32));
            }
        public SynchronizationAttribute( int flag, bool reEntrant ) : base( default( string ) ) { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SynchronizationAttribute), typeof(Int32), typeof(Boolean));
            }
        internal void AcquireLock() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AcquireLock) ); 
		}
        internal void ReleaseLock() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReleaseLock) ); 
		}
        public override void GetPropertiesForNewContext( System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPropertiesForNewContext), typeof(IConstructionCallMessage) ); 
		}
        public virtual System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSink( System.Runtime.Remoting.Messaging.IMessageSink nextSink ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetClientContextSink), typeof(IMessageSink) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );
        
		}
        public virtual System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink( System.Runtime.Remoting.Messaging.IMessageSink nextSink ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetServerContextSink), typeof(IMessageSink) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );
        
		}
        public override bool IsContextOK( System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsContextOK), typeof(Context), typeof(IConstructionCallMessage) );
            return default( bool );
        
		}
        internal static void ExitContext() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ExitContext) ); 
		}
        internal static void EnterContext() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EnterContext) ); 
		}
    }
}