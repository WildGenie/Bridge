// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.Remoting.Contexts;
using System.Runtime.InteropServices;
using System;
using System.Runtime.Remoting.Activation;

namespace System.Runtime.Remoting.Contexts {
    public class ContextAttribute: System.Attribute, System.Runtime.Remoting.Contexts.IContextAttribute, System.Runtime.Remoting.Contexts.IContextProperty {

        internal string AttributeName;

        public virtual string Name { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public ContextAttribute( string name )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContextAttribute), typeof(String));
            }
        public override bool Equals( System.Object o ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );
        
		}
        public virtual void Freeze( System.Runtime.Remoting.Contexts.Context newContext ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Freeze), typeof(Context) ); 
		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );
        
		}
        public virtual void GetPropertiesForNewContext( System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPropertiesForNewContext), typeof(IConstructionCallMessage) ); 
		}
        public virtual bool IsContextOK( System.Runtime.Remoting.Contexts.Context ctx, System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsContextOK), typeof(Context), typeof(IConstructionCallMessage) );
            return default( bool );
        
		}
        public virtual bool IsNewContextOK( System.Runtime.Remoting.Contexts.Context newCtx ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsNewContextOK), typeof(Context) );
            return default( bool );
        
		}
    }
}