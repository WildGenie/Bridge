// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Runtime.Remoting.Messaging;
using System.Collections.Generic;
using System.Runtime.Remoting.Contexts;
using System.Runtime.Remoting;

namespace System.Runtime.Remoting.Contexts {
    public class Context {

        public static System.Runtime.Remoting.Contexts.Context DefaultContext {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DefaultContext));
				return default (Context);
			}
		}
        public virtual int ContextID {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContextID));
				return default (Int32);
			}
		}
        public virtual System.Runtime.Remoting.Contexts.IContextProperty[][] ContextProperties {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContextProperties));
				return default (IContextProperty[][]);
			}
		}
        internal bool IsDefaultContext {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsDefaultContext));
				return default (Boolean);
			}
		}
        internal bool NeedsContextSink {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NeedsContextSink));
				return default (Boolean);
			}
		}
        internal static bool HasGlobalDynamicSinks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasGlobalDynamicSinks));
				return default (Boolean);
			}
		}
        internal bool HasDynamicSinks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasDynamicSinks));
				return default (Boolean);
			}
		}
        internal bool HasExitSinks {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasExitSinks));
				return default (Boolean);
			}
		}
        public static bool RegisterDynamicProperty( System.Runtime.Remoting.Contexts.IDynamicProperty prop, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterDynamicProperty), typeof(IDynamicProperty), typeof(ContextBoundObject), typeof(Context) );
            return default( bool );

		}
        public static bool UnregisterDynamicProperty( string name, System.ContextBoundObject obj, System.Runtime.Remoting.Contexts.Context ctx ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnregisterDynamicProperty), typeof(String), typeof(ContextBoundObject), typeof(Context) );
            return default( bool );

		}
        internal static void NotifyGlobalDynamicSinks( bool start, System.Runtime.Remoting.Messaging.IMessage req_msg, bool client_site, bool async ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotifyGlobalDynamicSinks), typeof(Boolean), typeof(IMessage), typeof(Boolean), typeof(Boolean) );
		}
        internal void NotifyDynamicSinks( bool start, System.Runtime.Remoting.Messaging.IMessage req_msg, bool client_site, bool async ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NotifyDynamicSinks), typeof(Boolean), typeof(IMessage), typeof(Boolean), typeof(Boolean) );
		}
        public virtual System.Runtime.Remoting.Contexts.IContextProperty GetProperty( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProperty), typeof(String) );
            return default( System.Runtime.Remoting.Contexts.IContextProperty );

		}
        public virtual void SetProperty( System.Runtime.Remoting.Contexts.IContextProperty prop ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetProperty), typeof(IContextProperty) );
		}
        public virtual void Freeze() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Freeze) );
		}
        public override string ToString() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToString) );
            return default( string );

		}
        internal System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSinkChain() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetServerContextSinkChain) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        internal System.Runtime.Remoting.Messaging.IMessageSink GetClientContextSinkChain() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetClientContextSinkChain) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        internal System.Runtime.Remoting.Messaging.IMessageSink CreateServerObjectSinkChain( System.MarshalByRefObject obj, bool forceInternalExecute ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateServerObjectSinkChain), typeof(MarshalByRefObject), typeof(Boolean) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        internal System.Runtime.Remoting.Messaging.IMessageSink CreateEnvoySink( System.MarshalByRefObject serverObject ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateEnvoySink), typeof(MarshalByRefObject) );
            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        internal static System.Runtime.Remoting.Contexts.Context SwitchToContext( System.Runtime.Remoting.Contexts.Context newContext ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SwitchToContext), typeof(Context) );
            return default( System.Runtime.Remoting.Contexts.Context );

		}
        public void DoCallBack( System.Runtime.Remoting.Contexts.CrossContextDelegate deleg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DoCallBack), typeof(CrossContextDelegate) );
		}
        public static System.LocalDataStoreSlot AllocateDataSlot() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AllocateDataSlot) );
            return default( System.LocalDataStoreSlot );

		}
        public static System.LocalDataStoreSlot AllocateNamedDataSlot( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AllocateNamedDataSlot), typeof(String) );
            return default( System.LocalDataStoreSlot );

		}
        public static void FreeNamedDataSlot( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FreeNamedDataSlot), typeof(String) );
		}
        public static System.LocalDataStoreSlot GetNamedDataSlot( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetNamedDataSlot), typeof(String) );
            return default( System.LocalDataStoreSlot );

		}
        public static System.Object GetData( System.LocalDataStoreSlot slot ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetData), typeof(LocalDataStoreSlot) );
            return default( System.Object );

		}
        public static void SetData( System.LocalDataStoreSlot slot, System.Object data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetData), typeof(LocalDataStoreSlot), typeof(Object) );
		}
    }
}