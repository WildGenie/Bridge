// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Runtime.Remoting.Contexts;
using System;
using System.Runtime.Remoting.Channels;
using System.Runtime.Remoting.Messaging;
using System.Runtime.Remoting;

namespace System.Runtime.Remoting.Channels {
    public class ChannelServices {
        public static System.Runtime.Remoting.Channels.IChannel[][] RegisteredChannels {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisteredChannels));
				return default (IChannel[][]);
			}
		}
        internal static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain( string url, System.Object remoteChannelData, out System.String objectUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientChannelSinkChain), typeof(String), typeof(Object), typeof(String) );
            objectUri = default( System.String );

            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        internal static System.Runtime.Remoting.Messaging.IMessageSink CreateClientChannelSinkChain( System.Runtime.Remoting.Channels.IChannelSender sender, string url, System.Object[] channelDataArray, out System.String objectUri ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateClientChannelSinkChain), typeof(IChannelSender), typeof(String), typeof(Object[]), typeof(String) );
            objectUri = default( System.String );

            return default( System.Runtime.Remoting.Messaging.IMessageSink );

		}
        public static System.Runtime.Remoting.Channels.IServerChannelSink CreateServerChannelSinkChain( System.Runtime.Remoting.Channels.IServerChannelSinkProvider provider, System.Runtime.Remoting.Channels.IChannelReceiver channel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateServerChannelSinkChain), typeof(IServerChannelSinkProvider), typeof(IChannelReceiver) );
            return default( System.Runtime.Remoting.Channels.IServerChannelSink );

		}
        public static System.Runtime.Remoting.Channels.ServerProcessing DispatchMessage( System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage msg, out System.Runtime.Remoting.Messaging.IMessage replyMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DispatchMessage), typeof(IServerChannelSinkStack), typeof(IMessage), typeof(IMessage) );
            replyMsg = default( System.Runtime.Remoting.Messaging.IMessage );

            return default( System.Runtime.Remoting.Channels.ServerProcessing );

		}
        public static System.Runtime.Remoting.Channels.IChannel GetChannel( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetChannel), typeof(String) );
            return default( System.Runtime.Remoting.Channels.IChannel );

		}
        public static System.Collections.IDictionary GetChannelSinkProperties( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetChannelSinkProperties), typeof(Object) );
            return default( System.Collections.IDictionary );

		}
        public static string[][] GetUrlsForObject( System.MarshalByRefObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetUrlsForObject), typeof(MarshalByRefObject) );
            return default( string[][] );

		}
        public static void RegisterChannel( System.Runtime.Remoting.Channels.IChannel chnl ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterChannel), typeof(IChannel) );
		}
        public static void RegisterChannel( System.Runtime.Remoting.Channels.IChannel chnl, bool ensureSecurity ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterChannel), typeof(IChannel), typeof(Boolean) );
		}
        public static System.Runtime.Remoting.Messaging.IMessage SyncDispatchMessage( System.Runtime.Remoting.Messaging.IMessage msg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SyncDispatchMessage), typeof(IMessage) );
            return default( System.Runtime.Remoting.Messaging.IMessage );

		}
        public static System.Runtime.Remoting.Messaging.IMessageCtrl AsyncDispatchMessage( System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AsyncDispatchMessage), typeof(IMessage), typeof(IMessageSink) );
            return default( System.Runtime.Remoting.Messaging.IMessageCtrl );

		}
        internal static System.Runtime.Remoting.Messaging.IMessage CheckReturnMessage( System.Runtime.Remoting.Messaging.IMessage callMsg, System.Runtime.Remoting.Messaging.IMessage retMsg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckReturnMessage), typeof(IMessage), typeof(IMessage) );
            return default( System.Runtime.Remoting.Messaging.IMessage );

		}
        public static void UnregisterChannel( System.Runtime.Remoting.Channels.IChannel chnl ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnregisterChannel), typeof(IChannel) );
		}
        internal static System.Object[][] GetCurrentChannelInfo() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCurrentChannelInfo) );
            return default( System.Object[][] );

		}
    }
}