// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Reflection;

namespace System.Runtime.Remoting {
    public class SoapServices {

        public static string XmlNsForClrType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(XmlNsForClrType));
				return default (String);
			}
		}
        public static string XmlNsForClrTypeWithAssembly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(XmlNsForClrTypeWithAssembly));
				return default (String);
			}
		}
        public static string XmlNsForClrTypeWithNs {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(XmlNsForClrTypeWithNs));
				return default (String);
			}
		}
        public static string XmlNsForClrTypeWithNsAndAssembly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(XmlNsForClrTypeWithNsAndAssembly));
				return default (String);
			}
		}
        public static string CodeXmlNamespaceForClrTypeNamespace( string typeNamespace, string assemblyName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CodeXmlNamespaceForClrTypeNamespace), typeof(String), typeof(String) );
            return default( string );

		}
        public static bool DecodeXmlNamespaceForClrTypeNamespace( string inNamespace, out System.String typeNamespace, out System.String assemblyName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DecodeXmlNamespaceForClrTypeNamespace), typeof(String), typeof(String), typeof(String) );
            typeNamespace = default( System.String ); assemblyName = default( System.String );

            return default( bool );

		}
        public static void GetInteropFieldTypeAndNameFromXmlAttribute( System.Type containingType, string xmlAttribute, string xmlNamespace, out System.Type type, out System.String name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInteropFieldTypeAndNameFromXmlAttribute), typeof(Type), typeof(String), typeof(String), typeof(Type), typeof(String) );
            type = default( System.Type ); name = default( System.String );

		}
        public static void GetInteropFieldTypeAndNameFromXmlElement( System.Type containingType, string xmlElement, string xmlNamespace, out System.Type type, out System.String name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInteropFieldTypeAndNameFromXmlElement), typeof(Type), typeof(String), typeof(String), typeof(Type), typeof(String) );
            type = default( System.Type ); name = default( System.String );

		}
        public static System.Type GetInteropTypeFromXmlElement( string xmlElement, string xmlNamespace ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInteropTypeFromXmlElement), typeof(String), typeof(String) );
            return default( System.Type );

		}
        public static System.Type GetInteropTypeFromXmlType( string xmlType, string xmlTypeNamespace ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInteropTypeFromXmlType), typeof(String), typeof(String) );
            return default( System.Type );

		}
        public static string GetSoapActionFromMethodBase( System.Reflection.MethodBase mb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSoapActionFromMethodBase), typeof(MethodBase) );
            return default( string );

		}
        public static bool GetTypeAndMethodNameFromSoapAction( string soapAction, out System.String typeName, out System.String methodName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetTypeAndMethodNameFromSoapAction), typeof(String), typeof(String), typeof(String) );
            typeName = default( System.String ); methodName = default( System.String );

            return default( bool );

		}
        public static bool GetXmlElementForInteropType( System.Type type, out System.String xmlElement, out System.String xmlNamespace ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetXmlElementForInteropType), typeof(Type), typeof(String), typeof(String) );
            xmlElement = default( System.String ); xmlNamespace = default( System.String );

            return default( bool );

		}
        public static string GetXmlNamespaceForMethodCall( System.Reflection.MethodBase mb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetXmlNamespaceForMethodCall), typeof(MethodBase) );
            return default( string );

		}
        public static string GetXmlNamespaceForMethodResponse( System.Reflection.MethodBase mb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetXmlNamespaceForMethodResponse), typeof(MethodBase) );
            return default( string );

		}
        public static bool GetXmlTypeForInteropType( System.Type type, out System.String xmlType, out System.String xmlTypeNamespace ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetXmlTypeForInteropType), typeof(Type), typeof(String), typeof(String) );
            xmlType = default( System.String ); xmlTypeNamespace = default( System.String );

            return default( bool );

		}
        public static bool IsClrTypeNamespace( string namespaceString ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsClrTypeNamespace), typeof(String) );
            return default( bool );

		}
        public static bool IsSoapActionValidForMethodBase( string soapAction, System.Reflection.MethodBase mb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSoapActionValidForMethodBase), typeof(String), typeof(MethodBase) );
            return default( bool );

		}
        public static void PreLoad( System.Reflection.Assembly assembly ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PreLoad), typeof(Assembly) );
		}
        public static void PreLoad( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PreLoad), typeof(Type) );
		}
        public static void RegisterInteropXmlElement( string xmlElement, string xmlNamespace, System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterInteropXmlElement), typeof(String), typeof(String), typeof(Type) );
		}
        public static void RegisterInteropXmlType( string xmlType, string xmlTypeNamespace, System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterInteropXmlType), typeof(String), typeof(String), typeof(Type) );
		}
        public static void RegisterSoapActionForMethodBase( System.Reflection.MethodBase mb ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterSoapActionForMethodBase), typeof(MethodBase) );
		}
        public static void RegisterSoapActionForMethodBase( System.Reflection.MethodBase mb, string soapAction ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterSoapActionForMethodBase), typeof(MethodBase), typeof(String) );
		}
    }
}