// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Runtime.Serialization;
using System.Reflection;
using System.Runtime;

namespace System.Runtime.Serialization {
    public class ObjectManager {

        internal System.Object TopObject {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(TopObject));
				return default (Object);
			}
		}

        public virtual System.Object GetObject( long objectID ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObject), typeof(Int64) );
            return default( System.Object );

		}
        public virtual void RegisterObject( System.Object obj, long objectID ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterObject), typeof(Object), typeof(Int64) );
		}
        public void RegisterObject( System.Object obj, long objectID, System.Runtime.Serialization.SerializationInfo info ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterObject), typeof(Object), typeof(Int64), typeof(SerializationInfo) );
		}
        public void RegisterObject( System.Object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterObject), typeof(Object), typeof(Int64), typeof(SerializationInfo), typeof(Int64), typeof(MemberInfo) );
		}
        internal void RegisterString( string obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterString), typeof(String), typeof(Int64), typeof(SerializationInfo), typeof(Int64), typeof(MemberInfo) );
		}
        public void RegisterObject( System.Object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RegisterObject), typeof(Object), typeof(Int64), typeof(SerializationInfo), typeof(Int64), typeof(MemberInfo), typeof(Int32[]) );
		}
        internal void CompleteISerializableObject( System.Object obj, System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CompleteISerializableObject), typeof(Object), typeof(SerializationInfo), typeof(StreamingContext) );
		}

        public virtual void DoFixups() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DoFixups) );
		}
        public virtual void RecordFixup( long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RecordFixup), typeof(Int64), typeof(MemberInfo), typeof(Int64) );
		}
        public virtual void RecordDelayedFixup( long objectToBeFixed, string memberName, long objectRequired ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RecordDelayedFixup), typeof(Int64), typeof(String), typeof(Int64) );
		}
        public virtual void RecordArrayElementFixup( long arrayToBeFixed, int index, long objectRequired ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RecordArrayElementFixup), typeof(Int64), typeof(Int32), typeof(Int64) );
		}
        public virtual void RecordArrayElementFixup( long arrayToBeFixed, int[] indices, long objectRequired ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RecordArrayElementFixup), typeof(Int64), typeof(Int32[]), typeof(Int64) );
		}
        public virtual void RaiseDeserializationEvent() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RaiseDeserializationEvent) );
		}
        internal virtual void AddOnDeserialized( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddOnDeserialized), typeof(Object) );
		}
        internal virtual void RaiseOnDeserializedEvent( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RaiseOnDeserializedEvent), typeof(Object) );
		}
        public void RaiseOnDeserializingEvent( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RaiseOnDeserializingEvent), typeof(Object) );
		}
    }
}