// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections.Concurrent;
using System;
using System.Reflection;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters;

namespace System.Runtime.Serialization {
    public static class FormatterServices {

        public static System.Reflection.MemberInfo[][] GetSerializableMembers( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSerializableMembers), typeof(Type) );
            return default( System.Reflection.MemberInfo[][] );

		}
        public static System.Reflection.MemberInfo[][] GetSerializableMembers( System.Type type, System.Runtime.Serialization.StreamingContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSerializableMembers), typeof(Type), typeof(StreamingContext) );
            return default( System.Reflection.MemberInfo[][] );

		}
        public static void CheckTypeSecurity( System.Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CheckTypeSecurity), typeof(Type), typeof(TypeFilterLevel) );
		}
        public static System.Object GetUninitializedObject( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetUninitializedObject), typeof(Type) );
            return default( System.Object );

		}
        public static System.Object GetSafeUninitializedObject( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSafeUninitializedObject), typeof(Type) );
            return default( System.Object );

		}
        internal static bool UnsafeTypeForwardersIsEnabled() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnsafeTypeForwardersIsEnabled) );
            return default( bool );

		}
        internal static void SerializationSetValue( System.Reflection.MemberInfo fi, System.Object target, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SerializationSetValue), typeof(MemberInfo), typeof(Object), typeof(Object) );
		}
        public static System.Object PopulateObjectMembers( System.Object obj, System.Reflection.MemberInfo[] members, System.Object[] data ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PopulateObjectMembers), typeof(Object), typeof(MemberInfo[]), typeof(Object[]) );
            return default( System.Object );

		}
        public static System.Object[][] GetObjectData( System.Object obj, System.Reflection.MemberInfo[] members ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectData), typeof(Object), typeof(MemberInfo[]) );
            return default( System.Object[][] );

		}
        public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference( System.Runtime.Serialization.ISerializationSurrogate innerSurrogate ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetSurrogateForCyclicalReference), typeof(ISerializationSurrogate) );
            return default( System.Runtime.Serialization.ISerializationSurrogate );

		}
        public static System.Type GetTypeFromAssembly( System.Reflection.Assembly assem, string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetTypeFromAssembly), typeof(Assembly), typeof(String) );
            return default( System.Type );

		}
        internal static System.Reflection.Assembly LoadAssemblyFromString( string assemblyName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LoadAssemblyFromString), typeof(String) );
            return default( System.Reflection.Assembly );

		}
        internal static System.Reflection.Assembly LoadAssemblyFromStringNoThrow( string assemblyName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LoadAssemblyFromStringNoThrow), typeof(String) );
            return default( System.Reflection.Assembly );

		}
        internal static string GetClrAssemblyName( System.Type type, out System.Boolean hasTypeForwardedFrom ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetClrAssemblyName), typeof(Type), typeof(Boolean) );
            hasTypeForwardedFrom = default( System.Boolean );

            return default( string );

		}
        internal static string GetClrTypeFullName( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetClrTypeFullName), typeof(Type) );
            return default( string );

		}
    }
}