// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System;

namespace System.ComponentModel {
    public class LicenseException: System.SystemException {

        public System.Type LicensedType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LicensedType));
				return default (Type);
			}
		}
        public LicenseException( System.Type type ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LicenseException), typeof(Type));
            }
        public LicenseException( System.Type type, System.Object instance ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LicenseException), typeof(Type), typeof(Object));
            }
        public LicenseException( System.Type type, System.Object instance, string message ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LicenseException), typeof(Type), typeof(Object), typeof(String));
            }
        public LicenseException( System.Type type, System.Object instance, string message, System.Exception innerException ) : base( default( string ) ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LicenseException), typeof(Type), typeof(Object), typeof(String), typeof(Exception));
            }
        public void GetObjectData( System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetObjectData), typeof(SerializationInfo), typeof(StreamingContext) );
		}
    }
}