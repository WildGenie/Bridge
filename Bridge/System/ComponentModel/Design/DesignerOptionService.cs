// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.ComponentModel.Design;
using System.ComponentModel;
using System.Collections;
using System;
using System.Globalization;

namespace System.ComponentModel.Design {
    public abstract class DesignerOptionService: System.ComponentModel.Design.IDesignerOptionService {

        public System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection Options {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Options));
				return default (DesignerOptionCollection);
			}
		}
        protected System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection CreateOptionCollection( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection parent, string name, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateOptionCollection), typeof(DesignerOptionCollection), typeof(String), typeof(Object) );
            return default( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection );

		}
        protected virtual void PopulateOptionCollection( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection options ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PopulateOptionCollection), typeof(DesignerOptionCollection) );
		}
        protected virtual bool ShowDialog( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection options, System.Object optionObject ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ShowDialog), typeof(DesignerOptionCollection), typeof(Object) );
            return default( bool );

		}
        System.Object @System.ComponentModel.Design.IDesignerOptionService.GetOptionValue( string pageName, string valueName ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.Design.IDesignerOptionService.GetOptionValue), typeof(String), typeof(String) );
            return default( System.Object );

		}
        void @System.ComponentModel.Design.IDesignerOptionService.SetOptionValue( string pageName, string valueName, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.Design.IDesignerOptionService.SetOptionValue), typeof(String), typeof(String), typeof(Object) );
		}
        public class DesignerOptionCollection: System.Collections.IList {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection Parent {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Parent));
				return default (DesignerOptionCollection);
			}
		}
        public System.ComponentModel.PropertyDescriptorCollection Properties {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Properties));
				return default (PropertyDescriptorCollection);
			}
		}
        bool @System.Collections.ICollection.IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}
        System.Object @System.Collections.ICollection.SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        bool @System.Collections.IList.IsFixedSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IList.IsFixedSize));
				return default (Boolean);
			}
		}

        public int Add(object value)
        {
            throw new NotImplementedException();
        }

        public void Clear()
        {
            throw new NotImplementedException();
        }

        public bool Contains(object value)
        {
            throw new NotImplementedException();
        }

        public int IndexOf(object value)
        {
            throw new NotImplementedException();
        }

        public void Insert(int index, object value)
        {
            throw new NotImplementedException();
        }

        public void Remove(object value)
        {
            throw new NotImplementedException();
        }

        public void RemoveAt(int index)
        {
            throw new NotImplementedException();
        }

        object IList.this[int index]
        {
            get { throw new NotImplementedException(); }
            set { throw new NotImplementedException(); }
        }

        bool @System.Collections.IList.IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IList.IsReadOnly));
				return default (Boolean);
			}
		}
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        public int IndexOf( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IndexOf), typeof(DesignerOptionCollection) );
            return default( int );

		}
        public bool ShowDialog() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ShowDialog) );
            return default( bool );

		}
        }
            public class DesignerOptionConverter: System.ComponentModel.TypeConverter {

            public override bool GetPropertiesSupported( System.ComponentModel.ITypeDescriptorContext cxt ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPropertiesSupported), typeof(ITypeDescriptorContext) );
                return default( bool );

		}
            public override System.ComponentModel.PropertyDescriptorCollection GetProperties( System.ComponentModel.ITypeDescriptorContext cxt, System.Object value, System.Attribute[] attributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProperties), typeof(ITypeDescriptorContext), typeof(Object), typeof(Attribute[]) );
                return default( System.ComponentModel.PropertyDescriptorCollection );

		}
            public override System.Object ConvertTo( System.ComponentModel.ITypeDescriptorContext cxt, System.Globalization.CultureInfo culture, System.Object value, System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertTo), typeof(ITypeDescriptorContext), typeof(CultureInfo), typeof(Object), typeof(Type) );
                return default( System.Object );

		}
            }
    }
}