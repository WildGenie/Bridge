// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections.Generic;
using System.ComponentModel.Design.Serialization;
using System;
using System.ComponentModel;
using System.ComponentModel.Design;

namespace System.ComponentModel.Design.Serialization {
    public abstract class MemberRelationshipService {

        public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.ComponentModel.Design.Serialization.MemberRelationship ); 
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        public System.ComponentModel.Design.Serialization.MemberRelationship this[System.Object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( System.ComponentModel.Design.Serialization.MemberRelationship ); 
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship( System.ComponentModel.Design.Serialization.MemberRelationship source ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetRelationship), typeof(MemberRelationship) );
            return default( System.ComponentModel.Design.Serialization.MemberRelationship );
        
		}
        protected virtual void SetRelationship( System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetRelationship), typeof(MemberRelationship), typeof(MemberRelationship) ); 
		}
        public abstract bool SupportsRelationship( System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship );

    }
}