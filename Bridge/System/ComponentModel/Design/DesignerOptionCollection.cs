// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.ComponentModel.Design;
using System;
using System.ComponentModel;

namespace System.ComponentModel.Design {
    public class DesignerOptionCollection: System.Collections.IList {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public string Name {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Name));
				return default (String);
			}
		}
        public System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection Parent {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Parent));
				return default (System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection);
			}
		}
        public System.ComponentModel.PropertyDescriptorCollection Properties {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Properties));
				return default (PropertyDescriptorCollection);
			}
		}
        bool @System.Collections.ICollection.IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}
        System.Object @System.Collections.ICollection.SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        bool @System.Collections.IList.IsFixedSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IList.IsFixedSize));
				return default (Boolean);
			}
		}

        public int Add(object value)
        {
            throw new NotImplementedException();
        }

        public void Clear()
        {
            throw new NotImplementedException();
        }

        public bool Contains(object value)
        {
            throw new NotImplementedException();
        }

        public int IndexOf(object value)
        {
            throw new NotImplementedException();
        }

        public void Insert(int index, object value)
        {
            throw new NotImplementedException();
        }

        public void Remove(object value)
        {
            throw new NotImplementedException();
        }

        public void RemoveAt(int index)
        {
            throw new NotImplementedException();
        }

        object IList.this[int index]
        {
            get { throw new NotImplementedException(); }
            set { throw new NotImplementedException(); }
        }

        bool @System.Collections.IList.IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IList.IsReadOnly));
				return default (Boolean);
			}
		}
        System.Object this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IList));
				return default (Object);
			}
		}
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        public int IndexOf( System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IndexOf), typeof(DesignerOptionCollection) );
            return default( int );

		}
        public bool ShowDialog() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ShowDialog) );
            return default( bool );

		}
    }
}