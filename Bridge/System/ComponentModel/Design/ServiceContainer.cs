// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.ComponentModel.Design;
using System.Diagnostics;
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace System.ComponentModel.Design {
    public class ServiceContainer: System.IDisposable, System.ComponentModel.Design.IServiceContainer {

        internal System.ComponentModel.Design.IServiceContainer Container {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Container));
				return default (IServiceContainer);
			}
		}
        internal virtual System.Type[][] DefaultServices {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DefaultServices));
				return default (Type[][]);
			}
		}
        public ServiceContainer(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ServiceContainer));
            }
        public ServiceContainer( System.IServiceProvider parentProvider )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ServiceContainer));
            }
        public void AddService( System.Type serviceType, System.Object serviceInstance ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddService), typeof(Type), typeof(Object) );
		}
        public virtual void AddService( System.Type serviceType, System.Object serviceInstance, bool promote ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddService), typeof(Type), typeof(Object), typeof(Boolean) );
		}
        public void AddService( System.Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddService), typeof(Type), typeof(ServiceCreatorCallback) );
		}
        public virtual void AddService( System.Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddService), typeof(Type), typeof(ServiceCreatorCallback), typeof(Boolean) );
		}
        public void Dispose() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose) );
		}
        protected virtual void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) );
		}
        public virtual System.Object GetService( System.Type serviceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetService), typeof(Type) );
            return default( System.Object );

		}
        public void RemoveService( System.Type serviceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveService), typeof(Type) );
		}
        public virtual void RemoveService( System.Type serviceType, bool promote ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveService), typeof(Type), typeof(Boolean) );
		}
    }
}