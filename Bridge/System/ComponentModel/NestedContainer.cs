// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.ComponentModel;
using System;

namespace System.ComponentModel {
    public class NestedContainer: System.ComponentModel.Container, System.ComponentModel.INestedContainer {

        public virtual System.ComponentModel.IComponent Owner { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Owner));
				return default (IComponent);
			}
		}
        internal virtual string OwnerName { 
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OwnerName));
				return default (String);
			}
		}
        public NestedContainer( System.ComponentModel.IComponent owner )  { 
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NestedContainer), typeof(IComponent));
            }
        protected override System.ComponentModel.ISite CreateSite( System.ComponentModel.IComponent component, string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateSite), typeof(IComponent), typeof(String) );
            return default( System.ComponentModel.ISite );
        
		}
        protected override void Dispose( bool disposing ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dispose), typeof(Boolean) ); 
		}
        protected override System.Object GetService( System.Type service ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetService), typeof(Type) );
            return default( System.Object );
        
		}
    }
}