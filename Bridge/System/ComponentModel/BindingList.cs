// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.ComponentModel;
using System.Collections.Generic;
using System.Collections;
using System;

namespace System.ComponentModel {
    public class BindingList<T>: IBindingList, IRaiseItemChangedEvents
    {

        internal bool ItemTypeHasDefaultConstructor {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ItemTypeHasDefaultConstructor));
				return default (Boolean);
			}
		}
        public bool RaiseListChangedEvents { get; set; }
        internal bool AddingNewHandled {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddingNewHandled));
				return default (Boolean);
			}
		}
        public bool AllowNew { get; set; }
        bool @System.ComponentModel.IBindingList.AllowNew {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.AllowNew));
				return default (Boolean);
			}
		}
        public bool AllowEdit { get; set; }
        bool @System.ComponentModel.IBindingList.AllowEdit {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.AllowEdit));
				return default (Boolean);
			}
		}
        public bool AllowRemove { get; set; }
        bool @System.ComponentModel.IBindingList.AllowRemove {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.AllowRemove));
				return default (Boolean);
			}
		}
        bool @System.ComponentModel.IBindingList.SupportsChangeNotification {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsChangeNotification));
				return default (Boolean);
			}
		}
        internal virtual bool SupportsChangeNotificationCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SupportsChangeNotificationCore));
				return default (Boolean);
			}
		}
        bool @System.ComponentModel.IBindingList.SupportsSearching {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsSearching));
				return default (Boolean);
			}
		}
        internal virtual bool SupportsSearchingCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SupportsSearchingCore));
				return default (Boolean);
			}
		}
        bool @System.ComponentModel.IBindingList.SupportsSorting {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsSorting));
				return default (Boolean);
			}
		}
        internal virtual bool SupportsSortingCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SupportsSortingCore));
				return default (Boolean);
			}
		}
        bool @System.ComponentModel.IBindingList.IsSorted {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.IsSorted));
				return default (Boolean);
			}
		}
        internal virtual bool IsSortedCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSortedCore));
				return default (Boolean);
			}
		}
        System.ComponentModel.PropertyDescriptor @System.ComponentModel.IBindingList.SortProperty {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SortProperty));
				return default (PropertyDescriptor);
			}
		}
        internal virtual System.ComponentModel.PropertyDescriptor SortPropertyCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SortPropertyCore));
				return default (PropertyDescriptor);
			}
		}
        System.ComponentModel.ListSortDirection @System.ComponentModel.IBindingList.SortDirection {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SortDirection));
				return default (ListSortDirection);
			}
		}
        internal virtual System.ComponentModel.ListSortDirection SortDirectionCore {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SortDirectionCore));
				return default (ListSortDirection);
			}
		}
        bool @System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents));
				return default (Boolean);
			}
		}
        #pragma warning disable 67
        public event System.ComponentModel.AddingNewEventHandler AddingNew;
        public event System.ComponentModel.ListChangedEventHandler ListChanged;
        #pragma warning disable 67

        public BindingList(  ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindingList<T>));
            }
        public BindingList( System.Collections.Generic.IList<T> list ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindingList<T>), typeof(IList));
            }
        protected virtual void OnAddingNew( System.ComponentModel.AddingNewEventArgs e ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnAddingNew), typeof(AddingNewEventArgs) );
		}
        protected virtual void OnListChanged( System.ComponentModel.ListChangedEventArgs e ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnListChanged), typeof(ListChangedEventArgs) );
		}
        public void ResetBindings() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResetBindings) );
		}
        public void ResetItem( int position ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResetItem), typeof(Int32) );
		}
        protected void ClearItems() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ClearItems) );
		}
        protected void InsertItem( int index, T item ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InsertItem), typeof(Int32), typeof(T) );
		}
        protected void RemoveItem( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveItem), typeof(Int32) );
		}
        protected void SetItem( int index, T item ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SetItem), typeof(Int32), typeof(T) );
		}
        public virtual void CancelNew( int itemIndex ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CancelNew), typeof(Int32) );
		}
        public virtual void EndNew( int itemIndex ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(EndNew), typeof(Int32) );
		}
        public T AddNew() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddNew) );
            return default( T );

		}
        protected virtual System.Object AddNewCore() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AddNewCore) );
            return default( System.Object );

		}
        protected virtual void ApplySortCore( System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ApplySortCore), typeof(PropertyDescriptor), typeof(ListSortDirection) );
		}
        protected virtual void RemoveSortCore() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RemoveSortCore) );
		}
        protected virtual int FindCore( System.ComponentModel.PropertyDescriptor prop, System.Object key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FindCore), typeof(PropertyDescriptor), typeof(Object) );
            return default( int );

		}

        public bool SupportsChangeNotification {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsChangeNotification));
				return default (Boolean);
			}
		}

        public bool SupportsSearching {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsSearching));
				return default (Boolean);
			}
		}

        public bool SupportsSorting {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SupportsSorting));
				return default (Boolean);
			}
		}

        public bool IsSorted {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.IsSorted));
				return default (Boolean);
			}
		}

        public System.ComponentModel.PropertyDescriptor SortProperty {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SortProperty));
				return default (PropertyDescriptor);
			}
		}

        public System.ComponentModel.ListSortDirection SortDirection {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IBindingList.SortDirection));
				return default (ListSortDirection);
			}
		}

        public bool RaisesItemChangedEvents {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.ComponentModel.IRaiseItemChangedEvents.RaisesItemChangedEvents));
				return default (Boolean);
			}
		}
        System.Object @System.ComponentModel.IBindingList.AddNew() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.AddNew) );
            return default( System.Object );

		}
        void @System.ComponentModel.IBindingList.ApplySort( System.ComponentModel.PropertyDescriptor prop, System.ComponentModel.ListSortDirection direction ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.ApplySort), typeof(PropertyDescriptor), typeof(ListSortDirection) );
		}
        void @System.ComponentModel.IBindingList.RemoveSort() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.RemoveSort) );
		}
        int @System.ComponentModel.IBindingList.Find( System.ComponentModel.PropertyDescriptor prop, System.Object key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.Find), typeof(PropertyDescriptor), typeof(Object) );
            return default( int );

		}
        void @System.ComponentModel.IBindingList.AddIndex( System.ComponentModel.PropertyDescriptor prop ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.AddIndex), typeof(PropertyDescriptor) );
		}
        void @System.ComponentModel.IBindingList.RemoveIndex( System.ComponentModel.PropertyDescriptor prop ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.ComponentModel.IBindingList.RemoveIndex), typeof(PropertyDescriptor) );
		}

        public IEnumerator GetEnumerator()
        {
            throw new NotImplementedException();
        }

        public int Count { get; }
        public void CopyTo(Array array, int arrayIndex)
        {
            throw new NotImplementedException();
        }

        public object SyncRoot { get; }
        public bool IsSynchronized { get; }

        public object this[int index]
        {
            get => throw new NotImplementedException();
            set => throw new NotImplementedException();
        }

        public bool IsReadOnly { get; }
        public bool IsFixedSize { get; }
        public int Add(object value)
        {
            throw new NotImplementedException();
        }

        public void Clear()
        {
            throw new NotImplementedException();
        }

        public bool Contains(object value)
        {
            throw new NotImplementedException();
        }

        public int IndexOf(object value)
        {
            throw new NotImplementedException();
        }

        public void Insert(int index, object value)
        {
            throw new NotImplementedException();
        }

        public void Remove(object value)
        {
            throw new NotImplementedException();
        }

        public void RemoveAt(int index)
        {
            throw new NotImplementedException();
        }
    }
}