// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.ComponentModel;
using System;

namespace System.ComponentModel {
    public class AttributeCollection: System.Collections.ICollection {

        internal virtual System.Attribute[][] Attributes {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Attributes));
				return default (Attribute[][]);
			}
		}
        public int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual System.Attribute this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Attribute));
				return default (Attribute);
			}
		}
        public virtual System.Attribute this[System.Type attributeType] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Attribute));
				return default (Attribute);
			}
		}
        int @System.Collections.ICollection.Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.Count));
				return default (Int32);
			}
		}
        bool @System.Collections.ICollection.IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}
        System.Object @System.Collections.ICollection.SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        public AttributeCollection( System.Attribute[] attributes )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AttributeCollection), typeof(Attribute[]));
            }
        public static System.ComponentModel.AttributeCollection FromExisting( System.ComponentModel.AttributeCollection existing, System.Attribute[] newAttributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(FromExisting), typeof(AttributeCollection), typeof(Attribute[]) );
            return default( System.ComponentModel.AttributeCollection );

		}
        public bool Contains( System.Attribute attribute ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(Attribute) );
            return default( bool );

		}
        public bool Contains( System.Attribute[] attributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Contains), typeof(Attribute[]) );
            return default( bool );

		}
        protected System.Attribute GetDefaultAttribute( System.Type attributeType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetDefaultAttribute), typeof(Type) );
            return default( System.Attribute );

		}
        public System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        public bool Matches( System.Attribute attribute ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Matches), typeof(Attribute) );
            return default( bool );

		}
        public bool Matches( System.Attribute[] attributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Matches), typeof(Attribute[]) );
            return default( bool );

		}
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}

        public bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}

        public System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        System.Collections.IEnumerator @System.Collections.IEnumerable.GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IEnumerable.GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
    }
}