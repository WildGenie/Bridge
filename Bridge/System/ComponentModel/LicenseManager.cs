// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.ComponentModel;
using System.Collections;
using System.ComponentModel.Design;
using System.Reflection;

namespace System.ComponentModel {
    public class LicenseManager {

        public static System.ComponentModel.LicenseContext CurrentContext { get; set; }
        public static System.ComponentModel.LicenseUsageMode UsageMode {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UsageMode));
				return default (LicenseUsageMode);
			}
		}
        public static System.Object CreateWithContext( System.Type type, System.ComponentModel.LicenseContext creationContext ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateWithContext), typeof(Type), typeof(LicenseContext) );
            return default( System.Object );

		}
        public static System.Object CreateWithContext( System.Type type, System.ComponentModel.LicenseContext creationContext, System.Object[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateWithContext), typeof(Type), typeof(LicenseContext), typeof(Object[]) );
            return default( System.Object );

		}
        public static bool IsLicensed( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsLicensed), typeof(Type) );
            return default( bool );

		}
        public static bool IsValid( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsValid), typeof(Type) );
            return default( bool );

		}
        public static bool IsValid( System.Type type, System.Object instance, out System.ComponentModel.License license ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsValid), typeof(Type), typeof(Object), typeof(License) );
            license = default( System.ComponentModel.License );

            return default( bool );

		}
        public static void LockContext( System.Object contextUser ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LockContext), typeof(Object) );
		}
        public static void UnlockContext( System.Object contextUser ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UnlockContext), typeof(Object) );
		}
        public static void Validate( System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Validate), typeof(Type) );
		}
        public static System.ComponentModel.License Validate( System.Type type, System.Object instance ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Validate), typeof(Type), typeof(Object) );
            return default( System.ComponentModel.License );

		}
    }
}