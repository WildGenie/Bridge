// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.ComponentModel;
using System.Globalization;
using System.Collections;

namespace System.ComponentModel {
    public class TypeConverter {

        internal static bool UseCompatibleTypeConversion {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(UseCompatibleTypeConversion));
				return default (Boolean);
			}
		}
        public bool CanConvertFrom( System.Type sourceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanConvertFrom), typeof(Type) );
            return default( bool );

		}
        public virtual bool CanConvertFrom( System.ComponentModel.ITypeDescriptorContext context, System.Type sourceType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanConvertFrom), typeof(ITypeDescriptorContext), typeof(Type) );
            return default( bool );

		}
        public bool CanConvertTo( System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanConvertTo), typeof(Type) );
            return default( bool );

		}
        public virtual bool CanConvertTo( System.ComponentModel.ITypeDescriptorContext context, System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanConvertTo), typeof(ITypeDescriptorContext), typeof(Type) );
            return default( bool );

		}
        public System.Object ConvertFrom( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFrom), typeof(Object) );
            return default( System.Object );

		}
        public virtual System.Object ConvertFrom( System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFrom), typeof(ITypeDescriptorContext), typeof(CultureInfo), typeof(Object) );
            return default( System.Object );

		}
        public System.Object ConvertFromInvariantString( string text ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFromInvariantString), typeof(String) );
            return default( System.Object );

		}
        public System.Object ConvertFromInvariantString( System.ComponentModel.ITypeDescriptorContext context, string text ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFromInvariantString), typeof(ITypeDescriptorContext), typeof(String) );
            return default( System.Object );

		}
        public System.Object ConvertFromString( string text ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFromString), typeof(String) );
            return default( System.Object );

		}
        public System.Object ConvertFromString( System.ComponentModel.ITypeDescriptorContext context, string text ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFromString), typeof(ITypeDescriptorContext), typeof(String) );
            return default( System.Object );

		}
        public System.Object ConvertFromString( System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertFromString), typeof(ITypeDescriptorContext), typeof(CultureInfo), typeof(String) );
            return default( System.Object );

		}
        public System.Object ConvertTo( System.Object value, System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertTo), typeof(Object), typeof(Type) );
            return default( System.Object );

		}
        public virtual System.Object ConvertTo( System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, System.Object value, System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertTo), typeof(ITypeDescriptorContext), typeof(CultureInfo), typeof(Object), typeof(Type) );
            return default( System.Object );

		}
        public string ConvertToInvariantString( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToInvariantString), typeof(Object) );
            return default( string );

		}
        public string ConvertToInvariantString( System.ComponentModel.ITypeDescriptorContext context, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToInvariantString), typeof(ITypeDescriptorContext), typeof(Object) );
            return default( string );

		}
        public string ConvertToString( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToString), typeof(Object) );
            return default( string );

		}
        public string ConvertToString( System.ComponentModel.ITypeDescriptorContext context, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToString), typeof(ITypeDescriptorContext), typeof(Object) );
            return default( string );

		}
        public string ConvertToString( System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ConvertToString), typeof(ITypeDescriptorContext), typeof(CultureInfo), typeof(Object) );
            return default( string );

		}
        public System.Object CreateInstance( System.Collections.IDictionary propertyValues ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateInstance), typeof(IDictionary) );
            return default( System.Object );

		}
        public virtual System.Object CreateInstance( System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CreateInstance), typeof(ITypeDescriptorContext), typeof(IDictionary) );
            return default( System.Object );

		}
        protected System.Exception GetConvertFromException( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetConvertFromException), typeof(Object) );
            return default( System.Exception );

		}
        protected System.Exception GetConvertToException( System.Object value, System.Type destinationType ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetConvertToException), typeof(Object), typeof(Type) );
            return default( System.Exception );

		}
        public bool GetCreateInstanceSupported() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCreateInstanceSupported) );
            return default( bool );

		}
        public virtual bool GetCreateInstanceSupported( System.ComponentModel.ITypeDescriptorContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetCreateInstanceSupported), typeof(ITypeDescriptorContext) );
            return default( bool );

		}
        public System.ComponentModel.PropertyDescriptorCollection GetProperties( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProperties), typeof(Object) );
            return default( System.ComponentModel.PropertyDescriptorCollection );

		}
        public System.ComponentModel.PropertyDescriptorCollection GetProperties( System.ComponentModel.ITypeDescriptorContext context, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProperties), typeof(ITypeDescriptorContext), typeof(Object) );
            return default( System.ComponentModel.PropertyDescriptorCollection );

		}
        public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties( System.ComponentModel.ITypeDescriptorContext context, System.Object value, System.Attribute[] attributes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetProperties), typeof(ITypeDescriptorContext), typeof(Object), typeof(Attribute[]) );
            return default( System.ComponentModel.PropertyDescriptorCollection );

		}
        public bool GetPropertiesSupported() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPropertiesSupported) );
            return default( bool );

		}
        public virtual bool GetPropertiesSupported( System.ComponentModel.ITypeDescriptorContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetPropertiesSupported), typeof(ITypeDescriptorContext) );
            return default( bool );

		}
        public System.Collections.ICollection GetStandardValues() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValues) );
            return default( System.Collections.ICollection );

		}
        public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues( System.ComponentModel.ITypeDescriptorContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValues), typeof(ITypeDescriptorContext) );
            return default( System.ComponentModel.TypeConverter.StandardValuesCollection );

		}
        public bool GetStandardValuesExclusive() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValuesExclusive) );
            return default( bool );

		}
        public virtual bool GetStandardValuesExclusive( System.ComponentModel.ITypeDescriptorContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValuesExclusive), typeof(ITypeDescriptorContext) );
            return default( bool );

		}
        public bool GetStandardValuesSupported() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValuesSupported) );
            return default( bool );

		}
        public virtual bool GetStandardValuesSupported( System.ComponentModel.ITypeDescriptorContext context ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetStandardValuesSupported), typeof(ITypeDescriptorContext) );
            return default( bool );

		}
        public bool IsValid( System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsValid), typeof(Object) );
            return default( bool );

		}
        public virtual bool IsValid( System.ComponentModel.ITypeDescriptorContext context, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsValid), typeof(ITypeDescriptorContext), typeof(Object) );
            return default( bool );

		}
        protected System.ComponentModel.PropertyDescriptorCollection SortProperties( System.ComponentModel.PropertyDescriptorCollection props, string[] names ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SortProperties), typeof(PropertyDescriptorCollection), typeof(String[]) );
            return default( System.ComponentModel.PropertyDescriptorCollection );

		}
        public abstract class SimplePropertyDescriptor: System.ComponentModel.PropertyDescriptor {

        public override System.Type ComponentType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ComponentType));
				return default (Type);
			}
		}
        public override bool IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsReadOnly));
				return default (Boolean);
			}
		}
        public override System.Type PropertyType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(PropertyType));
				return default (Type);
			}
		}
        public override bool CanResetValue( System.Object component ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CanResetValue), typeof(Object) );
            return default( bool );

		}
        public override void ResetValue( System.Object component ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ResetValue), typeof(Object) );
		}
        public override bool ShouldSerializeValue( System.Object component ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ShouldSerializeValue), typeof(Object) );
            return default( bool );

		}
        }
        public class StandardValuesCollection: System.Collections.ICollection {

        public int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public System.Object this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
				return default (Object);
			}
		}
        int @System.Collections.ICollection.Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.Count));
				return default (Int32);
			}
		}
        bool @System.Collections.ICollection.IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}
        System.Object @System.Collections.ICollection.SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        public StandardValuesCollection( System.Collections.ICollection values )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(StandardValuesCollection), typeof(ICollection));
            }
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        }
    }
}