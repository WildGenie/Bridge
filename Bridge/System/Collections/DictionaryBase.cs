// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;

namespace System.Collections {
    public abstract class DictionaryBase: System.Collections.IDictionary {

        internal System.Collections.Hashtable InnerHashtable {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InnerHashtable));
				return default (Hashtable);
			}
		}
        internal System.Collections.IDictionary Dictionary {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Dictionary));
				return default (IDictionary);
			}
		}
        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        bool @System.Collections.IDictionary.IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.IsReadOnly));
				return default (Boolean);
			}
		}
        bool @System.Collections.IDictionary.IsFixedSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.IsFixedSize));
				return default (Boolean);
			}
		}
        bool @System.Collections.ICollection.IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}

        public object this[object key]
        {
            get => throw new NotImplementedException();
            set => throw new NotImplementedException();
        }

        System.Collections.ICollection @System.Collections.IDictionary.Keys {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.Keys));
				return default (ICollection);
			}
		}
        System.Object @System.Collections.ICollection.SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}
        System.Collections.ICollection @System.Collections.IDictionary.Values {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.Values));
				return default (ICollection);
			}
		}
        public void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        public System.Collections.IDictionaryEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IDictionaryEnumerator );

		}
        protected virtual System.Object OnGet( System.Object key, System.Object currentValue ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnGet), typeof(Object), typeof(Object) );
            return default( System.Object );

		}
        protected virtual void OnSet( System.Object key, System.Object oldValue, System.Object newValue ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnSet), typeof(Object), typeof(Object), typeof(Object) );
		}
        protected virtual void OnInsert( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnInsert), typeof(Object), typeof(Object) );
		}
        protected virtual void OnClear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnClear) );
		}
        protected virtual void OnRemove( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnRemove), typeof(Object), typeof(Object) );
		}
        protected virtual void OnValidate( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnValidate), typeof(Object), typeof(Object) );
		}
        protected virtual void OnSetComplete( System.Object key, System.Object oldValue, System.Object newValue ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnSetComplete), typeof(Object), typeof(Object), typeof(Object) );
		}
        protected virtual void OnInsertComplete( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnInsertComplete), typeof(Object), typeof(Object) );
		}
        protected virtual void OnClearComplete() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnClearComplete) );
		}
        protected virtual void OnRemoveComplete( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(OnRemoveComplete), typeof(Object), typeof(Object) );
		}

        public bool IsReadOnly {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.IsReadOnly));
				return default (Boolean);
			}
		}

        public bool IsFixedSize {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.IsFixedSize));
				return default (Boolean);
			}
		}

        public bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.IsSynchronized));
				return default (Boolean);
			}
		}

        public System.Collections.ICollection Keys {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.Keys));
				return default (ICollection);
			}
		}

        public System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.ICollection.SyncRoot));
				return default (Object);
			}
		}

        public System.Collections.ICollection Values {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(System.Collections.IDictionary.Values));
				return default (ICollection);
			}
		}
        bool @System.Collections.IDictionary.Contains( System.Object key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IDictionary.Contains), typeof(Object) );
            return default( bool );

		}
        void @System.Collections.IDictionary.Add( System.Object key, System.Object value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IDictionary.Add), typeof(Object), typeof(Object) );
		}
        void @System.Collections.IDictionary.Remove( System.Object key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IDictionary.Remove), typeof(Object) );
		}
        System.Collections.IEnumerator @System.Collections.IEnumerable.GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(@System.Collections.IEnumerable.GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
    }
}