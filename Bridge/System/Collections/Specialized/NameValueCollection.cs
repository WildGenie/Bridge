// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System.Runtime.Serialization;
using System;
using System.Collections.Specialized;

namespace System.Collections.Specialized {
    public class NameValueCollection: System.Collections.Specialized.NameObjectCollectionBase {

        public new string this[string name] {
			get {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
			return default( string );
		}
			set {
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
		} }
        public string this[int index] {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod("indexer");
				return default (String);
			}
		}
        public virtual string[][] AllKeys {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AllKeys));
				return default (String[][]);
			}
		}
        public NameValueCollection(  )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection));
            }
        public NameValueCollection( System.Collections.Specialized.NameValueCollection col )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(NameValueCollection));
            }
        public NameValueCollection( System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(IHashCodeProvider), typeof(IComparer));
            }
        public NameValueCollection( int capacity )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(Int32));
            }
        public NameValueCollection( System.Collections.IEqualityComparer equalityComparer )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(IEqualityComparer));
            }
        public NameValueCollection( int capacity, System.Collections.IEqualityComparer equalityComparer )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(Int32), typeof(IEqualityComparer));
            }
        public NameValueCollection( int capacity, System.Collections.Specialized.NameValueCollection col )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(Int32), typeof(NameValueCollection));
            }
        public NameValueCollection( int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(NameValueCollection), typeof(Int32), typeof(IHashCodeProvider), typeof(IComparer));
            }
        protected void InvalidateCachedArrays() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InvalidateCachedArrays) );
		}
        public void Add( System.Collections.Specialized.NameValueCollection c ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(NameValueCollection) );
		}
        public virtual void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        public void CopyTo( System.Array dest, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public bool HasKeys() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasKeys) );
            return default( bool );

		}
        internal virtual bool InternalHasKeys() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(InternalHasKeys) );
            return default( bool );

		}
        public virtual void Add( string name, string value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(String), typeof(String) );
		}
        public virtual string Get( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Get), typeof(String) );
            return default( string );

		}
        public virtual string[][] GetValues( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetValues), typeof(String) );
            return default( string[][] );

		}
        public virtual void Set( string name, string value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Set), typeof(String), typeof(String) );
		}
        public virtual void Remove( string name ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(String) );
		}
        public virtual string Get( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Get), typeof(Int32) );
            return default( string );

		}
        public virtual string[][] GetValues( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetValues), typeof(Int32) );
            return default( string[][] );

		}
        public virtual string GetKey( int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetKey), typeof(Int32) );
            return default( string );

		}
    }
}