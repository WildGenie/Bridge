// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Collections;
using System;
using System.Collections.Generic;
using System.Collections.Specialized;

namespace System.Collections.Specialized {
    public class StringDictionary: System.Collections.IEnumerable {

        public virtual int Count {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Count));
				return default (Int32);
			}
		}
        public virtual bool IsSynchronized {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsSynchronized));
				return default (Boolean);
			}
		}

        public virtual System.Collections.ICollection Keys {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Keys));
				return default (ICollection);
			}
		}
        public virtual System.Object SyncRoot {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(SyncRoot));
				return default (Object);
			}
		}
        public virtual System.Collections.ICollection Values {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Values));
				return default (ICollection);
			}
		}
        public virtual void Add( string key, string value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Add), typeof(String), typeof(String) );
		}
        public virtual void Clear() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Clear) );
		}
        public virtual bool ContainsKey( string key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContainsKey), typeof(String) );
            return default( bool );

		}
        public virtual bool ContainsValue( string value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ContainsValue), typeof(String) );
            return default( bool );

		}
        public virtual void CopyTo( System.Array array, int index ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(CopyTo), typeof(Array), typeof(Int32) );
		}
        public virtual System.Collections.IEnumerator GetEnumerator() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetEnumerator) );
            return default( System.Collections.IEnumerator );

		}
        public virtual void Remove( string key ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Remove), typeof(String) );
		}
        internal void ReplaceHashtable( System.Collections.Hashtable useThisHashtableInstead ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReplaceHashtable), typeof(Hashtable) );
		}
        internal System.Collections.Generic.IDictionary<string, string> AsGenericDictionary() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(AsGenericDictionary) );
            return default( System.Collections.Generic.IDictionary<string, string> );

		}
    }
}