// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Dynamic;
using System;
using System.Collections;
using System.Linq.Expressions;
using System.Collections.Generic;
using System.Linq;

namespace System.Dynamic {
    public abstract class BindingRestrictions {

        internal string DebugView {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DebugView));
				return default (String);
			}
		}
        internal abstract System.Linq.Expressions.Expression GetExpression();

        public System.Dynamic.BindingRestrictions Merge( System.Dynamic.BindingRestrictions restrictions ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Merge), typeof(BindingRestrictions) );
            return default( System.Dynamic.BindingRestrictions );

		}
        public static System.Dynamic.BindingRestrictions GetTypeRestriction( System.Linq.Expressions.Expression expression, System.Type type ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetTypeRestriction), typeof(Expression), typeof(Type) );
            return default( System.Dynamic.BindingRestrictions );

		}
        internal static System.Dynamic.BindingRestrictions GetTypeRestriction( System.Dynamic.DynamicMetaObject obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetTypeRestriction), typeof(DynamicMetaObject) );
            return default( System.Dynamic.BindingRestrictions );

		}
        public static System.Dynamic.BindingRestrictions GetInstanceRestriction( System.Linq.Expressions.Expression expression, System.Object instance ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetInstanceRestriction), typeof(Expression), typeof(Object) );
            return default( System.Dynamic.BindingRestrictions );

		}
        public static System.Dynamic.BindingRestrictions GetExpressionRestriction( System.Linq.Expressions.Expression expression ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetExpressionRestriction), typeof(Expression) );
            return default( System.Dynamic.BindingRestrictions );

		}
        public static System.Dynamic.BindingRestrictions Combine( System.Collections.Generic.IList<System.Dynamic.DynamicMetaObject> contributingObjects ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Combine), typeof(IList) );
            return default( System.Dynamic.BindingRestrictions );

		}
        public System.Linq.Expressions.Expression ToExpression() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToExpression) );
            return default( System.Linq.Expressions.Expression );

		}
    }
}