// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System.Dynamic;
using System.Linq.Expressions;
using System;
using System.Collections.Generic;
using System.Linq;

namespace System.Dynamic {
    public class DynamicMetaObject {
        public System.Linq.Expressions.Expression Expression {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Expression));
				return default (Expression);
			}
		}
        public System.Dynamic.BindingRestrictions Restrictions {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Restrictions));
				return default (BindingRestrictions);
			}
		}
        public System.Object Value {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Value));
				return default (Object);
			}
		}
        public bool HasValue {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(HasValue));
				return default (Boolean);
			}
		}
        public System.Type RuntimeType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(RuntimeType));
				return default (Type);
			}
		}
        public System.Type LimitType {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(LimitType));
				return default (Type);
			}
		}
        public DynamicMetaObject( System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DynamicMetaObject), typeof(Expression), typeof(BindingRestrictions));
            }
        public DynamicMetaObject( System.Linq.Expressions.Expression expression, System.Dynamic.BindingRestrictions restrictions, System.Object value )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DynamicMetaObject), typeof(Expression), typeof(BindingRestrictions), typeof(Object));
            }
        public virtual System.Dynamic.DynamicMetaObject BindConvert( System.Dynamic.ConvertBinder binder ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindConvert), typeof(ConvertBinder) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindGetMember( System.Dynamic.GetMemberBinder binder ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindGetMember), typeof(GetMemberBinder) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindSetMember( System.Dynamic.SetMemberBinder binder, System.Dynamic.DynamicMetaObject value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindSetMember), typeof(SetMemberBinder), typeof(DynamicMetaObject) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindDeleteMember( System.Dynamic.DeleteMemberBinder binder ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindDeleteMember), typeof(DeleteMemberBinder) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindGetIndex( System.Dynamic.GetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindGetIndex), typeof(GetIndexBinder), typeof(DynamicMetaObject[]) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindSetIndex( System.Dynamic.SetIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes, System.Dynamic.DynamicMetaObject value ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindSetIndex), typeof(SetIndexBinder), typeof(DynamicMetaObject[]), typeof(DynamicMetaObject) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindDeleteIndex( System.Dynamic.DeleteIndexBinder binder, System.Dynamic.DynamicMetaObject[] indexes ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindDeleteIndex), typeof(DeleteIndexBinder), typeof(DynamicMetaObject[]) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindInvokeMember( System.Dynamic.InvokeMemberBinder binder, System.Dynamic.DynamicMetaObject[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindInvokeMember), typeof(InvokeMemberBinder), typeof(DynamicMetaObject[]) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindInvoke( System.Dynamic.InvokeBinder binder, System.Dynamic.DynamicMetaObject[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindInvoke), typeof(InvokeBinder), typeof(DynamicMetaObject[]) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindCreateInstance( System.Dynamic.CreateInstanceBinder binder, System.Dynamic.DynamicMetaObject[] args ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindCreateInstance), typeof(CreateInstanceBinder), typeof(DynamicMetaObject[]) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindUnaryOperation( System.Dynamic.UnaryOperationBinder binder ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindUnaryOperation), typeof(UnaryOperationBinder) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Dynamic.DynamicMetaObject BindBinaryOperation( System.Dynamic.BinaryOperationBinder binder, System.Dynamic.DynamicMetaObject arg ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(BindBinaryOperation), typeof(BinaryOperationBinder), typeof(DynamicMetaObject) );
            return default( System.Dynamic.DynamicMetaObject );

		}
        public virtual System.Collections.Generic.IEnumerable<string> GetDynamicMemberNames() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetDynamicMemberNames) );
            return default( System.Collections.Generic.IEnumerable<string> );

		}
        internal static System.Linq.Expressions.Expression[][] GetExpressions( System.Dynamic.DynamicMetaObject[] objects ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetExpressions), typeof(DynamicMetaObject[]) );
            return default( System.Linq.Expressions.Expression[][] );

		}
        public static System.Dynamic.DynamicMetaObject Create( System.Object value, System.Linq.Expressions.Expression expression ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Create), typeof(Object), typeof(Expression) );
            return default( System.Dynamic.DynamicMetaObject );

		}
    }
}