// THIS FILE WAS AUTOMATICALLY GENERATED BY STUBBER

using System;
using System.Buffers;

namespace System {
    public struct ReadOnlyMemory<T> {

        internal string DebuggerDisplay {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DebuggerDisplay));
				return default (String);
			}
		}
        public static System.ReadOnlyMemory<T> Empty {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Empty));
				return default (ReadOnlyMemory<T>);
			}
		}
        public int Length {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Length));
				return default (Int32);
			}
		}
        public bool IsEmpty {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(IsEmpty));
				return default (Boolean);
			}
		}
        public ReadOnlySpan<T> Span {
			get{
				Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Span));
				return default (ReadOnlySpan<T>);
			}
		}
        public ReadOnlyMemory( T[] array )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadOnlyMemory<T>), typeof(T[]));

            }
        public ReadOnlyMemory( T[] array, int start, int length )  {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ReadOnlyMemory<T>), typeof(T[]), typeof(Int32), typeof(Int32));

            }
        public System.ReadOnlyMemory<T> Slice( int start ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Slice), typeof(Int32) );
            return default( System.ReadOnlyMemory<T> );

		}
        public System.ReadOnlyMemory<T> Slice( int start, int length ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Slice), typeof(Int32), typeof(Int32) );
            return default( System.ReadOnlyMemory<T> );

		}
        public System.Buffers.MemoryHandle Retain( bool pin ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Retain), typeof(Boolean) );
            return default( System.Buffers.MemoryHandle );

		}
        public bool DangerousTryGetArray( out System.ArraySegment<T> arraySegment ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(DangerousTryGetArray), typeof(ArraySegment<T>) );

            return default( bool );

		}
        public T[][] ToArray() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(ToArray) );
            return default( T[][] );

		}
        public override bool Equals( System.Object obj ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(Object) );
            return default( bool );

		}
        public bool Equals( System.ReadOnlyMemory<T> other ) {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(Equals), typeof(ReadOnlyMemory<T>) );
            return default( bool );

		}
        public override int GetHashCode() {
			Bridge.Luna.Utils.Debug.WarnNotImplementedMethod(nameof(GetHashCode) );
            return default( int );

		}
    }
}